{"version":3,"sources":["components/popup/modal-overlay/modal-overlay.module.css","components/popup/popup.module.css","components/burger-constructor/constructor-item/constructor-item.module.css","pages/home-page/home-page.module.css","components/burger-constructor/burger-constructor.module.css","components/app-header/app-header.tsx","components/popup/modal/modal.tsx","components/popup/modal-overlay/modal-overlay.tsx","hooks.ts","utils/index.tsx","utils/burger-api.ts","services/actions.ts","components/popup/popup.tsx","components/ingredient-details/ingredient-details.tsx","images/done.png","components/loader/loader.tsx","components/order-details/order-details.tsx","components/burger-ingredients/menu-item/menu-item.tsx","components/tabs/tabs.tsx","components/burger-ingredients/burger-ingredients.tsx","components/burger-constructor/constructor-item/constructor-item.tsx","components/burger-constructor/burger-constructor.tsx","pages/home-page/home-page.tsx","services/user-actions.ts","components/user-form/user-form.tsx","pages/login-page/login-page.tsx","pages/register-page/register-page.tsx","pages/forgot-password-page/forgot-password-page.tsx","pages/reset-password-page/reset-password-page.tsx","components/feed/feed-item/feed-item.tsx","components/feed/feed.tsx","components/feed/feed-info/feed-info.tsx","services/feed-actions.ts","pages/feed-page/feed-page.tsx","pages/not-found-page/not-found-page.tsx","components/user-profile/user-profile.tsx","services/orders-actions.ts","components/feed/user-feed/user-feed.tsx","pages/profile-page/profile-page.tsx","components/order/order.tsx","pages/order-page/order-page.tsx","components/protected-route/protected-route.tsx","components/app/app.tsx","reportWebVitals.ts","services/reducer/burger-ingredients.ts","services/reducer/order.ts","services/reducer/burger-constructor.ts","services/reducer/user.ts","services/reducer/ws-feed.ts","services/reducer/ws-orders.ts","services/reducer/index.ts","services/middleware/socketMiddleware.ts","services/store.ts","index.tsx","components/feed/feed-info/feed-info.module.css","components/order/order.module.css","pages/profile-page/profile-page.module.css","components/feed/feed-item/feed-item.module.css","components/app-header/app-header.module.css","components/ingredient-details/ingredient-details.module.css","components/loader/loader.module.css","components/user-form/user-form.module.css","components/order-details/order-details.module.css","components/burger-ingredients/burger-ingredients.module.css","components/feed/user-feed/user-feed.module.css","components/popup/modal/modal.module.css","components/burger-ingredients/menu-item/menu-item.module.css","pages/feed-page/feed-page.module.css","components/feed/feed.module.css","pages/not-found-page/not-found-page.module.css","components/user-profile/user-profile.module.css"],"names":["module","exports","AppHeader","isConstructor","useRouteMatch","path","exact","isFeed","isProfile","style","backgroundColor","className","styles","menu","nav_div","to","activeClassName","active","type","logo","Modal","children","onClose","title","container","inside","header","onClick","ModalOverlay","overlay","useDispatch","dispatchHook","useSelector","selectorHook","getCookie","name","matches","document","cookie","match","RegExp","replace","decodeURIComponent","undefined","setCookie","value","props","exp","expires","d","Date","setTime","getTime","toUTCString","updatedCookie","encodeURIComponent","propName","propValue","calculateTotalPrice","ingredients","bun","reduce","total","item","price","getOrderIngredients","ids","length","map","id","ingredient","filter","_id","count","idForCount","getOrderDate","date","CreatedDate","CurrentDate","setHours","dayCount","Math","ceil","hours","getHours","minutes","getMinutes","CurrentDay","getTimezoneOffset","divideIntoColumns","orders","firstColumn","slice","secondColumn","baseUrl","baseHeaders","handleRequest","res","ok","json","then","error","Promise","reject","getIngredients","a","fetch","getOrderNumber","orderData","fetchWithRefresh","method","headers","authorization","body","JSON","stringify","getOrderRequest","orderNumber","register","email","password","login","forgotPassword","resetPassword","token","logout","localStorage","getItem","refreshToken","url","options","message","refreshData","setItem","accessToken","split","getUser","updateUser","GET_INGREDIENTS_REQUEST","GET_INGREDIENTS_SUCCESS","GET_INGREDIENTS_FAILURE","ADD_CONSTRUCTOR_ITEM","DELETE_CONSTRUCTOR_ITEM","REORDER_CONSTRUCTOR_ITEMS","DELETE_ORDER","GET_ORDER_DETAILS_REQUEST","GET_ORDER_DETAILS_SUCCESS","GET_ORDER_DETAILS_FAILURE","SET_ORDER_INVALID","DELETE_ORDER_DETAILS","GET_ORDER_REQUEST","GET_ORDER_SUCCESS","GET_ORDER_FAILURE","modalRoot","getElementById","Popup","history","useHistory","dispatch","isOrdered","store","order","goBack","payload","exitOnEsc","event","keyCode","useEffect","addEventListener","removeEventListener","ReactDOM","createPortal","popup","IngredientDetails","useParams","product","burgerIngredients","find","details","src","image_large","alt","nutrition","calories","proteins","fat","carbohydrates","Loader","loading","dot","OrderDetails","isOrderInvalid","burgerConstructor","burgerStuffing","error_text","main","shadow","Done","MenuItem","menuItem","useDrag","collect","monitor","isDrop","didDrop","dragRef","ref","size","image","Tabs","titles","setCurrent","current","display","key","BurgerIngredients","location","useLocation","useState","useInView","threshold","bunInView","sauce","sauceInView","mainInView","scroll_menu","onScroll","items","pathname","state","background","link","ConstructorItem","findItem","moveItem","originalIndex","index","isDrag","isDragging","end","drag","useDrop","accept","handlerId","getHandlerId","hover","draggedId","overIndex","drop","opacity","node","text","thumbnail","image_mobile","isLocked","handleClose","handleDeleteItem","BurgerConstructor","isToken","stuffingIngredients","totalPrice","unshift","push","ClearBurgerConstructor","useCallback","indexOf","fromIndex","toIndex","handlerDropItem","isHover","isOver","dropTarget","dropRef","topBun","constructor_item_pos_top","constructor_item","constructor_item__row","bottomBun","constructor_item_pos_bottom","stuffing","section","scroll","total_order","isOrderValid","stuffingIds","success","number","Error","console","log","HomePage","DndProvider","backend","HTML5Backend","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILURE","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAILURE","RESET_PASSWORD_REQUEST","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_FAILURE","REFRESH_TOKEN_REQUEST","REFRESH_TOKEN_SUCCESS","REFRESH_TOKEN_FAILURE","GET_USER_REQUEST","GET_USER_SUCCESS","GET_USER_FAILURE","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","UPDATE_USER_FAILURE","getUserData","user","UserForm","links","emailValue","setEmailValue","passwordValue","setPasswordValue","nameValue","setNameValue","handleLogin","preventDefault","authToken","handleRegister","handleCodeSend","handlePasswordRenew","content","onSubmit","form","placeholder","onChange","e","target","icon","createContent","LoginPage","userEmail","from","RegisterPage","getUserRequest","ForgotPasswordPage","ResetPasswordPage","forgotSuccess","userToken","textColor","done","pending","cancel","FeedItem","isStatus","status","createdAt","allIngredients","itemIngredients","feed_item","numbers","color","info","zIndex","maxAmount","Feed","messages","wsFeed","FeedInfo","statusColumns","result","sortByStatus","doneColumns","pendingColumns","ready","preparing","light","totalToday","wsFeedActions","wsInit","wsClose","wsSendMessage","onOpen","onError","onMessage","FeedPage","loader","NotFoundPage","notfound_id","notfound","notfound_404","UserProfile","currentName","currentEmail","isFocusEmail","setEmailFocus","isFocusPassword","setPasswordFocus","isFocusName","setNameFocus","nameIcon","emailIcon","passwordIcon","isDataChanged","onFocus","onBlur","onIconClick","button","wsOrdersActions","UserFeed","wsOrders","ProfilePage","nav","removeItem","component","Order","currentOrder","feedOrders","userOrders","getOrder","orderIngredients","orderIngredientsSet","row","OrderPage","ProtectedRoute","rest","width","height","alignItems","justifyContent","render","App","isIngredientsLoaded","data","action","ingredientDetails","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","ingredientsRequest","ingredientsFailure","orderNumberRequest","orderNumberFailure","orderRequest","orderFailure","uuidv4","splice","registrationRequest","registrationFailure","loginRequest","loginFailure","logoutRequest","logoutFailure","getUserFailure","updateRequest","updateFailure","forgotRequest","forgotFailure","resetRequest","resetFailure","tokenRefreshRequest","tokenRefreshSuccess","tokenRefreshFailure","User","wsConnected","createBrowserHistory","rootReducer","combineReducers","router","connectRouter","socketMiddleware","wsUrl","wsActions","socket","next","WebSocket","onopen","onerror","onmessage","parsedData","parse","onclose","close","send","enhancer","applyMiddleware","thunk","routerMiddleware","createStore","composeWithDevTools","StrictMode"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,QAAU,+BAA+B,OAAS,gC,oBCApED,EAAOC,QAAU,CAAC,MAAQ,uB,oBCA1BD,EAAOC,QAAU,CAAC,KAAO,iC,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,0B,yCCAzBD,EAAOC,QAAU,CAAC,KAAO,iCAAiC,OAAS,mCAAmC,KAAO,iCAAiC,QAAU,oCAAoC,YAAc,wCAAwC,iBAAmB,6CAA6C,yBAA2B,qDAAqD,4BAA8B,wDAAwD,sBAAwB,oD,mJCmDjeC,EA1CG,WAChB,IAAMC,IAAkBC,YAAc,CAAEC,KAAM,IAAKC,OAAO,IACpDC,IAAWH,YAAc,SACzBI,IAAcJ,YAAc,YAElC,OACE,wBAAQK,MAAO,CAAEC,gBAAiB,WAAlC,SACE,sBAAKC,UAAWC,IAAOC,KAAvB,UACE,sBAAKF,UAAWC,IAAOE,QAAvB,UACE,eAAC,IAAD,CACER,OAAK,EACLS,GAAG,IACHC,gBAAiBJ,IAAOK,OACxBN,UAAS,uDAJX,UAME,cAAC,aAAD,CAAYO,KAAMf,EAAgB,UAAY,cAAgB,IANhE,wEASA,eAAC,IAAD,CACEY,GAAG,QACHC,gBAAiBJ,IAAOK,OACxBN,UAAU,sDAHZ,UAKE,cAAC,WAAD,CAAUO,KAAMX,EAAS,UAAY,cALvC,mFAQF,cAAC,IAAD,CAAMQ,GAAG,IAAIJ,UAAWC,IAAOO,KAA/B,SACE,cAAC,OAAD,MAEF,eAAC,IAAD,CACEJ,GAAG,WACHC,gBAAiBJ,IAAOK,OACxBN,UAAU,sDAHZ,UAKE,cAAC,cAAD,CAAaO,KAAMV,EAAY,UAAY,cAL7C,4F,iBCpBOY,EAde,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAClD,OACE,qBAAKZ,UAAWC,IAAOY,UAAvB,SACE,sBAAKb,UAAS,gBAAWC,IAAOa,QAAhC,UACE,sBAAKd,UAAWC,IAAOc,OAAvB,UACE,mBAAGf,UAAU,sCAAb,SAAoDY,IACpD,cAAC,YAAD,CAAWI,QAASL,EAASJ,KAAK,eAEnCG,Q,kBCLMO,EAJmC,SAAC,GAAiB,IAAfN,EAAc,EAAdA,QACnD,OAAO,qBAAKX,UAAWC,IAAOiB,QAASF,QAASL,K,kBCErCQ,EAAc,kBAAMC,eACpBC,EAA+CC,I,8BCN/CC,EAAY,SAACC,GACxB,IAAMC,EAAUC,SAASC,OAAOC,MAC9B,IAAIC,OACF,WACEL,EAAKM,QAAQ,+BAAgC,QAC7C,aAGN,OAAOL,EAAUM,mBAAmBN,EAAQ,SAAMO,GAGvCC,EAAY,SACvBT,EACAU,EACAC,GAMA,IAAIC,GAJJD,EAAK,aACHzC,KAAM,KACHyC,IAEWE,QACVC,EAAI,IAAIC,KACI,iBAAPH,GAAmBA,IAC5BE,EAAEE,QAAQF,EAAEG,UAAkB,IAANL,GACxBA,EAAMD,EAAME,SAAWC,GAErBF,GAAOE,EAAEI,cACXP,EAAME,QAAUC,EAAEI,eAGpB,IAAIC,EAAgBnB,EAAO,KAD3BU,EAAQU,mBAAmBV,IAE3B,IAAK,IAAMW,KAAYV,EAAO,CAC5BQ,GAAiB,KAAOE,EACxB,IAAMC,EAAYX,EAAMU,IACN,IAAdC,IACFH,GAAiB,IAAMG,GAG3BpB,SAASC,OAASgB,GAOPI,EAAsB,SACjCC,EACAC,GAEA,OAAKD,GAEQ,OAAXA,QAAW,IAAXA,OAAA,EAAAA,EAAaE,QAAO,SAACC,EAAOC,GAAR,OAAiBD,GAAK,OAAGC,QAAH,IAAGA,OAAH,EAAGA,EAAMC,SAAO,IACtC,IAAhB,OAAHJ,QAAG,IAAHA,OAAA,EAAAA,EAAKI,QAAS,GAHQ,GAOdC,EAAsB,SACjCN,EACAO,GAEA,GAAKP,GAAsC,IAAvBA,EAAYQ,QAAiBD,GAAsB,IAAfA,EAAIC,OAU5D,OAReD,EAAIE,KAAI,SAACC,GACtB,IAAMC,EAAU,OAAGX,QAAH,IAAGA,OAAH,EAAGA,EAAaY,QAAO,SAACR,GAAD,OAAUA,EAAKS,MAAQH,KAAI,GAC5DI,EAAQP,EAAIK,QAAO,SAACG,GAAD,OAAgBA,IAAeL,KAAIF,OAI5D,OAHIG,IACFA,EAAWG,MAAQA,GAEdH,KAEKC,QAAO,SAACR,GAAD,QAAYA,MAUtBY,EAAe,SAACC,GAC3B,IAAMC,EAAc,IAAI3B,KAAK0B,GACvBE,GAAc,IAAI5B,MAAO6B,SAAS,EAAG,EAAG,EAAG,GAE3CC,EAAWC,KAAKC,MACnBJ,EAAcD,EAAYzB,WAA3B,OAEI+B,EACJN,EAAYO,WAAa,EACrBP,EAAYO,WADhB,WAEQP,EAAYO,YAChBC,EACJR,EAAYS,aAAe,EACvBT,EAAYS,aADhB,WAEQT,EAAYS,cAEtB,MAAM,GAAN,OAvBiB,SAACN,GAAD,OACJ,IAAbA,EACI,6CACa,IAAbA,EACA,iCADA,UAEGA,EAFH,qEAoBMO,CAAWP,GAArB,aAAmCG,EAAnC,YAA4CE,EAA5C,mBACsC,EAAnCR,EAAYW,oBAA4B,KAiBhCC,EAAoB,SAACC,GAChC,GAAKA,GAA4B,IAAlBA,EAAOvB,OAItB,MAAO,CAAEwB,YAHWD,EAAOE,MAAM,EAAG,IAGdC,aAFDH,EAAOE,MAAM,GAAI,MCrHlCE,EAAU,wCACVC,EAAc,CAAE,eAAgB,oBAWhCC,EAAgB,SAACC,GACrB,OAAOA,EAAIC,GACPD,EAAIE,OACJF,EAAIE,OAAOC,MAAK,SAACC,GAAD,OAAWC,QAAQC,OAAOF,OAGnCG,EAAc,uCAAG,4BAAAC,EAAA,sEACVC,MAAM,GAAD,OAAIZ,EAAJ,iBADK,cACtBG,EADsB,gBAEfD,EAAcC,GAFC,mFAAH,qDAKdU,EAAc,uCAAG,WAAOC,GAAP,SAAAH,EAAA,sEACfI,EAAiB,GAAD,OAAIf,EAAJ,WAAsB,CACjDgB,OAAQ,OACRC,QAAQ,2BACHhB,GADE,IAELiB,cAAe,UAAY9E,EAAU,WAEvC+E,KAAMC,KAAKC,UAAU,CAAExD,YAAaiD,MAPV,mFAAH,sDAWdQ,EAAe,uCAAG,WAAOC,GAAP,eAAAZ,EAAA,sEACXC,MAAM,GAAD,OAAIZ,EAAJ,mBAAsBuB,GAAe,CAC1DP,OAAQ,MACRC,QAAShB,IAHkB,cACvBE,EADuB,gBAKhBD,EAAcC,GALE,mFAAH,sDAkBfqB,EAAQ,uCAAG,WACtBC,EACAC,EACArF,GAHsB,eAAAsE,EAAA,sEAKJC,MAAM,GAAD,OAAIZ,EAAJ,kBAA6B,CAClDgB,OAAQ,OACRC,QAAShB,EACTkB,KAAMC,KAAKC,UAAU,CAAEI,QAAOC,WAAUrF,WARpB,cAKhB8D,EALgB,gBAUTD,EAAcC,GAVL,mFAAH,0DAaRwB,EAAK,uCAAG,WAAOF,EAAeC,GAAtB,eAAAf,EAAA,sEACDC,MAAM,GAAD,OAAIZ,EAAJ,eAA0B,CAC/CgB,OAAQ,OACRC,QAAShB,EACTkB,KAAMC,KAAKC,UAAU,CAAEI,QAAOC,eAJb,cACbvB,EADa,gBAMND,EAAcC,GANR,mFAAH,wDASLyB,EAAc,uCAAG,WAAOH,GAAP,eAAAd,EAAA,sEACVC,MAAM,GAAD,OAAIZ,EAAJ,mBAA8B,CACnDgB,OAAQ,OACRC,QAAShB,EACTkB,KAAMC,KAAKC,UAAU,CAAEI,YAJG,cACtBtB,EADsB,gBAMfD,EAAcC,GANC,mFAAH,sDASd0B,EAAa,uCAAG,WAAOH,EAAkBI,GAAzB,eAAAnB,EAAA,sEACTC,MAAM,GAAD,OAAIZ,EAAJ,yBAAoC,CACzDgB,OAAQ,OACRC,QAAShB,EACTkB,KAAMC,KAAKC,UAAU,CAAEK,WAAUI,YAJR,cACrB3B,EADqB,gBAMdD,EAAcC,GANA,mFAAH,wDASb4B,EAAM,uCAAG,4BAAApB,EAAA,sEACFC,MAAM,GAAD,OAAIZ,EAAJ,gBAA2B,CAChDgB,OAAQ,OACRC,QAAShB,EACTkB,KAAMC,KAAKC,UAAU,CAAES,MAAOE,aAAaC,QAAQ,oBAJjC,cACd9B,EADc,gBAMPD,EAAcC,GANP,mFAAH,qDASN+B,EAAY,uCAAG,4BAAAvB,EAAA,sEACRC,MAAM,GAAD,OAAIZ,EAAJ,eAA0B,CAC/CgB,OAAQ,OACRC,QAAShB,EACTkB,KAAMC,KAAKC,UAAU,CAAES,MAAOE,aAAaC,QAAQ,oBAJ3B,cACpB9B,EADoB,gBAMbD,EAAcC,GAND,mFAAH,qDASZY,EAAgB,uCAAG,WAAOoB,EAAaC,GAApB,mBAAAzB,EAAA,+EAEVC,MAAMuB,EAAKC,GAFD,cAEtBjC,EAFsB,gBAGfD,EAAcC,GAHC,2EAKR,gBAAhB,KAAIkC,QALoB,kCAMAH,IANA,eAMpBI,EANoB,OAO1BN,aAAaO,QAAQ,eAAgBD,EAAYJ,cACjDpF,EAAU,QAASwF,EAAYE,YAAYC,MAAM,WAAW,IAC3DL,EAAQnB,QAAsCC,cAC7CoB,EAAYE,YAVY,UAWR5B,MAAMuB,EAAKC,GAXH,eAWpBjC,EAXoB,iBAYbD,EAAcC,GAZD,0EAcnBK,QAAQC,OAAR,OAdmB,yDAAH,wDAmBhBiC,EAAO,uCAAG,sBAAA/B,EAAA,sEACRI,EAAiB,GAAD,OAAIf,EAAJ,cAAyB,CACpDgB,OAAQ,MACRC,QAAQ,2BACHhB,GADE,IAELiB,cAAe,UAAY9E,EAAU,aALpB,mFAAH,qDAUPuG,EAAU,uCAAG,WACxBtG,EACAoF,EACAC,GAHwB,SAAAf,EAAA,sEAKXI,EAAiB,GAAD,OAAIf,EAAJ,cAAyB,CACpDgB,OAAQ,QACRC,QAAQ,2BACHhB,GADE,IAELiB,cAAe,UAAY9E,EAAU,WAEvC+E,KAAMC,KAAKC,UAAU,CAAEhF,OAAMoF,QAAOC,eAXd,mFAAH,0DChIVkB,EACX,0BACWC,EACX,0BACWC,EACX,0BAEWC,GACX,uBACWC,GACX,0BACWC,GACX,4BAEWC,GAA+B,eAE/BC,GACX,4BACWC,GACX,4BACWC,GACX,4BAEWC,GAAyC,oBAEzCC,GACX,uBAEWC,GAAyC,oBACzCC,GAAyC,oBACzCC,GAAyC,oBCjChDC,GAAYpH,SAASqH,eAAe,SAwC3BC,GAtCe,SAAC,GAAyB,IAAvBtI,EAAsB,EAAtBA,SAAUE,EAAY,EAAZA,MACnCqI,EAAUC,cACVC,EAAWhI,IACTiI,EAAc/H,GAAY,SAACgI,GAAD,OAAWA,EAAMC,SAA3CF,UAEFzI,EAAU,WACdsI,EAAQM,SACJH,IACFD,EAAS,CAAE5I,KAAM8H,KACjBc,EAAS,CAAE5I,KAAMmI,GAAsBc,SAAS,MAI9CC,EAAY,SAACC,GACK,KAAlBA,EAAMC,SACRhJ,KAYJ,OARAiJ,qBAAU,WAGR,OAFAlI,SAASmI,iBAAiB,UAAWJ,GAE9B,WACL/H,SAASoI,oBAAoB,UAAWL,MAEzC,IAEIM,IAASC,aACd,sBAAKhK,UAAWC,IAAOgK,MAAOvG,GAAG,QAAjC,UACE,cAAC,EAAD,CAAO/C,QAASA,EAASC,MAAOA,EAAhC,SACGF,IAEH,cAAC,EAAD,CAAcC,QAASA,OAEzBmI,K,oBCaWoB,GArDW,WACxB,IAAQxG,EAAOyG,cAAPzG,GAMF0G,EAJc/I,GAClB,SAACgI,GAAD,OAAWA,EAAMgB,kBAAkBrH,eAGTsH,MAC1B,SAAC3G,GAAD,OAAgCA,EAAWE,MAAQH,KAGrD,OACE,mCACG0G,GACC,sBAAKpK,UAAWC,KAAOsK,QAAvB,UACE,qBAAKC,IAAKJ,EAAQK,YAAaC,IAAKN,EAAQ5I,KAAMxB,UAAU,SAC5D,mBAAGA,UAAU,6BAAb,SAA2CoK,EAAQ5I,OACnD,oBAAGxB,UAAU,wCAAb,4CACSoK,EAAQ5I,KADjB,yaAIA,sBAAKxB,UAAS,8BAAyBC,KAAO0K,WAA9C,UACE,sBAAK3K,UAAS,eAAUC,KAAOmD,MAA/B,UACE,sBAAMpD,UAAU,8BAAhB,iFACA,sBAAMA,UAAU,qCAAhB,SACGoK,EAAQQ,cAGb,sBAAK5K,UAAS,eAAUC,KAAOmD,MAA/B,UACE,sBAAMpD,UAAU,8BAAhB,oDACA,sBAAMA,UAAU,qCAAhB,SACGoK,EAAQS,cAGb,sBAAK7K,UAAS,eAAUC,KAAOmD,MAA/B,UACE,sBAAMpD,UAAU,8BAAhB,8CACA,sBAAMA,UAAU,qCAAhB,SACGoK,EAAQU,SAGb,sBAAK9K,UAAS,WAAMC,KAAOmD,MAA3B,UACE,sBAAMpD,UAAU,8BAAhB,sEACA,sBAAMA,UAAU,qCAAhB,SACGoK,EAAQW,4BCjDV,OAA0B,iC,wCCe1BC,GAZA,WACb,OACE,sBAAKhL,UAAWC,KAAOgL,QAAvB,UACE,qBAAKjL,UAAWC,KAAOiL,MACvB,qBAAKlL,UAAWC,KAAOiL,MACvB,qBAAKlL,UAAWC,KAAOiL,MACvB,qBAAKlL,UAAWC,KAAOiL,MACvB,qBAAKlL,UAAWC,KAAOiL,UC+CdC,GAnDM,WACnB,MAAwC9J,GAAY,SAACgI,GAAD,OAAWA,EAAMC,SAA7D5C,EAAR,EAAQA,YAAa0E,EAArB,EAAqBA,eAGrB,OAA8B,IAFH/J,GAAY,SAACgI,GAAD,OAAWA,EAAMgC,qBAAhDC,eAEW9H,OAEf,sBAAKxD,UAAS,2CAAsCC,KAAOsL,YAA3D,UACE,gDACA,kKAKFH,EAEA,sBAAKpL,UAAS,2CAAsCC,KAAOsL,YAA3D,UACE,gDACA,+KAKD7E,EASH,sBAAK1G,UAAWC,KAAOuL,KAAvB,UACE,sBACExL,UAAS,gDAA2CC,KAAOwL,QAD7D,SAGG/E,IAEH,sBAAM1G,UAAU,kCAAhB,iIAGA,qBAAKwK,IAAKkB,GAAM1L,UAAU,cAAc0K,IAAI,cAC5C,sBAAM1K,UAAU,wCAAhB,qJAGA,sBAAMA,UAAU,kDAAhB,+PApBA,qBAAKA,UAAU,OAAf,SACE,cAAC,GAAD,O,2DC2BO2L,GAhDsB,SAACC,GACpC,MAAgCvK,GAC9B,SAACgI,GAAD,OAAWA,EAAMgC,qBADXC,EAAR,EAAQA,eAAgBrI,EAAxB,EAAwBA,IAgBlBa,EAXkB,QAAlB8H,EAASrL,MACD,OAAH0C,QAAG,IAAHA,OAAA,EAAAA,EAAKY,OAAQ+H,EAAS/H,IAAM,EAAI,EAElCyH,EAAepI,QACpB,SAACY,EAAeV,GACd,OAAOA,EAAKA,KAAKS,MAAQ+H,EAAS/H,MAAQC,EAAQA,IAEpD,GAMJ,EAA8B+H,aAAQ,CACpCtL,KAAM,aACN6C,KAAMwI,EACNE,QAAS,SAACC,GAAD,MAAc,CACrBC,OAAQD,EAAQE,cAJpB,oBAAmBC,GAAnB,KAASF,OAAT,MAQA,OACE,sBAAKhM,UAAS,0BAAqBC,KAAOmD,MAAQ+I,IAAKD,EAAvD,UACGpI,EAAQ,GAAK,cAAC,UAAD,CAASA,MAAOA,EAAOsI,KAAK,UAC1C,qBACE5B,IAAKoB,EAASS,MACd3B,IAAKkB,EAASpK,KACdxB,UAAU,mBAEZ,oBAAGA,UAAS,wCAAmCC,KAAOoD,OAAtD,UACGuI,EAASvI,MACV,cAAC,eAAD,CAAc9C,KAAK,eAErB,mBACEP,UAAS,0DAAqDC,KAAOW,OADvE,SAGGgL,EAASpK,WC/BH8K,GAjBa,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,QACjD,OACE,qBAAK3M,MAAO,CAAE4M,QAAS,QAAU1M,UAAU,8BAA3C,SACGuM,EAAO9I,KAAI,SAAC7C,GAAD,OACV,cAAC,MAAD,CAEEsB,MAAOtB,EAAML,KACbD,OAAQmM,IAAY7L,EAAML,KAC1BS,QAASwL,EAJX,SAMG5L,EAAMY,MALFZ,EAAM+L,W,6BCuENC,GAvEW,WACxB,IAAMC,EAAWC,cAEjB,EAA8BC,mBAAiB,OAA/C,oBAAON,EAAP,KAAgBD,EAAhB,KAEMxJ,EAAc3B,GAClB,SAACgI,GAAD,OAAWA,EAAMgB,kBAAkBrH,eAG/BuJ,EAAS,CACb,CAAE/K,KAAM,iCAASmL,IAAK,IAAKpM,KAAM,OACjC,CAAEiB,KAAM,iCAASmL,IAAK,IAAKpM,KAAM,SACjC,CAAEiB,KAAM,6CAAWmL,IAAK,IAAKpM,KAAM,SAGrC,EAAyByM,aAAU,CACjCC,UAAW,KADb,oBAAOhK,EAAP,KAAYiK,EAAZ,KAIA,EAA6BF,aAAU,CACrCC,UAAW,KADb,oBAAOE,EAAP,KAAcC,EAAd,KAIA,EAA2BJ,aAAU,CACnCC,UAAW,KADb,oBAAOzB,EAAP,KAAa6B,EAAb,KAUA,OACE,0BAASrN,UAAS,eAAUC,KAAOY,WAAnC,UACE,oBAAIb,UAAU,uCAAd,mGACA,cAAC,GAAD,CAAMuM,OAAQA,EAAQC,WAAYA,EAAYC,QAASA,IACvD,qBAAKzM,UAAS,eAAUC,KAAOqN,aAAeC,SAV7B,WACnBL,GAAaV,EAAW,OACxBY,IAAgBF,GAAaV,EAAW,SACxCa,IAAeD,GAAeZ,EAAW,SAOvC,SACGD,EAAO9I,KAAI,YAA0B,IAAvBjC,EAAsB,EAAtBA,KAAMmL,EAAgB,EAAhBA,IAAKpM,EAAW,EAAXA,KAClBiN,EAAQxK,EAAYY,QACxB,SAACwG,GAAD,OAA6BA,EAAQ7J,OAASA,KAEhD,OACE,sBAEE4L,IAAc,QAAT5L,EAAiB0C,EAAe,UAAT1C,EAAmB4M,EAAQ3B,EAFzD,UAIE,oBAAIxL,UAAU,uCAAd,SAAsDwB,IACtD,oBAAIxB,UAAS,oBAAeC,KAAOC,MAAnC,SACGsN,EAAM/J,KAAI,SAACmI,GAAD,OACT,6BACE,cAAC,IAAD,CACExL,GAAI,CACFqN,SAAS,gBAAD,OAAkB7B,EAAS/H,KACnC6J,MAAO,CAAEC,WAAYd,IAEvB7M,UAAWC,KAAO2N,KALpB,SAOE,cAAC,GAAD,eAAchC,OARTA,EAAS/H,YANjB8I,Y,mDCyBJkB,GAlEwB,SAAC,GAAsC,IAApCzK,EAAmC,EAAnCA,KAAMM,EAA6B,EAA7BA,GAAIoK,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACtD5E,EAAWhI,cAMX6M,EAAgBF,EAASpK,GAAIuK,MAEnC,EAA2BpC,cACzB,iBAAO,CACLtL,KAAM,OACN6C,KAAM,CAAEM,KAAIsK,iBACZlC,QAAS,SAACC,GAAD,MAAc,CACrBmC,OAAQnC,EAAQoC,eAElBC,IAAK,SAAChL,EAAM2I,GACV,IAAQrI,EAAsBN,EAAtBM,GAAIsK,EAAkB5K,EAAlB4K,cACIjC,EAAQE,WAEtB8B,EAASrK,EAAIsK,OAInB,CAACtK,EAAIsK,EAAeD,IAftB,oBAASG,EAAT,KAASA,OAAUG,EAAnB,KAkBA,EAA8BC,aAC5B,CACEC,OAAQ,OACRzC,QAFF,SAEUC,GACN,MAAO,CACLyC,UAAWzC,EAAQ0C,iBAGvBC,MAPF,SAOQtL,EAAkB2I,GACtB,IAAM4C,EAAYvL,EAAKM,GACvB,GAAIiL,IAAcjL,EAAI,CACpB,IAAekL,EAAcd,EAASpK,GAA9BuK,MACRF,EAASY,EAAWC,MAI1B,CAACd,EAAUC,IAhBb,oBAAsBc,GAAtB,KAASL,UAAT,MAmBMM,EAAUZ,EAAS,EAAI,EAE7B,OACE,qBACE/B,IAAK,SAAC4C,GAAD,OAAUV,EAAKQ,EAAKE,KACzBjP,MAAO,CAAEgP,WACT9O,UAAWC,KAAOmD,KAHpB,UAKE,cAAC,WAAD,CAAU7C,KAAK,YACf,cAAC,qBAAD,CACEyO,KAAM5L,EAAKA,KAAK5B,KAChByN,UAAW7L,EAAKA,KAAK8L,aACrB7L,MAAOD,EAAKA,KAAKC,MACjB8L,UAAU,EACVC,YAzDmB,SAAChM,GAAD,OAAiC,WACxD+F,EAAS,CAAE5I,KAAM4H,GAAyBqB,QAASpG,KAwDlCiM,CAAiBjM,S,SC0IvBkM,GA3LW,WACxB,IAAMnG,EAAWhI,IACX0L,EAAWC,cACX7D,EAAUC,cACVqG,EAAUpI,aAAaC,QAAQ,gBAErC,EAAgC/F,GAC9B,SAACgI,GAAD,OAAWA,EAAMgC,qBADXpI,EAAR,EAAQA,IAAKqI,EAAb,EAAaA,eAIPkE,EAAsBlE,EAAe7H,KACzC,SAACE,GAAD,OAAuCA,EAAWP,QAE9CqM,EAAa1M,EAAoByM,EAAqBvM,GACxDA,IACFuM,EAAoBE,QAAQzM,GAC5BuM,EAAoBG,KAAK1M,IAK3B,IAqCM2M,EAAyB,WAC7BzG,EAAS,CAAE5I,KAAMmI,GAAsBc,SAAS,KAK5CsE,EAAW+B,uBACf,SAAClD,GACC,IAAMhJ,EAAa2H,EAAe1H,QAChC,SAACR,GAAD,OAAiCA,EAAKuJ,MAAQA,KAC9C,GACF,MAAO,CACLhJ,aACAsK,MAAO3C,EAAewE,QAAQnM,MAGlC,CAAC2H,IAGGyC,EAAW8B,uBACf,SAAClD,EAAKoD,GACJ,IAAQ9B,EAAUH,EAASnB,GAAnBsB,MACR9E,EAAS,CACP5I,KAAM6H,GACNoB,QAAS,CAAEwG,QAAS/B,EAAO8B,iBAG/B,CAACjC,EAAUxC,EAAgBnC,IAG7B,EAAkCmF,aAAQ,CACxCC,OAAQ,aACRM,KAFwC,SAEnCzL,IArEiB,SAACA,GACvB+F,EAAS,CACP5I,KAAM2H,GACNsB,QAASpG,IAmET6M,CAAgB7M,IAElB0I,QAAS,SAACC,GAAD,MAAc,CACrBmE,QAASnE,EAAQoE,aANrB,oBAASD,EAAT,KAASA,QAAWE,EAApB,KAUA,EAAoB9B,cAAQ,iBAAO,CAAEC,OAAQ,WAApC8B,EAAT,qBAGM1C,EAAauC,EAAU,UAAY,UACnCI,EACJ,qBACEtQ,UAAS,UAAKC,KAAOsQ,yBAAZ,YAAwCtQ,KAAOuQ,kBACxD1Q,MAAO,CAAE6N,cAFX,SAIE,sBAAM3N,UAAWC,KAAOwQ,sBAAxB,+FAIEC,EACJ,qBACE1Q,UAAS,UAAKC,KAAO0Q,4BAAZ,YAA2C1Q,KAAOuQ,kBAC3D1Q,MAAO,CAAE6N,cAFX,SAIE,sBAAM3N,UAAWC,KAAOwQ,sBAAxB,+FAIEG,EACJ,qBACE5Q,UAAS,UAAKC,KAAOuQ,iBAAZ,YAAgCvQ,KAAOuQ,kBAChD1Q,MAAO,CAAE6N,cAFX,SAIE,sBAAM3N,UAAWC,KAAOwQ,sBAAxB,2GAIJ,OACE,0BACEtE,IAAKiE,EACLpQ,UAAS,gBAAWC,KAAO4Q,SAC3BnN,GAAG,YAHL,UAKE,sBAAK1D,UAAWC,KAAOuL,KAAvB,UACGvI,EACC,cAAC,qBAAD,CACE+L,KAAI,UAAK/L,EAAIzB,KAAT,+BACJjB,KAAK,MACL0O,UAAWhM,EAAIiM,aACf7L,MAAOJ,EAAII,MACX8L,UAAU,IAGZmB,EAEDhF,EAAe9H,OACd,oBAAI2I,IAAKkE,EAASrQ,UAAS,oBAAeC,KAAO6Q,QAAjD,SACGxF,EAAe7H,KAAI,SAACL,GAAD,OAClB,qBAAoBpD,UAAWC,KAAOmD,KAAtC,SACE,cAAC,GAAD,CACEM,GAAIN,EAAKuJ,IACTvJ,KAAMA,EACN0K,SAAUA,EACVC,SAAUA,KALJ3K,EAAKuJ,UAWnBiE,EAED3N,EACC,cAAC,qBAAD,CACE+L,KAAI,iBAAK/L,QAAL,IAAKA,OAAL,EAAKA,EAAKzB,KAAV,yBACJjB,KAAK,SACL0O,UAAS,OAAEhM,QAAF,IAAEA,OAAF,EAAEA,EAAKiM,aAChB7L,MAAK,OAAEJ,QAAF,IAAEA,OAAF,EAAEA,EAAKI,MACZ8L,UAAU,IAGZuB,KAGJ,sBAAK1Q,UAAS,mBAAcC,KAAO8Q,aAAnC,UACE,uBAAM/Q,UAAU,qCAAhB,UACGyP,EADH,IACe,cAAC,eAAD,CAAclP,KAAK,eAElC,cAAC,SAAD,CAAQA,KAAK,UAAU6L,KAAK,QAAQpL,QAvJxB,WAChB,GAAIuO,EAAS,CACX,IAAMyB,IAAiB/N,EACjBgO,EAAczB,EAAoB/L,KACtC,SAACL,GAAD,OAA0BA,EAAKS,OAE7BmN,GAAgBC,EAAYzN,OAAS,GACvC2F,EAAS,CAAE5I,KAAMkI,GAAmBe,SAAUwH,IAC9C7H,GV8FkClD,EU9FTgL,EV+F/B,uCAAO,WAAgB9H,GAAhB,eAAArD,EAAA,6DACLqD,EAAS,CACP5I,KAAM+H,KAFH,kBAMetC,EAAeC,GAN9B,YAMGX,EANH,UAOQA,EAAI4L,QAPZ,gBAQD/H,EAAS,CACP5I,KAAMgI,GACNiB,QAASlE,EAAIgE,MAAM6H,SAVpB,6BAaK,IAAIC,MAAM,6BAbf,0DAgBHjI,EAAS,CACP5I,KAAMiI,KAER6I,QAAQC,IAAI,6CAA8C,KAAM9J,SAnB7D,0DAAP,wDU9FMyB,EAAQ0G,KAAK,CACXlC,SAAU,SACVC,MAAO,CACLC,WAAYd,KAGhB+C,MAEAzG,EAAS,CAAE5I,KAAMkI,GAAmBe,SAAUwH,IAC9C/H,EAAQ0G,KAAK,CACXlC,SAAU,SACVC,MAAO,CACLC,WAAYd,WAKlB1D,EAASwG,aAAK,WV4EqB,IAAC1J,GUiDlC,oG,qBCxLOsL,GAXE,WACf,OACE,qBAAKvR,UAAWC,KAAOuL,KAAvB,SACE,eAACgG,GAAA,EAAD,CAAaC,QAASC,KAAtB,UACE,cAAC,GAAD,IACA,cAAC,GAAD,UCEKC,GAAuC,mBACvCC,GAAuC,mBACvCC,GAAuC,mBAEvCC,GAAiC,gBACjCC,GAAiC,gBACjCC,GAAiC,gBAEjCC,GAAmC,iBACnCC,GAAmC,iBACnCC,GAAmC,iBAEnCC,GACX,0BACWC,GACX,0BACWC,GACX,0BAEWC,GACX,yBACWC,GACX,yBACWC,GACX,yBAEWC,GACX,wBACWC,GACX,wBACWC,GACX,wBAEWC,GAAuC,mBACvCC,GAAuC,mBACvCC,GAAuC,mBAEvCC,GAA6C,sBAC7CC,GAA6C,sBAC7CC,GAA6C,sBA8Q7CC,GAAwB,WACnC,8CAAO,WAAgBhK,GAAhB,eAAArD,EAAA,6DACLqD,EAAS,CACP5I,KAAMsS,KAFH,kBAKehL,IALf,YAKGvC,EALH,UAMQA,EAAI4L,QANZ,gBAOD/H,EAAS,CACP5I,KAAMuS,GACNtJ,QAAS,CAAE4J,KAAM9N,EAAI8N,QATtB,6BAYK,IAAIhC,MAAM,0BAZf,0DAeHjI,EAAS,CACP5I,KAAMwS,KAER1B,QAAQC,IAAI,yCAA0C,KAAM9J,SAlBzD,0DAAP,uD,oBCzLa6L,GA1HgB,SAAC,GAA4B,IAA1BzS,EAAyB,EAAzBA,MAAO0S,EAAkB,EAAlBA,MAAO/S,EAAW,EAAXA,KACxC4I,EAAWhI,IAEjB,EAAoC4L,mBAAiB,IAArD,oBAAOwG,EAAP,KAAmBC,EAAnB,KACA,EAA0CzG,mBAAiB,IAA3D,oBAAO0G,EAAP,KAAsBC,EAAtB,KACA,EAAkC3G,mBAAiB,IAAnD,oBAAO4G,EAAP,KAAkBC,EAAlB,KAEMC,EAAc,SAACnK,GD2KY,IAAC9C,EAAOC,EC1KvC6C,EAAMoK,iBACN3K,GDyKgCvC,ECzKb2M,EDyKoB1M,ECzKR4M,ED0KjC,uCAAO,WAAgBtK,GAAhB,mBAAArD,EAAA,6DACLqD,EAAS,CACP5I,KAAMuR,KAFH,kBAMehL,EAAMF,EAAOC,GAN5B,YAMGvB,EANH,UAOQA,EAAI4L,QAPZ,iBAQK6C,EAAYzO,EAAIqC,YAAYC,MAAM,WAAW,GAC7CP,EAAe/B,EAAI+B,aACzBpF,EAAU,QAAS8R,GACnB5M,aAAaO,QAAQ,eAAgBL,GACrC8B,EAAS,CACP5I,KAAMwR,GACNvI,QAAS,CAAE4J,KAAM9N,EAAI8N,QAdtB,8BAiBK,IAAIhC,MAAM,yBAjBf,0DAoBHjI,EAAS,CACP5I,KAAMyR,KAERX,QAAQC,IAAI,yCAA0C,KAAM9J,SAvBzD,0DAAP,yDCvKMwM,EAAiB,SAACtK,GDwIY,IAAC9C,EAAOC,EAAUrF,ECvIpDkI,EAAMoK,iBACN3K,GDsImCvC,ECtIb2M,EDsIoB1M,ECtIR4M,EDsIkBjS,ECtIHmS,EDuInD,uCAAO,WAAgBxK,GAAhB,mBAAArD,EAAA,6DACLqD,EAAS,CACP5I,KAAMoR,KAFH,kBAMehL,EAASC,EAAOC,EAAUrF,GANzC,YAMG8D,EANH,UAOQA,EAAI4L,QAPZ,iBAQK6C,EAAYzO,EAAIqC,YAAYC,MAAM,WAAW,GAC7CP,EAAe/B,EAAI+B,aACzBpF,EAAU,QAAS8R,GACnB5M,aAAaO,QAAQ,eAAgBL,GACrC8B,EAAS,CACP5I,KAAMqR,GACNpI,QAAS,CAAE4J,KAAM9N,EAAI8N,QAdtB,8BAkBK,IAAIhC,MAAM,4BAlBf,0DAqBHjI,EAAS,CACP5I,KAAMsR,KAERR,QAAQC,IAAI,yCAA0C,KAAM9J,SAxBzD,0DAAP,yDCpIMyM,EAAiB,SAACvK,GDwNkB,IAAC9C,ECvNzC8C,EAAMoK,iBACN3K,GDsNyCvC,ECtNb2M,EDuN9B,uCAAO,WAAgBpK,GAAhB,eAAArD,EAAA,6DACLqD,EAAS,CACP5I,KAAM6R,KAFH,kBAMerL,EAAeH,GAN9B,YAMGtB,EANH,UAOQA,EAAI4L,QAPZ,iBAQD/H,EAAS,CACP5I,KAAM8R,KAERlJ,EAASwG,aAAK,oBAXb,8BAaK,IAAIyB,MAAM,6BAbf,0DAgBHjI,EAAS,CACP5I,KAAM+R,KAERjB,QAAQC,IAAI,yCAA0C,KAAM9J,SAnBzD,0DAAP,yDCpNM0M,EAAsB,SAACxK,GD4OY,IAAC7C,EAAUI,EC3OlDyC,EAAMoK,iBACN3K,GD0OwCtC,EC1Ob4M,ED0OuBxM,EC1OR0M,ED2O5C,uCAAO,WAAgBxK,GAAhB,eAAArD,EAAA,6DACLqD,EAAS,CACP5I,KAAMgS,KAFH,kBAMevL,EAAcH,EAAUI,GANvC,YAMG3B,EANH,UAOQA,EAAI4L,QAPZ,gBAQD/H,EAASwG,aAAK,WARb,6BAUK,IAAIyB,MAAM,4BAVf,0DAaHjI,EAAS,CACP5I,KAAMkS,KAERpB,QAAQC,IAAI,yCAA0C,KAAM9J,SAhBzD,0DAAP,yDCpJM2M,EApFgB,WACpB,OAAQ5T,GACN,IAAK,QACH,OACE,uBAAM6T,SAAUP,EAAa7T,UAAWC,KAAOoU,KAA/C,UACE,cAAC,QAAD,CACE9T,KAAK,QACL+T,YAAY,SACZpS,MAAOqR,EACPgB,SAAU,SAACC,GAAD,OAAOhB,EAAcgB,EAAEC,OAAOvS,UAE1C,cAAC,gBAAD,CACEA,MAAOuR,EACPjS,KAAK,WACL+S,SAAU,SAACC,GAAD,OAAOd,EAAiBc,EAAEC,OAAOvS,UAE7C,cAAC,SAAD,CAAQ3B,KAAK,UAAU6L,KAAK,SAA5B,+CAKN,IAAK,WACH,OACE,uBAAMgI,SAAUJ,EAAgBhU,UAAWC,KAAOoU,KAAlD,UACE,cAAC,QAAD,CACE9T,KAAK,OACL+T,YAAY,qBACZpS,MAAOyR,EACPY,SAAU,SAACC,GAAD,OAAOZ,EAAaY,EAAEC,OAAOvS,UAEzC,cAAC,QAAD,CACE3B,KAAK,QACL+T,YAAY,SACZpS,MAAOqR,EACPgB,SAAU,SAACC,GAAD,OAAOhB,EAAcgB,EAAEC,OAAOvS,UAE1C,cAAC,gBAAD,CACEA,MAAOuR,EACPjS,KAAK,WACL+S,SAAU,SAACC,GAAD,OAAOd,EAAiBc,EAAEC,OAAOvS,UAE7C,cAAC,SAAD,CAAQ3B,KAAK,UAAU6L,KAAK,SAA5B,6HAKN,IAAK,kBACH,OACE,uBAAMgI,SAAUH,EAAgBjU,UAAWC,KAAOoU,KAAlD,UACE,cAAC,QAAD,CACE9T,KAAK,QACL+T,YAAY,oDACZpS,MAAOqR,EACPgB,SAAU,SAACC,GAAD,OAAOhB,EAAcgB,EAAEC,OAAOvS,UAE1C,cAAC,SAAD,CAAQ3B,KAAK,UAAU6L,KAAK,SAA5B,yFAKN,IAAK,iBACH,OACE,uBAAMgI,SAAUF,EAAqBlU,UAAWC,KAAOoU,KAAvD,UACE,cAAC,QAAD,CACE9T,KAAK,WACL+T,YAAY,iHACZpS,MAAOuR,EACPc,SAAU,SAACC,GAAD,OAAOd,EAAiBc,EAAEC,OAAOvS,QAC3CwS,KAAM,aAER,cAAC,QAAD,CACEnU,KAAK,OACL+T,YAAY,kHACZpS,MAAOyR,EACPY,SAAU,SAACC,GAAD,OAAOZ,EAAaY,EAAEC,OAAOvS,UAEzC,cAAC,SAAD,CAAQ3B,KAAK,UAAU6L,KAAK,SAA5B,wEAQMuI,IAAmB,GAEnC,OACE,sBAAK3U,UAAWC,KAAOuL,KAAvB,UACE,sBAAMxL,UAAS,kCAAf,SAAqDY,IACrD,8BAAMuT,IACN,qBAAKnU,UAAWC,KAAO2N,KAAvB,SAA8B0F,QCrGrBsB,GA5BG,WAChB,IAAM/H,EAAWC,cACX+H,EAAYxT,GAAY,SAACgI,GAAD,OAAWA,EAAM+J,KAAKxM,SAI9C0M,EACJ,qCACE,uBAAMtT,UAAS,8BAAf,4IAEE,cAAC,IAAD,CAAMI,GAAI,CAAEqN,SAAU,aAAtB,6HAEF,uBAAMzN,UAAS,8BAAf,uFAEE,cAAC,IAAD,CAAMI,GAAI,CAAEqN,SAAU,oBAAtB,iIAKN,GAAIoH,EAAW,CACb,IAAQC,GAASjI,EAASa,OAAS,CAAEoH,KAAM,CAAErH,SAAU,OAA/CqH,KAER,OAAO,cAAC,IAAD,CAAU1U,GAAI0U,IAGvB,OAAO,cAAC,GAAD,CAAUlU,MApBH,2BAoBiB0S,MAAOA,EAAO/S,KAAK,WCOrCwU,GA9BM,WACnB,IAAM5L,EAAWhI,IACX0T,EAAYxT,GAAY,SAACgI,GAAD,OAAWA,EAAM+J,KAAKxM,SAC5CoO,EAAmB3T,GAAY,SAACgI,GAAD,OAAWA,EAAM+J,QAAhD4B,eAGF1B,EACJ,mCACE,uBAAMtT,UAAS,8BAAf,iIAEE,cAAC,IAAD,CAAMI,GAAI,CAAEqN,SAAU,UAAtB,iDASN,OAJA7D,qBAAU,WACRT,EAASgK,QACR,IAEC6B,EACK,cAAC,GAAD,IAGLH,GAAa1N,aAAaC,QAAQ,gBAC7B,cAAC,IAAD,CAAUhH,GAAI,CAAEqN,SAAU,OAG5B,cAAC,GAAD,CAAU7M,MAtBH,qEAsBiB0S,MAAOA,EAAO/S,KAAK,cCGrC0U,GA9BY,WACzB,IAAM9L,EAAWhI,IACX0T,EAAYxT,GAAY,SAACgI,GAAD,OAAWA,EAAM+J,KAAKxM,SAC5CoO,EAAmB3T,GAAY,SAACgI,GAAD,OAAWA,EAAM+J,QAAhD4B,eAMR,GAJApL,qBAAU,WACRT,EAASgK,QACR,IAEC6B,EACF,OAAO,cAAC,GAAD,IAGT,IACM1B,EACJ,mCACE,uBAAMtT,UAAS,8BAAf,yGAEE,cAAC,IAAD,CAAMI,GAAI,CAAEqN,SAAU,UAAtB,iDAKN,OAAIoH,GAAa1N,aAAaC,QAAQ,gBAC7B,cAAC,IAAD,CAAUhH,GAAI,CAAEqN,SAAU,OAG5B,cAAC,GAAD,CAAU7M,MAdH,4HAciB0S,MAAOA,EAAO/S,KAAK,qBCHrC2U,GA1BW,WACxB,IAAMC,EAAgB9T,GAAY,SAACgI,GAAD,OAAWA,EAAM+J,KAAK+B,iBAClDC,EAAYjO,aAAaC,QAAQ,gBACjCyN,EAAYxT,GAAY,SAACgI,GAAD,OAAWA,EAAM+J,KAAKxM,SAG9C0M,EACJ,mCACE,uBAAMtT,UAAS,8BAAf,yGAEE,cAAC,IAAD,CAAMI,GAAI,CAAEqN,SAAU,UAAtB,iDAKN,OAAIoH,GAAaO,EACR,cAAC,IAAD,CAAUhV,GAAI,CAAEqN,SAAU,OAG9B0H,EAIE,cAAC,GAAD,CAAUvU,MAlBH,4HAkBiB0S,MAAOA,EAAO/S,KAAK,mBAHzC,cAAC,IAAD,CAAUH,GAAI,CAAEqN,SAAU,uB,wCCb/B4H,GAAY,CAChBC,KAAM,UACNC,QAAS,UACTC,OAAQ,WAoFKC,GAjFqB,SAAC,GAAwB,IAAtBrS,EAAqB,EAArBA,KAAMsS,EAAe,EAAfA,SACnC1S,EAAiDI,EAAjDJ,YAAa2S,EAAoCvS,EAApCuS,OAAQnU,EAA4B4B,EAA5B5B,KAAMoU,EAAsBxS,EAAtBwS,UAAWzE,EAAW/N,EAAX+N,OAExC0E,EAAiBxU,GACrB,SAACgI,GAAD,OAAWA,EAAMgB,kBAAkBrH,eAG/B8S,EAAkBxS,EAAoBuS,EAAgB7S,GAEtDiB,EAAOD,EAAa4R,GACpBvS,EAAQN,EAAoB+S,GAIlC,OACE,sBAAK9V,UAAS,qBAAgBC,KAAO8V,WAArC,UACE,sBAAK/V,UAAS,eAAUC,KAAO+V,SAA/B,UACE,uBAAMhW,UAAU,gCAAhB,cAAkDmR,KAClD,sBAAMnR,UAAU,kDAAhB,SACGiE,OAGL,sBAAKjE,UAAS,0BAAqBC,KAAOuB,MAA1C,UACE,sBAAMxB,UAAU,6BAAhB,SAA8CwB,IAC7CkU,GACC,sBACE1V,UAAU,8BACVF,MAAO,CAAEmW,MAAOZ,GAAUM,IAF5B,SAIGA,OAIP,sBAAK3V,UAAS,yBAAoBC,KAAOiW,MAAzC,UACE,oBAAIlW,UAAS,UAAKC,KAAO+C,aAAzB,gBACG8S,QADH,IACGA,OADH,EACGA,EAAiBrS,KAAI,SAACL,EAAsB6K,GAC3C,IAAMkI,EAxBE,EAwBmBlI,EAC3B,OAAIA,EAzBI,EA2BJ,oBAEEjO,UAAS,UAAKC,KAAO0D,YACrB7D,MAAO,CAAEqW,OAAQA,GAHnB,SAKE,qBAAK3L,IAAKpH,EAAK8L,aAAcxE,IAAKtH,EAAK5B,QAJlCyM,GA5BH,IAoCJA,EAEA,qBAEEjO,UAAS,UAAKC,KAAO0D,YACrB7D,MAAO,CAAEqW,OAAQA,GAHnB,UAKE,qBACE3L,IAAKpH,EAAK8L,aACVxE,IAAKtH,EAAK5B,KACV1B,MAAO,CACLgP,QACEgH,EAAgBtS,OAAS4S,EAAgB,MAAQ,OAGtDN,EAAgBtS,OAAS4S,GACxB,qCAAQN,EAAgBtS,OAASyK,EAAQ,OAbtCA,QAHX,OAwBJ,sBAAKjO,UAAS,wCAAmCC,KAAOoD,OAAxD,UACE,qBAAKrD,UAAU,OAAf,SAAuBqD,IACvB,cAAC,eAAD,CAAc9C,KAAK,sB,oBC1Dd8V,GA3BF,WACX,IAAMxJ,EAAWC,cAEXwJ,EAAWjV,GAAY,SAACgI,GAAD,OAAWA,EAAMkN,OAAOD,YAErD,OACE,yBAAStW,UAAS,UAAKC,KAAOuL,MAA9B,SACE,oBAAIxL,UAAS,UAAKC,KAAO6Q,QAAzB,UACW,OAARwF,QAAQ,IAARA,OAAA,EAAAA,EAAUvR,UAAV,OACCuR,QADD,IACCA,OADD,EACCA,EAAUvR,OAAOtB,KAAI,SAACL,EAAiB6K,GAAlB,OACnB,6BACE,cAAC,IAAD,CACE7N,GAAI,CACFqN,SAAS,SAAD,OAAWrK,EAAK+N,QACxBzD,MAAO,CAAEC,WAAYd,IAEvB7M,UAAWC,KAAO2N,KALpB,SAOE,cAAC,GAAD,CAAUxK,KAAMA,EAAMsS,UAAU,OAR3BzH,Y,oBC0DNuI,GAtEE,WACf,IAAMF,EAAWjV,GAAY,SAACgI,GAAD,OAAWA,EAAMkN,OAAOD,YAE/CG,EtB+FoB,SAAC1R,GAC3B,GAAKA,GAA4B,IAAlBA,EAAOvB,OACtB,OAAOuB,EAAO7B,QACZ,SAACwT,EAAsCpN,GAIrC,MAHqB,SAAjBA,EAAMqM,QAAmBe,EAAOpB,KAAK3F,KAAKrG,EAAM6H,QAC/B,YAAjB7H,EAAMqM,QAAsBe,EAAOnB,QAAQ5F,KAAKrG,EAAM6H,QAEnDuF,IAET,CAAEpB,KAAM,GAAIC,QAAS,KsBxGDoB,CAAY,OAACL,QAAD,IAACA,OAAD,EAACA,EAAUvR,QAEvC6R,EAAc9R,EAAiB,OAAC2R,QAAD,IAACA,OAAD,EAACA,EAAenB,MAC/CuB,EAAiB/R,EAAiB,OAAC2R,QAAD,IAACA,OAAD,EAACA,EAAelB,SAExD,OACE,sBAAKvV,UAAS,gCAA2BC,KAAOuL,MAAhD,UACE,sBAAKxL,UAAS,eAAUC,KAAOiW,MAA/B,UACE,sBAAKlW,UAAS,WAAMC,KAAO6W,OAA3B,UACE,sBAAM9W,UAAU,6BAAhB,mDACA,sBACEA,UAAS,6CAAwCC,KAAO+V,QAA/C,YAA0D/V,KAAOgW,OAD5E,UAGE,6BACGW,GACCA,EAAY5R,YAAYvB,KAAI,SAAC0N,EAAQlD,GAAT,OAC1B,6BAAiBkD,GAARlD,QAGf,6BACG2I,GACCA,EAAY1R,aAAazB,KAAI,SAAC0N,EAAQlD,GAAT,OAC3B,6BAAiBkD,GAARlD,cAKnB,sBAAKjO,UAAS,gBAAWC,KAAO8W,WAAhC,UACE,sBAAM/W,UAAU,6BAAhB,0DACA,sBACEA,UAAS,6CAAwCC,KAAO+V,SAD1D,UAGE,6BACGa,GACCA,EAAe7R,YAAYvB,KAAI,SAAC0N,EAAQlD,GAAT,OAC7B,6BAAiBkD,GAARlD,QAGf,6BACG4I,GACCA,EAAe3R,aAAazB,KAAI,SAAC0N,EAAQlD,GAAT,OAC9B,6BAAiBkD,GAARlD,iBAMrB,sBAAKjO,UAAS,oBAAeC,KAAOkD,OAApC,UACE,sBAAMnD,UAAU,6BAAhB,oIAGA,sBAAMA,UAAS,sCAAiCC,KAAO+W,OAAvD,gBACGV,QADH,IACGA,OADH,EACGA,EAAUnT,WAGf,sBAAKnD,UAAS,qBAAgBC,KAAOkD,OAArC,UACE,sBAAMnD,UAAU,6BAAhB,6HAGA,sBAAMA,UAAS,sCAAiCC,KAAO+W,OAAvD,gBACGV,QADH,IACGA,OADH,EACGA,EAAUW,oBC1DRC,GAAgB,CAC3BC,OAR2C,uBAS3CC,QAR6C,wBAS7CC,cAAe,GACfC,OATiD,0BAUjD3W,QAR+C,yBAS/C4W,QAV6C,wBAW7CC,UATmC,oBCgCtBC,GAhCE,WACf,IAAMtO,EAAWhI,IACXmV,EAAWjV,GAAY,SAACgI,GAAD,OAAWA,EAAMkN,OAAOD,YASrD,OAPA1M,qBAAU,WAER,OADAT,EAAS,CAAE5I,KAAM2W,GAAcC,SACxB,WACLhO,EAAS,CAAE5I,KAAM2W,GAAcE,aAEhC,CAACjO,IAECmN,EASH,gCACE,qBAAKtW,UAAS,oCAA+BC,KAAOuB,MAApD,uFAGA,sBAAKxB,UAAWC,KAAOY,UAAvB,UACE,cAAC,GAAD,IACA,cAAC,GAAD,UAbF,qBAAKb,UAAWC,KAAOyX,OAAvB,SACE,cAAC,GAAD,O,oBCJOC,GAdM,WACnB,OACE,qBAAK3X,UAAWC,KAAO2X,YAAvB,SACE,sBAAK5X,UAAWC,KAAO4X,SAAvB,UACE,sBAAK7X,UAAWC,KAAO6X,aAAvB,UACE,qCACA,mDAEF,cAAC,IAAD,CAAM1X,GAAI,CAAEqN,SAAU,KAAtB,+G,wCCoFOsK,GAvFK,WAClB,IAAM5O,EAAWhI,IAEX6W,EAAc3W,GAAY,SAACgI,GAAD,OAAWA,EAAM+J,KAAK5R,QAChDyW,EAAe5W,GAAY,SAACgI,GAAD,OAAWA,EAAM+J,KAAKxM,SAEvD,EAAoCmG,mBAASkL,GAA7C,oBAAO1E,EAAP,KAAmBC,EAAnB,KACA,EAA0CzG,mBAAS,IAAnD,oBAAO0G,EAAP,KAAsBC,EAAtB,KACA,EAAkC3G,mBAASiL,GAA3C,oBAAOrE,EAAP,KAAkBC,EAAlB,KAEA,EAAsC7G,oBAAS,GAA/C,oBAAOmL,EAAP,KAAqBC,EAArB,KACA,EAA4CpL,oBAAS,GAArD,oBAAOqL,EAAP,KAAwBC,EAAxB,KACA,EAAoCtL,oBAAS,GAA7C,oBAAOuL,EAAP,KAAoBC,EAApB,KAcMC,EAAWF,EAAc,YAAc,WACvCG,EAAYP,EAAe,YAAc,WACzCQ,EAAeN,EAAkB,YAAc,WAE/CO,EACJhF,IAAcqE,GACdzE,IAAe0E,GACfxE,EAAcjQ,OAAS,EAEzB,OACE,uBAAMxD,UAAS,UAAKC,KAAOuL,MAAQ4I,SAflB,SAAC1K,GZ6TkB,IAAClI,EAAMoF,EAAOC,EY5TlD6C,EAAMoK,iBACN3K,GZ2TqC3H,EY3TbmS,EZ2TmB/M,EY3TR2M,EZ2Te1M,EY3TH4M,EZ4TjD,uCAAO,WAAgBtK,GAAhB,eAAArD,EAAA,6DACLqD,EAAS,CACP5I,KAAMyS,KAFH,kBAKelL,EAAWtG,EAAMoF,EAAOC,GALvC,YAKGvB,EALH,UAMQA,EAAI4L,QANZ,gBAOD/H,EAAS,CACP5I,KAAM0S,GACNzJ,QAAS,CAAE4J,KAAM9N,EAAI8N,QATtB,6BAYK,IAAIhC,MAAM,2BAZf,0DAeHjI,EAAS,CACP5I,KAAM2S,KAER7B,QAAQC,IAAI,yCAA0C,KAAM9J,SAlBzD,0DAAP,yDY/SE,UACE,qBAAKxH,UAAS,QAAd,SACE,cAAC,QAAD,CACEO,KAAK,OACL+T,YAAY,qBACZpS,MAAOyR,EACPY,SAAU,SAACC,GAAD,OAAOZ,EAAaY,EAAEC,OAAOvS,QACvC0W,QAAS,kBAAML,GAAa,IAC5BM,OAAQ,kBAAMN,GAAa,IAC3BO,YAAa,kBAAMlF,EAAaoE,IAChCtD,KAAM8D,MAGV,qBAAKxY,UAAS,QAAd,SACE,cAAC,QAAD,CACEO,KAAK,QACL+T,YAAY,QACZpS,MAAOqR,EACPgB,SAAU,SAACC,GAAD,OAAOhB,EAAcgB,EAAEC,OAAOvS,QACxC0W,QAAS,kBAAMT,GAAc,IAC7BU,OAAQ,kBAAMV,GAAc,IAC5BW,YAAa,kBAAMtF,EAAcyE,IACjCvD,KAAM+D,MAGV,8BACE,cAAC,QAAD,CACElY,KAAK,WACL+T,YAAY,uCACZpS,MAAOuR,EACPc,SAAU,SAACC,GAAD,OAAOd,EAAiBc,EAAEC,OAAOvS,QAC3C0W,QAAS,kBAAMP,GAAiB,IAChCQ,OAAQ,kBAAMR,GAAiB,IAC/BS,YAAa,kBAAMpF,EAAiB,KACpCgB,KAAMgE,MAGTC,EACC,sBAAK3Y,UAAU,OAAf,UACE,sBAAMA,UAAWC,KAAO8Y,OAAQ/X,QA7DnB,SAAC0I,GACpBA,EAAMoK,iBACNF,EAAaoE,GACbxE,EAAcyE,GACdvE,EAAiB,KAyDX,kDAGA,cAAC,SAAD,CAAQnT,KAAK,UAAU6L,KAAK,SAA5B,uEAIA,SCjFG4M,GAAkB,CAC7B7B,OAR6C,yBAS7CC,QAR+C,0BAS/CC,cAAe,GACfC,OATmD,4BAUnD3W,QARiD,2BASjD4W,QAV+C,0BAW/CC,UATqC,sB,oBC4CxByB,GA3CE,WACf,IAAMpM,EAAWC,cACX3D,EAAWhI,IAEjByI,qBAAU,WAER,OADAT,EAAS,CAAE5I,KAAMyY,GAAgB7B,SAC1B,WACLhO,EAAS,CAAE5I,KAAMyY,GAAgB5B,aAElC,CAACjO,IAEJ,IAAMmN,EAAWjV,GAAY,SAACgI,GAAD,OAAWA,EAAM6P,SAAS5C,YAEvD,OAAKA,EASH,yBAAStW,UAAS,UAAKC,KAAOuL,MAA9B,SACE,oBAAIxL,UAAS,UAAKC,KAAO6Q,QAAzB,UACW,OAARwF,QAAQ,IAARA,OAAA,EAAAA,EAAUvR,UAAV,OACCuR,QADD,IACCA,OADD,EACCA,EAAUvR,OAAOtB,KAAI,SAACL,EAAiB6K,GAAlB,OACnB,6BACE,cAAC,IAAD,CACE7N,GAAI,CACFqN,SAAS,mBAAD,OAAqBrK,EAAK+N,QAClCzD,MAAO,CAAEC,WAAYd,IAEvB7M,UAAWC,KAAO2N,KALpB,SAOE,cAAC,GAAD,CAAUxK,KAAMA,EAAMsS,UAAU,OAR3BzH,WAXf,qBAAKjO,UAAWC,KAAOyX,OAAvB,SACE,cAAC,GAAD,OCoCOyB,GArDK,WAClB,IAAMhQ,EAAWhI,IAMjB,OACE,sBAAKnB,UAAS,UAAKC,KAAOuL,MAA1B,UACE,sBAAKxL,UAAS,qBAAgBC,KAAOC,MAArC,UACE,cAAC,IAAD,CACEP,OAAK,EACLS,GAAG,WACHJ,UAAS,yDAAoDC,KAAOmZ,KACpE/Y,gBAAiBJ,KAAOK,OAJ1B,wDAQA,cAAC,IAAD,CACEF,GAAG,kBACHJ,UAAS,yDAAoDC,KAAOmZ,KACpE/Y,gBAAiBJ,KAAOK,OAH1B,mGAOA,cAAC,IAAD,CACEX,OAAK,EACLS,GAAG,SACHJ,UAAS,yDAAoDC,KAAOmZ,KACpE/Y,gBAAiBJ,KAAOK,OACxBU,QA3Ba,WACnBmI,EfqNF,uCAAO,WAAgBA,GAAhB,eAAArD,EAAA,6DACLqD,EAAS,CACP5I,KAAM0R,KAFH,kBAKe/K,IALf,YAKG5B,EALH,UAMQA,EAAI4L,QANZ,iBdrLPjP,Ec4LmB,Sd5LH,EAAO,CAAEI,SAAU,Ic6L7B8E,aAAakS,WAAW,gBACxBlQ,EAAS,CACP5I,KAAM2R,KAER/I,EAASwG,aAAK,WAZb,8BAcK,IAAIyB,MAAM,oBAdf,0DAiBHjI,EAAS,CACP5I,KAAM4R,KAERd,QAAQC,IAAI,yCAA0C,KAAM9J,SApBzD,0DAAP,wDehMM,4CASA,sBACExH,UAAS,0DAAqDC,KAAO+O,MADvE,UAGE,gKACA,iOAGJ,qBAAKhP,UAAS,eAAUC,KAAOkU,SAA/B,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOzU,KAAK,WAAWC,OAAO,EAAM2Z,UAAWvB,KAC/C,cAAC,IAAD,CAAOrY,KAAK,kBAAkBC,OAAO,EAArC,SACE,cAAC,GAAD,e,oBCvCN0V,GAAY,CAChBC,KAAM,UACNC,QAAS,UACTC,OAAQ,WAoGK+D,GAjG4B,SAAC,GAAqB,IAAD,IAI1DC,EAJwC9S,EAAkB,EAAlBA,YACtC9G,IAAWH,YAAc,SACzB0J,EAAWhI,IAIXsY,EAAapY,GAAY,SAACgI,GAAD,OAAWA,EAAMkN,OAAOD,YAEjDoD,EAAarY,GAAY,SAACgI,GAAD,OAAWA,EAAM6P,SAAS5C,YAEnDhN,EAAQjI,GAAY,SAACgI,GAAD,OAAWA,EAAMC,MAAMkQ,gBAE3C3D,EAAiBxU,GACrB,SAACgI,GAAD,OAAWA,EAAMgB,kBAAkBrH,eAiBrC,GAdAwW,EAAY,UAAI5Z,EAAS6Z,EAAaC,SAA1B,iBAAG,EAAoC3U,cAAvC,aAAG,EAA4CuF,MACzD,SAAChB,GAAD,OAAsBA,EAAM6H,UAAYzK,KAG1CkD,qBAAU,WACH6P,GAAeC,GAClBvQ,E5BwI4B,SAACzC,GACjC,8CAAO,WAAgByC,GAAhB,eAAArD,EAAA,6DACLqD,EAAS,CACP5I,KAAMoI,KAFH,kBAMelC,EAAgBC,GAN/B,YAMGpB,EANH,UAOQA,EAAI4L,QAPZ,gBAQD/H,EAAS,CACP5I,KAAMqI,GACNY,QAASlE,EAAIP,OAAO,KAVrB,6BAaK,IAAIqM,MAAM,6BAbf,0DAgBHjI,EAAS,CACP5I,KAAMsI,KAERwI,QAAQC,IAAI,6CAA8C,KAAM9J,SAnB7D,0DAAP,sD4BzIamS,CAASjT,MAEnB,IAEC4C,IACFkQ,EAAelQ,IAGZkQ,EACH,OAAO,cAAC,GAAD,IAGT,MAAyDA,EAAjDhY,EAAR,EAAQA,KAAM2P,EAAd,EAAcA,OAAQyE,EAAtB,EAAsBA,UAAWD,EAAjC,EAAiCA,OAAQ3S,EAAzC,EAAyCA,YAEnC4W,EAAmBtW,EAAoBuS,EAAgB7S,GAEvDiB,EAAOD,EAAa4R,GACpBvS,EAAQN,EAAoB6W,GAE5BC,EAAmB,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAkBhW,QAC5C,SAACD,EAAYsK,GAAb,OAAuB2L,EAAiB9J,QAAQnM,KAAgBsK,KAGlE,OAAKjL,EAKH,sBAAKhD,UAAS,qBAAgBC,KAAOqJ,OAArC,UACE,qBAAKtJ,UAAS,gBAAWC,KAAOkR,QAAhC,SACE,uBAAMnR,UAAU,gCAAhB,cAAkDmR,OAEpD,sBAAKnR,UAAS,oBAAeC,KAAOuB,MAApC,UACE,sBAAMxB,UAAU,6BAAhB,SAA8CwB,IAC9C,sBACExB,UAAU,mCACVF,MAAO,CAAEmW,MAAOZ,GAAUM,IAF5B,SAIGA,OAGL,sBAAK3V,UAAS,UAAKC,KAAOiW,MAA1B,UACE,sBAAMlW,UAAU,8BAAhB,mDACA,oBAAIA,UAAS,eAAUC,KAAO+C,aAA9B,gBACG6W,QADH,IACGA,OADH,EACGA,EAAqBpW,KAAI,SAACL,EAAM6K,GAAP,OACxB,qBAAgBjO,UAAS,eAAUC,KAAOmD,MAA1C,UACE,sBAAKpD,UAAS,UAAKC,KAAO6Z,KAA1B,UACE,qBAAK9Z,UAAS,eAAUC,KAAO0D,YAA/B,SACE,qBAAK6G,IAAKpH,EAAK8L,aAAcxE,IAAKtH,EAAK5B,SAEzC,sBAAMxB,UAAU,8BAAhB,SAA+CoD,EAAK5B,UAEtD,sBAAKxB,UAAS,eAAUC,KAAOoD,OAA/B,UACE,sBAAKrD,UAAS,qCAAd,UACGoD,EAAKU,MADR,MACkBV,EAAKC,SAEvB,cAAC,eAAD,CAAc9C,KAAK,iBAXd0N,WAiBf,sBAAKjO,UAAS,gBAAWC,KAAOgE,MAAhC,UACE,sBAAMjE,UAAU,kDAAhB,SACGiE,IAEH,sBAAKjE,UAAS,wCAAmCC,KAAOoD,OAAxD,UACE,qBAAKrD,UAAU,OAAf,SAAuBqD,IACvB,cAAC,eAAD,CAAc9C,KAAK,qBA5ClB,cAAC,GAAD,KCzDIwZ,GALG,WAChB,IAAQrT,EAAgByD,cAAhBzD,YACR,OAAO,cAAC,GAAD,CAAOA,YAAaA,K,UC+CdsT,GA3CV,SAAC,GAA2B,IAAzBtZ,EAAwB,EAAxBA,SAAauZ,EAAW,6BACxB9Q,EAAWhI,IACX0T,EAAYxT,GAAY,SAACgI,GAAD,OAAWA,EAAM+J,KAAKxM,SAC9C2I,IAAYpI,aAAaC,QAAQ,gBAEjC4N,EAAiB3T,GAAY,SAACgI,GAAD,OAAWA,EAAM+J,KAAK4B,kBAQzD,OANApL,qBAAU,WACJ2F,IAAYsF,GACd1L,EAASgK,QAEV,IAEC6B,GAAkBzF,IAAYsF,EAE9B,qBACE/U,MAAO,CACLoa,MAAO,OACPC,OAAQ,OACRzN,QAAS,OACT0N,WAAY,SACZC,eAAgB,UANpB,SASE,cAAC,GAAD,MAMJ,cAAC,IAAD,2BACMJ,GADN,IAEEK,OAAQ,gBAAGzN,EAAH,EAAGA,SAAH,OACN0C,EACE7O,EAEA,cAAC,IAAD,CAAUN,GAAI,CAAEqN,SAAU,SAAUC,MAAO,CAAEoH,KAAMjI,WCsE9C0N,OA/Ff,WACE,IAAM1N,EAAWC,cACX7D,EAAUC,cACVC,EAAWhI,IAEXqZ,EAAsBnZ,GAC1B,SAACgI,GAAD,OAAWA,EAAMgB,kBAAkBmQ,uBAGrC5Q,qBAAU,WACH4Q,GACHrR,E/BiGJ,uCAAO,WAAgBA,GAAhB,eAAArD,EAAA,6DACLqD,EAAS,CACP5I,KAAMwH,IAFH,kBAMelC,IANf,YAMGP,EANH,UAOQA,EAAI4L,QAPZ,gBAQD/H,EAAS,CACP5I,KAAMyH,EACNwB,QAASlE,EAAImV,OAVd,6BAaK,IAAIrJ,MAAM,6BAbf,0DAgBHjI,EAAS,CACP5I,KAAM0H,IAERoJ,QAAQC,IAAI,6CAA8C,KAAM9J,SAnB7D,0DAAP,yD+B/FG,CAAC2B,EAAUqR,IAEd,IAAI7M,GACkB,SAAnB1E,EAAQyR,QAAwC,YAAnBzR,EAAQyR,SACtC7N,EAASa,OACTb,EAASa,MAAMC,WAEjB,OACE,gCACE,cAAC,EAAD,IACA,eAAC,IAAD,CAAQd,SAAUc,GAAcd,EAAhC,UACE,cAAC,IAAD,CAAOnN,KAAK,IAAIC,OAAO,EAAM2Z,UAAW/H,KACxC,cAAC,IAAD,CAAO7R,KAAK,SAASC,OAAO,EAAM2Z,UAAW1E,KAC7C,cAAC,IAAD,CAAOlV,KAAK,YAAYC,OAAO,EAAM2Z,UAAWvE,KAChD,cAAC,IAAD,CACErV,KAAK,mBACLC,OAAO,EACP2Z,UAAWrE,KAEb,cAAC,IAAD,CACEvV,KAAK,kBACLC,OAAO,EACP2Z,UAAWpE,KAEb,cAAC,IAAD,CAAOxV,KAAK,QAAQC,OAAO,EAAM2Z,UAAW7B,KAC5C,cAAC,IAAD,CAAO/X,KAAK,qBAAqBC,OAAO,EAAM2Z,UAAWS,KACzD,cAAC,IAAD,CACEra,KAAK,mBACLC,OAAO,EACP2Z,UAAWqB,KAEb,cAAC,GAAD,CAAgBjb,KAAK,+BAA+BC,OAAO,EAA3D,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CAAgBD,KAAK,WAArB,SACE,cAAC,GAAD,MAGF,cAAC,IAAD,CAAO4Z,UAAW3B,QAEnBhK,GACC,qCACE,cAAC,IAAD,CACEjO,KAAK,mBACLgB,SACE,cAAC,GAAD,CAAOE,MAAM,0GAAb,SACE,cAAC,GAAD,QAIN,cAAC,IAAD,CACElB,KAAK,qBACLgB,SACE,cAAC,GAAD,UACE,cAAC,GAAD,QAIN,cAAC,IAAD,CACEhB,KAAK,SACLC,OAAO,EACPe,SACE,cAAC,GAAD,UACE,cAAC,GAAD,QAIN,cAAC,GAAD,CACEhB,KAAK,+BACLC,OAAO,EACPe,SACE,cAAC,GAAD,UACE,cAAC,GAAD,eC5FDka,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBrV,MAAK,YAAkD,IAA/CsV,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,gDCMRO,GAAiC,CACrCpY,YAAa,GACbqY,oBAAoB,EACpBb,qBAAqB,EACrBc,oBAAoB,GAgCP1O,GA7BW,WAGF,IAFtBc,EAEqB,uDAFb0N,GACRV,EACqB,uCACrB,OAAQA,EAAOna,MACb,KAAKwH,EACH,OAAO,2BACF2F,GADL,IAEE2N,oBAAoB,IAExB,KAAKrT,EACH,OAAO,2BACF0F,GADL,IAEE1K,YAAa0X,EAAOlR,QACpB6R,oBAAoB,EACpBb,qBAAqB,EACrBc,oBAAoB,IAExB,KAAKrT,EACH,OAAO,2BACFyF,GADL,IAEE2N,oBAAoB,EACpBC,oBAAoB,IAExB,QACE,OAAO5N,ICrBP0N,GAA2B,CAC/B1U,YAAa,KACb0E,gBAAgB,EAChBmQ,oBAAoB,EACpBC,oBAAoB,EAEpBhC,aAAc,KACdiC,cAAc,EACdC,cAAc,EAEdtS,WAAW,GAyDEmQ,GAtDD,WAA6D,IAA5D7L,EAA2D,uDAAnD0N,GAAcV,EAAqC,uCACxE,OAAQA,EAAOna,MACb,KAAK+H,GACH,OAAO,2BACFoF,GADL,IAEE6N,oBAAoB,IAExB,KAAKhT,GACH,OAAO,2BACFmF,GADL,IAEEhH,YAAagU,EAAOlR,QACpB+R,oBAAoB,EACpBC,oBAAoB,IAExB,KAAKhT,GACH,OAAO,2BACFkF,GADL,IAEE6N,oBAAoB,EACpBC,oBAAoB,IAExB,KAAK9S,GACH,OAAO,2BACFgF,GADL,IAEEtE,UAAWsR,EAAOlR,QAClB9C,YAAa,OAEjB,KAAK+B,GACH,OAAO,2BACFiF,GADL,IAEEtC,eAAgBsP,EAAOlR,UAE3B,KAAKb,GACH,OAAO,2BACF+E,GADL,IAEE+N,cAAc,IAElB,KAAK7S,GACH,OAAO,2BACF8E,GADL,IAEE8L,aAAckB,EAAOlR,QACrBiS,cAAc,EACdC,cAAc,IAElB,KAAK7S,GACH,OAAO,2BACF6E,GADL,IAEE+N,cAAc,EACdC,cAAc,IAElB,QACE,OAAOhO,I,mBC1EP0N,GAAiC,CACrC9P,eAAgB,GAChBrI,IAAK,MAkDQqM,GA/CW,WAGF,IAFtB5B,EAEqB,uDAFb0N,GACRV,EACqB,uCACrB,OAAQA,EAAOna,MACb,KAAK2H,GACH,MAA4B,QAAxBwS,EAAOlR,QAAQjJ,KACV,2BACFmN,GADL,IAEEzK,IAAKyX,EAAOlR,UAGT,2BACFkE,GADL,IAEEpC,eAAe,GAAD,oBACToC,EAAMpC,gBADG,CAEZ,CAAEqB,IAAKgP,eAAUvY,KAAMsX,EAAOlR,aAIpC,KAAKrB,GACH,OAAO,2BACFuF,GADL,IAEEpC,eAAgB,aAAIoC,EAAMpC,gBAAgB1H,QAAO,SAACR,GAChD,OAAOA,EAAKuJ,MAAQ+N,EAAOlR,QAAQmD,SAGzC,KAAKvE,GACH,MAA+BsS,EAAOlR,QAA9BwG,EAAR,EAAQA,QAASD,EAAjB,EAAiBA,UACXzE,EAAc,aAAOoC,EAAMpC,gBAEjC,OADAA,EAAesQ,OAAO5L,EAAS,EAAG1E,EAAesQ,OAAO7L,EAAW,GAAG,IAC/D,2BACFrC,GADL,IAEEpC,mBAGJ,KAAKjD,GACH,OAAO,2BACFqF,GADL,IAEEpC,eAAgB,GAChBrI,IAAK,OAET,QACE,OAAOyK,ICJP0N,GAA0B,CAC9BxU,MAAO,GACPpF,KAAM,GAENqa,qBAAqB,EACrBC,qBAAqB,EAErBC,cAAc,EACdC,cAAc,EAEdC,eAAe,EACfC,eAAe,EAEflH,gBAAgB,EAChBmH,gBAAgB,EAEhBC,eAAe,EACfC,eAAe,EAEfC,eAAe,EACfnH,eAAe,EACfoH,eAAe,EAEfC,cAAc,EACdC,cAAc,EAEdC,qBAAqB,EACrBC,qBAAqB,EACrBC,qBAAqB,GA0KRC,GAvKF,WAA2D,IAA1DnP,EAAyD,uDAAjD0N,GAAcV,EAAmC,uCACrE,OAAQA,EAAOna,MACb,KAAKoR,GACH,OAAO,2BACFjE,GADL,IAEEmO,qBAAqB,EACrBC,qBAAqB,IAEzB,KAAKlK,GACH,OAAO,2BACFlE,GADL,IAEElM,KAAMkZ,EAAOlR,QAAQ4J,KAAK5R,KAC1BoF,MAAO8T,EAAOlR,QAAQ4J,KAAKxM,MAC3BiV,qBAAqB,EACrBC,qBAAqB,IAEzB,KAAKjK,GACH,OAAO,2BACFnE,GADL,IAEEmO,qBAAqB,EACrBC,qBAAqB,IAEzB,KAAKhK,GACH,OAAO,2BACFpE,GADL,IAEEqO,cAAc,EACdC,cAAc,IAElB,KAAKjK,GACH,OAAO,2BACFrE,GADL,IAEElM,KAAMkZ,EAAOlR,QAAQ4J,KAAK5R,KAC1BoF,MAAO8T,EAAOlR,QAAQ4J,KAAKxM,MAC3BmV,cAAc,EACdC,cAAc,IAElB,KAAKhK,GACH,OAAO,2BACFtE,GADL,IAEEqO,cAAc,EACdC,cAAc,IAElB,KAAK/J,GACH,OAAO,2BACFvE,GADL,IAEEuO,eAAe,EACfC,eAAe,IAEnB,KAAKhK,GACH,OAAO,2BACFxE,GADL,IAEElM,KAAM,GACNoF,MAAO,GACPqV,eAAe,EACfC,eAAe,IAEnB,KAAK/J,GACH,OAAO,2BACFzE,GADL,IAEEuO,eAAe,EACfC,eAAe,IAEnB,KAAKrJ,GACH,OAAO,2BACFnF,GADL,IAEEsH,gBAAgB,EAChBmH,gBAAgB,IAEpB,KAAKrJ,GACH,OAAO,2BACFpF,GADL,IAEElM,KAAMkZ,EAAOlR,QAAQ4J,KAAK5R,KAC1BoF,MAAO8T,EAAOlR,QAAQ4J,KAAKxM,MAC3BoO,gBAAgB,EAChBmH,gBAAgB,IAEpB,KAAKpJ,GACH,OAAO,2BACFrF,GADL,IAEEsH,gBAAgB,EAChBmH,gBAAgB,IAEpB,KAAKnJ,GACH,OAAO,2BACFtF,GADL,IAEE0O,eAAe,EACfC,eAAe,IAEnB,KAAKpJ,GACH,OAAO,2BACFvF,GADL,IAEElM,KAAMkZ,EAAOlR,QAAQ4J,KAAK5R,KAC1BoF,MAAO8T,EAAOlR,QAAQ4J,KAAKxM,MAC3BwV,eAAe,EACfC,eAAe,IAEnB,KAAKnJ,GACH,OAAO,2BACFxF,GADL,IAEE0O,eAAe,EACfC,eAAe,IAEnB,KAAKjK,GACH,OAAO,2BACF1E,GADL,IAEE4O,eAAe,EACfnH,eAAe,EACfoH,eAAe,IAEnB,KAAKlK,GACH,OAAO,2BACF3E,GADL,IAEE4O,eAAe,EACfnH,eAAe,EACfoH,eAAe,IAEnB,KAAKjK,GACH,OAAO,2BACF5E,GADL,IAEE4O,eAAe,EACfnH,eAAe,EACfoH,eAAe,IAEnB,KAAKhK,GACH,OAAO,2BACF7E,GADL,IAEE8O,cAAc,EACdC,cAAc,IAElB,KAAKjK,GACH,OAAO,2BACF9E,GADL,IAEE8O,cAAc,EACdC,cAAc,IAElB,KAAKhK,GACH,OAAO,2BACF/E,GADL,IAEE8O,cAAc,EACdC,cAAc,IAElB,KAAK/J,GACH,OAAO,2BACFhF,GADL,IAEEgP,qBAAqB,EACrBC,qBAAqB,EACrBC,qBAAqB,IAEzB,KAAKjK,GACH,OAAO,2BACFjF,GADL,IAEEgP,qBAAqB,EACrBC,qBAAqB,EACrBC,qBAAqB,IAEzB,KAAKhK,GACH,OAAO,2BACFlF,GADL,IAEEgP,qBAAqB,EACrBC,qBAAqB,EACrBC,qBAAqB,IAEzB,QACE,OAAOlP,ICnPP0N,GAA0B,CAC9B0B,aAAa,EACbpX,MAAO,KACP4Q,SAAU,MAGJgB,GAAwCJ,GAAxCI,OAAQ3W,GAAgCuW,GAAhCvW,QAAS4W,GAAuBL,GAAvBK,QAASC,GAAcN,GAAdM,UA8BnBjB,GA5BA,WAAiE,IAAhE7I,EAA+D,uDAAvD0N,GAAcV,EAAyC,uCAC7E,OAAQA,EAAOna,MACb,KAAK+W,GACH,OAAO,2BACF5J,GADL,IAEEoP,aAAa,IAEjB,KAAKvF,GACH,OAAO,2BACF7J,GADL,IAEEhI,MAAOgV,EAAOlR,QACdsT,aAAa,IAEjB,KAAKnc,GACH,OAAO,2BACF+M,GADL,IAEEoP,aAAa,IAEjB,KAAKtF,GACH,OAAO,2BACF9J,GADL,IAEE4I,SAAUoE,EAAOlR,UAErB,QACE,OAAOkE,IChCP0N,GAA4B,CAChC0B,aAAa,EACbpX,MAAO,KACP4Q,SAAU,MAGJgB,GAAwC0B,GAAxC1B,OAAQ3W,GAAgCqY,GAAhCrY,QAAS4W,GAAuByB,GAAvBzB,QAASC,GAAcwB,GAAdxB,UAiCnB0B,GA/BE,WAGE,IAFjBxL,EAEgB,uDAFR0N,GACRV,EACgB,uCAChB,OAAQA,EAAOna,MACb,KAAK+W,GACH,OAAO,2BACF5J,GADL,IAEEoP,aAAa,IAEjB,KAAKvF,GACH,OAAO,2BACF7J,GADL,IAEEhI,MAAOgV,EAAOlR,QACdsT,aAAa,IAEjB,KAAKnc,GACH,OAAO,2BACF+M,GADL,IAEEoP,aAAa,IAEjB,KAAKtF,GACH,OAAO,2BACF9J,GADL,IAEE4I,SAAUoE,EAAOlR,UAErB,QACE,OAAOkE,ICnCAzE,GAAU8T,eAEVC,GAAcC,2BAAgB,CACzCC,OAAQC,YAAclU,IACtBoB,qBACAf,SACA+B,qBACA+H,QACA8F,YACA3C,YChBW6G,GAAmB,SAC9BC,EACAC,GAEA,OAAO,SAACjU,GACN,IAAIkU,EAA2B,KAE/B,OAAO,SAACC,GAAD,OAAkC,SAAC9C,GACxC,IAAQvR,EAAaE,EAAbF,SACA5I,EAAkBma,EAAlBna,KAAMiJ,EAAYkR,EAAZlR,QAEZ2N,EAOEmG,EAPFnG,OACAC,EAMEkG,EANFlG,QACAC,EAKEiG,EALFjG,cACAC,EAIEgG,EAJFhG,OACA3W,EAGE2c,EAHF3c,QACA4W,EAEE+F,EAFF/F,QACAC,EACE8F,EADF9F,UAGEjX,IAAS4W,KACXoG,EAAS,IAAIE,UAA2B,oBAAVJ,EAAuBA,IAAUA,IAExDK,OAAS,SAAChU,GACfP,EAAS,CAAE5I,KAAM+W,EAAQ9N,QAASE,KAGpC6T,EAAOI,QAAU,SAACjU,GAChBP,EAAS,CAAE5I,KAAMgX,EAAS/N,QAASE,KAGrC6T,EAAOK,UAAY,SAAClU,GAClB,IAAQ+Q,EAAS/Q,EAAT+Q,KACFoD,EAAatX,KAAKuX,MAAMrD,GAE9BtR,EAAS,CACP5I,KAAMiX,EACNhO,QAASqU,KAIbN,EAAOQ,QAAU,SAACrU,GAChBP,EAAS,CAAE5I,KAAMI,EAAS6I,QAASE,MAInC0N,GAAW7W,IAAS6W,GAAWmG,GACjCA,EAAOS,QAGL3G,GAAiB9W,IAAS8W,GAAiBkG,GAC7CA,EAAOU,KAAK1X,KAAKC,UAAUgD,IAG7BgU,EAAK9C,OC/CLwD,GAAWC,2BACfC,KACAC,aAAiBpV,IACjBmU,G1CRiC,6C0CQSlG,IAC1CkG,I1CLqC,iCAFT,yCAES,kBAEnC7b,EAAU,SAAV,UAAqBA,EAAU,gBAA/B,aAAqB,EAAoBO,QAAQ,UAAW,IAAM,M0CGtBkX,KAGjCsF,0BAAYtB,GAAauB,+BAAoBL,KCP5DnU,IAASuQ,OACP,cAAC,IAAMkE,WAAP,UACE,cAAC,IAAD,CAAUnV,MAAOA,GAAjB,SACE,cAAC,IAAD,CAAiBJ,QAASA,GAA1B,SACE,cAAC,GAAD,UAINvH,SAASqH,eAAe,SAM1B6R,M,mBCvBAvb,EAAOC,QAAU,CAAC,KAAO,wBAAwB,KAAO,wBAAwB,QAAU,2BAA2B,MAAQ,yBAAyB,MAAQ,yBAAyB,UAAY,6BAA6B,MAAQ,yBAAyB,MAAQ,2B,mBCAzQD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,IAAM,mBAAmB,KAAO,oBAAoB,YAAc,2BAA2B,WAAa,0BAA0B,KAAO,oBAAoB,OAAS,sBAAsB,MAAQ,qBAAqB,KAAO,oBAAoB,KAAO,sB,mBCA5SD,EAAOC,QAAU,CAAC,KAAO,2BAA2B,KAAO,2BAA2B,QAAU,8BAA8B,IAAM,0BAA0B,OAAS,6BAA6B,KAAO,6B,mBCA3MD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,YAAc,+BAA+B,WAAa,8BAA8B,KAAO,wBAAwB,QAAU,2BAA2B,MAAQ,yBAAyB,KAAO,0B,mBCA/PD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,OAAS,2BAA2B,KAAO,yBAAyB,QAAU,8B,mBCAhID,EAAOC,QAAU,CAAC,QAAU,oCAAoC,UAAY,sCAAsC,KAAO,mC,mBCAzHD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,IAAM,oBAAoB,KAAO,uB,mBCArFD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,KAAO,wBAAwB,KAAO,0B,mBCAvFD,EAAOC,QAAU,CAAC,KAAO,4BAA4B,WAAa,kCAAkC,OAAS,gC,mBCA7GD,EAAOC,QAAU,CAAC,KAAO,iCAAiC,UAAY,sCAAsC,KAAO,iCAAiC,YAAc,0C,mBCAlKD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,KAAO,wBAAwB,OAAS,0BAA0B,OAAS,4B,mBCA5HD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,OAAS,sBAAsB,OAAS,wB,mBCA/FD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,MAAQ,yBAAyB,MAAQ,2B,mBCA1FD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,KAAO,wBAAwB,OAAS,4B,mBCAnGD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,OAAS,uB,mBCA/ED,EAAOC,QAAU,CAAC,YAAc,oCAAoC,SAAW,iCAAiC,aAAe,uC,mBCA/HD,EAAOC,QAAU,CAAC,KAAO,2BAA2B,OAAS,gC","file":"static/js/main.d78e0ed5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"modal-overlay_overlay__1PmjF\",\"hidden\":\"modal-overlay_hidden__1gr4a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"popup_popup__1V0t2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"constructor-item_item__2Jy72\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"home-page_main__3G4-L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"burger-constructor_main__3J7ab\",\"scroll\":\"burger-constructor_scroll__2BOoU\",\"item\":\"burger-constructor_item__3uLU8\",\"section\":\"burger-constructor_section__SQG8I\",\"total_order\":\"burger-constructor_total_order__1tC4L\",\"constructor_item\":\"burger-constructor_constructor_item__3GmFC\",\"constructor_item_pos_top\":\"burger-constructor_constructor_item_pos_top__uGO2D\",\"constructor_item_pos_bottom\":\"burger-constructor_constructor_item_pos_bottom__2PkgO\",\"constructor_item__row\":\"burger-constructor_constructor_item__row__xYcfP\"};","import {\n  BurgerIcon,\n  ListIcon,\n  Logo,\n  ProfileIcon,\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport React from \"react\";\nimport { Link, NavLink, useRouteMatch } from \"react-router-dom\";\nimport styles from \"./app-header.module.css\";\n\nconst AppHeader = () => {\n  const isConstructor = !!useRouteMatch({ path: \"/\", exact: true });\n  const isFeed = !!useRouteMatch(\"/feed\");\n  const isProfile = !!useRouteMatch(\"/profile\");\n\n  return (\n    <header style={{ backgroundColor: \"#1C1C21\" }}>\n      <nav className={styles.menu}>\n        <div className={styles.nav_div}>\n          <NavLink\n            exact\n            to=\"/\"\n            activeClassName={styles.active}\n            className={`text text_type_main-default mt-4 mr-1 mb-4 ml-1 p-5 `}\n          >\n            <BurgerIcon type={isConstructor ? \"primary\" : \"secondary\"} />{\" \"}\n            Конструктор\n          </NavLink>\n          <NavLink\n            to=\"/feed\"\n            activeClassName={styles.active}\n            className=\"text text_type_main-default mt-4 mr-1 mb-4 ml-1 p-5\"\n          >\n            <ListIcon type={isFeed ? \"primary\" : \"secondary\"} /> Лента заказов\n          </NavLink>\n        </div>\n        <Link to=\"/\" className={styles.logo}>\n          <Logo />\n        </Link>\n        <NavLink\n          to=\"/profile\"\n          activeClassName={styles.active}\n          className=\"text text_type_main-default mt-4 mr-1 mb-4 ml-1 p-5\"\n        >\n          <ProfileIcon type={isProfile ? \"primary\" : \"secondary\"} /> Личный\n          кабинет\n        </NavLink>\n      </nav>\n    </header>\n  );\n};\n\nexport default AppHeader;\n","import { CloseIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport React, { FC } from \"react\";\nimport { ModalProps } from \"./types\";\nimport styles from \"./modal.module.css\";\n\nconst Modal: FC<ModalProps> = ({ children, onClose, title }) => {\n  return (\n    <div className={styles.container}>\n      <div className={`p-10  ${styles.inside}`}>\n        <div className={styles.header}>\n          <p className=\"text text_type_main-large pt-3 pb-3\">{title}</p>\n          <CloseIcon onClick={onClose} type=\"primary\" />\n        </div>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { FC } from \"react\";\n\nimport styles from \"./modal-overlay.module.css\";\n\nconst ModalOverlay: FC<{ onClose: () => void }> = ({ onClose }) => {\n  return <div className={styles.overlay} onClick={onClose}></div>;\n};\n\nexport default ModalOverlay;\n","import {\n  TypedUseSelectorHook,\n  useDispatch as dispatchHook,\n  useSelector as selectorHook,\n} from \"react-redux\";\nimport { AppDispatch, AppThunk, RootState } from \"./types\";\n\nexport const useDispatch = () => dispatchHook<AppDispatch | AppThunk>();\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\n","import { CookiePropsType, IngredientType, OrderType } from \"../types\";\n\nexport const getCookie = (name: string) => {\n  const matches = document.cookie.match(\n    new RegExp(\n      \"(?:^|; )\" +\n        name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, \"\\\\$1\") + // eslint-disable-line\n        \"=([^;]*)\"\n    )\n  );\n  return matches ? decodeURIComponent(matches[1]) : undefined;\n};\n\nexport const setCookie = (\n  name: string,\n  value: string | number | boolean,\n  props?: CookiePropsType\n) => {\n  props = {\n    path: \"/\",\n    ...props,\n  };\n  let exp = props.expires;\n  const d = new Date();\n  if (typeof exp == \"number\" && exp) {\n    d.setTime(d.getTime() + exp * 1000);\n    exp = props.expires = +d;\n  }\n  if (exp && d.toUTCString) {\n    props.expires = d.toUTCString();\n  }\n  value = encodeURIComponent(value);\n  let updatedCookie = name + \"=\" + value;\n  for (const propName in props) {\n    updatedCookie += \"; \" + propName;\n    const propValue = props[propName];\n    if (propValue !== true) {\n      updatedCookie += \"=\" + propValue;\n    }\n  }\n  document.cookie = updatedCookie;\n};\n\nexport const deleteCookie = (name: string) => {\n  setCookie(name, false, { expires: -1 });\n};\n\nexport const calculateTotalPrice = (\n  ingredients: IngredientType[] | undefined,\n  bun?: IngredientType | null\n) => {\n  if (!ingredients) return 0;\n  return (\n    ingredients?.reduce((total, item) => total + item?.price, 0) +\n    (bun?.price || 0) * 2\n  );\n};\n\nexport const getOrderIngredients = (\n  ingredients: IngredientType[],\n  ids: string[]\n) => {\n  if (!ingredients || ingredients.length === 0 || !ids || ids.length === 0)\n    return;\n  const result = ids.map((id) => {\n    const ingredient = ingredients?.filter((item) => item._id === id)[0];\n    const count = ids.filter((idForCount) => idForCount === id).length;\n    if (ingredient) {\n      ingredient.count = count;\n    }\n    return ingredient;\n  });\n  return result.filter((item) => !!item);\n};\n\nconst CurrentDay = (dayCount: number) =>\n  dayCount === 0\n    ? \"Сегодня\"\n    : dayCount === 1\n    ? \"Вчера\"\n    : `${dayCount} дня(-ей) назад`;\n\nexport const getOrderDate = (date: string) => {\n  const CreatedDate = new Date(date);\n  const CurrentDate = new Date().setHours(0, 0, 0, 0);\n\n  const dayCount = Math.ceil(\n    (CurrentDate - CreatedDate.getTime()) / (60 * 60 * 24 * 1000)\n  );\n  const hours =\n    CreatedDate.getHours() > 9\n      ? CreatedDate.getHours()\n      : `0${CreatedDate.getHours()}`;\n  const minutes =\n    CreatedDate.getMinutes() > 9\n      ? CreatedDate.getMinutes()\n      : `0${CreatedDate.getMinutes()}`;\n\n  return `${CurrentDay(dayCount)}, ${hours}:${minutes} i-GMT+${\n    (CreatedDate.getTimezoneOffset() * -1) / 60\n  }`;\n};\n\nexport const sortByStatus = (orders: OrderType[] | undefined) => {\n  if (!orders || orders.length === 0) return;\n  return orders.reduce(\n    (result: { [name: string]: number[] }, order) => {\n      if (order.status === \"done\") result.done.push(order.number);\n      if (order.status === \"pending\") result.pending.push(order.number);\n\n      return result;\n    },\n    { done: [], pending: [] }\n  );\n};\n\nexport const divideIntoColumns = (orders: number[] | undefined) => {\n  if (!orders || orders.length === 0) return;\n  const firstColumn = orders.slice(0, 10);\n  const secondColumn = orders.slice(10, 20);\n\n  return { firstColumn, secondColumn };\n};\n","import { getCookie, setCookie } from \".\";\n\nconst baseUrl = \"https://norma.nomoreparties.space/api\";\nconst baseHeaders = { \"Content-Type\": \"application/json\" };\n\nexport const BURGER_API_WSS_FEED = \"wss://norma.nomoreparties.space/orders/all\";\n\nconst BURGER_API_WSS_ORDERS = \"wss://norma.nomoreparties.space/orders\";\n\nexport const getWssOrderUrlWithToken = () =>\n  `${BURGER_API_WSS_ORDERS}?token=${\n    getCookie(\"token\") ? getCookie(\"token\")?.replace(\"Bearer \", \"\") : \"\"\n  }`;\n\nconst handleRequest = (res: Response) => {\n  return res.ok\n    ? res.json()\n    : res.json().then((error) => Promise.reject(error));\n};\n\nexport const getIngredients = async () => {\n  const res = await fetch(`${baseUrl}/ingredients`);\n  return await handleRequest(res);\n};\n\nexport const getOrderNumber = async (orderData: string[]) => {\n  return await fetchWithRefresh(`${baseUrl}/orders`, {\n    method: \"POST\",\n    headers: {\n      ...baseHeaders,\n      authorization: \"Bearer \" + getCookie(\"token\"),\n    },\n    body: JSON.stringify({ ingredients: orderData }),\n  });\n};\n\nexport const getOrderRequest = async (orderNumber: string) => {\n  const res = await fetch(`${baseUrl}/orders/${orderNumber}`, {\n    method: \"GET\",\n    headers: baseHeaders,\n  });\n  return await handleRequest(res);\n};\n\nexport const getUserOrderRequest = async (orderNumber: string) => {\n  return await fetchWithRefresh(`${baseUrl}/orders/${orderNumber}`, {\n    method: \"GET\",\n    headers: {\n      ...baseHeaders,\n      authorization: \"Bearer \" + getCookie(\"token\"),\n    },\n  });\n};\n\nexport const register = async (\n  email: string,\n  password: string,\n  name: string\n) => {\n  const res = await fetch(`${baseUrl}/auth/register`, {\n    method: \"POST\",\n    headers: baseHeaders,\n    body: JSON.stringify({ email, password, name }),\n  });\n  return await handleRequest(res);\n};\n\nexport const login = async (email: string, password: string) => {\n  const res = await fetch(`${baseUrl}/auth/login`, {\n    method: \"POST\",\n    headers: baseHeaders,\n    body: JSON.stringify({ email, password }),\n  });\n  return await handleRequest(res);\n};\n\nexport const forgotPassword = async (email: string) => {\n  const res = await fetch(`${baseUrl}/password-reset`, {\n    method: \"POST\",\n    headers: baseHeaders,\n    body: JSON.stringify({ email }),\n  });\n  return await handleRequest(res);\n};\n\nexport const resetPassword = async (password: string, token: string) => {\n  const res = await fetch(`${baseUrl}/password-reset/reset`, {\n    method: \"POST\",\n    headers: baseHeaders,\n    body: JSON.stringify({ password, token }),\n  });\n  return await handleRequest(res);\n};\n\nexport const logout = async () => {\n  const res = await fetch(`${baseUrl}/auth/logout`, {\n    method: \"POST\",\n    headers: baseHeaders,\n    body: JSON.stringify({ token: localStorage.getItem(\"refreshToken\") }),\n  });\n  return await handleRequest(res);\n};\n\nexport const refreshToken = async () => {\n  const res = await fetch(`${baseUrl}/auth/token`, {\n    method: \"POST\",\n    headers: baseHeaders,\n    body: JSON.stringify({ token: localStorage.getItem(\"refreshToken\") }),\n  });\n  return await handleRequest(res);\n};\n\nexport const fetchWithRefresh = async (url: string, options: RequestInit) => {\n  try {\n    const res = await fetch(url, options);\n    return await handleRequest(res);\n  } catch (err) {\n    if (err.message === \"jwt expired\") {\n      const refreshData = await refreshToken();\n      localStorage.setItem(\"refreshToken\", refreshData.refreshToken);\n      setCookie(\"token\", refreshData.accessToken.split(\"Bearer \")[1]);\n      (options.headers as { [key: string]: string }).authorization =\n        refreshData.accessToken;\n      const res = await fetch(url, options);\n      return await handleRequest(res);\n    } else {\n      return Promise.reject(err);\n    }\n  }\n};\n\nexport const getUser = async () => {\n  return await fetchWithRefresh(`${baseUrl}/auth/user`, {\n    method: \"GET\",\n    headers: {\n      ...baseHeaders,\n      authorization: \"Bearer \" + getCookie(\"token\"),\n    },\n  });\n};\n\nexport const updateUser = async (\n  name: string,\n  email: string,\n  password: string | undefined\n) => {\n  return await fetchWithRefresh(`${baseUrl}/auth/user`, {\n    method: \"PATCH\",\n    headers: {\n      ...baseHeaders,\n      authorization: \"Bearer \" + getCookie(\"token\"),\n    },\n    body: JSON.stringify({ name, email, password }),\n  });\n};\n","import {\n  AppDispatch,\n  AppThunk,\n  IngredientType,\n  IngredientWithKeyType,\n  OrderType,\n} from \"../types\";\nimport {\n  getIngredients,\n  getOrderNumber,\n  getOrderRequest,\n} from \"../utils/burger-api\";\n\nexport const GET_INGREDIENTS_REQUEST: \"GET_INGREDIENTS_REQUEST\" =\n  \"GET_INGREDIENTS_REQUEST\";\nexport const GET_INGREDIENTS_SUCCESS: \"GET_INGREDIENTS_SUCCESS\" =\n  \"GET_INGREDIENTS_SUCCESS\";\nexport const GET_INGREDIENTS_FAILURE: \"GET_INGREDIENTS_FAILURE\" =\n  \"GET_INGREDIENTS_FAILURE\";\n\nexport const ADD_CONSTRUCTOR_ITEM: \"ADD_CONSTRUCTOR_ITEM\" =\n  \"ADD_CONSTRUCTOR_ITEM\";\nexport const DELETE_CONSTRUCTOR_ITEM: \"DELETE_CONSTRUCTOR_ITEM\" =\n  \"DELETE_CONSTRUCTOR_ITEM\";\nexport const REORDER_CONSTRUCTOR_ITEMS: \"REORDER_CONSTRUCTOR_ITEMS\" =\n  \"REORDER_CONSTRUCTOR_ITEMS\";\n\nexport const DELETE_ORDER: \"DELETE_ORDER\" = \"DELETE_ORDER\";\n\nexport const GET_ORDER_DETAILS_REQUEST: \"GET_ORDER_DETAILS_REQUEST\" =\n  \"GET_ORDER_DETAILS_REQUEST\";\nexport const GET_ORDER_DETAILS_SUCCESS: \"GET_ORDER_DETAILS_SUCCESS\" =\n  \"GET_ORDER_DETAILS_SUCCESS\";\nexport const GET_ORDER_DETAILS_FAILURE: \"GET_ORDER_DETAILS_FAILURE\" =\n  \"GET_ORDER_DETAILS_FAILURE\";\n\nexport const SET_ORDER_INVALID: \"SET_ORDER_INVALID\" = \"SET_ORDER_INVALID\";\n\nexport const DELETE_ORDER_DETAILS: \"DELETE_ORDER_DETAILS\" =\n  \"DELETE_ORDER_DETAILS\";\n\nexport const GET_ORDER_REQUEST: \"GET_ORDER_REQUEST\" = \"GET_ORDER_REQUEST\";\nexport const GET_ORDER_SUCCESS: \"GET_ORDER_SUCCESS\" = \"GET_ORDER_SUCCESS\";\nexport const GET_ORDER_FAILURE: \"GET_ORDER_FAILURE\" = \"GET_ORDER_FAILURE\";\n\nexport interface IGetIngredientsRequest {\n  readonly type: typeof GET_INGREDIENTS_REQUEST;\n}\n\nexport interface IGetIngredientsSuccess {\n  readonly type: typeof GET_INGREDIENTS_SUCCESS;\n  readonly payload: IngredientType[];\n}\n\nexport interface IGetIngredientFailure {\n  readonly type: typeof GET_INGREDIENTS_FAILURE;\n}\n\nexport interface IAddConstructorItem {\n  readonly type: typeof ADD_CONSTRUCTOR_ITEM;\n  payload: IngredientType;\n}\nexport interface IDeleteConstructorItem {\n  readonly type: typeof DELETE_CONSTRUCTOR_ITEM;\n  payload: IngredientWithKeyType;\n}\nexport interface IReorderConstructorItem {\n  readonly type: typeof REORDER_CONSTRUCTOR_ITEMS;\n  payload: { toIndex: number; fromIndex: number };\n}\nexport interface IDeleteOrder {\n  readonly type: typeof DELETE_ORDER;\n}\n\nexport interface IGetOrderDetailsRequest {\n  readonly type: typeof GET_ORDER_DETAILS_REQUEST;\n}\n\nexport interface IGetOrderDetailsSuccess {\n  readonly type: typeof GET_ORDER_DETAILS_SUCCESS;\n  readonly payload: number;\n}\n\nexport interface IGetOrderDetailsFailure {\n  readonly type: typeof GET_ORDER_DETAILS_FAILURE;\n}\nexport interface ISetOrderInvalid {\n  readonly type: typeof SET_ORDER_INVALID;\n  readonly payload: boolean;\n}\nexport interface IDeleteOrderDetails {\n  readonly type: typeof DELETE_ORDER_DETAILS;\n  readonly payload: boolean;\n}\nexport interface IGetOrderRequest {\n  readonly type: typeof GET_ORDER_REQUEST;\n}\n\nexport interface IGetOrderSuccess {\n  readonly type: typeof GET_ORDER_SUCCESS;\n  readonly payload: OrderType;\n}\n\nexport interface IGetOrderFailure {\n  readonly type: typeof GET_ORDER_FAILURE;\n}\n\nexport type GetIngredientsActions =\n  | IGetIngredientsRequest\n  | IGetIngredientsSuccess\n  | IGetIngredientFailure;\n\nexport type BurgerConstructorActions =\n  | IAddConstructorItem\n  | IDeleteConstructorItem\n  | IReorderConstructorItem\n  | IDeleteOrder;\n\nexport type OrderActions =\n  | IGetOrderDetailsRequest\n  | IGetOrderDetailsSuccess\n  | IGetOrderDetailsFailure\n  | ISetOrderInvalid\n  | IDeleteOrderDetails\n  | IGetOrderRequest\n  | IGetOrderSuccess\n  | IGetOrderFailure;\n\nexport const getBurgerIngredients: AppThunk = () => {\n  return async function (dispatch: AppDispatch) {\n    dispatch({\n      type: GET_INGREDIENTS_REQUEST,\n    });\n\n    try {\n      const res = await getIngredients();\n      if (res && res.success) {\n        dispatch({\n          type: GET_INGREDIENTS_SUCCESS,\n          payload: res.data,\n        });\n      } else {\n        throw new Error(\"Response status is not OK\");\n      }\n    } catch (error) {\n      dispatch({\n        type: GET_INGREDIENTS_FAILURE,\n      });\n      console.log(\"There is a problem with your Fetch request\", error.message);\n    }\n  };\n};\n\nexport const getOrderDetails: AppThunk = (orderData: string[]) => {\n  return async function (dispatch: AppDispatch) {\n    dispatch({\n      type: GET_ORDER_DETAILS_REQUEST,\n    });\n\n    try {\n      const res = await getOrderNumber(orderData);\n      if (res && res.success) {\n        dispatch({\n          type: GET_ORDER_DETAILS_SUCCESS,\n          payload: res.order.number,\n        });\n      } else {\n        throw new Error(\"Response status is not OK\");\n      }\n    } catch (error) {\n      dispatch({\n        type: GET_ORDER_DETAILS_FAILURE,\n      });\n      console.log(\"There is a problem with your Fetch request\", error.message);\n    }\n  };\n};\n\nexport const getOrder: AppThunk = (orderNumber: string) => {\n  return async function (dispatch: AppDispatch) {\n    dispatch({\n      type: GET_ORDER_REQUEST,\n    });\n\n    try {\n      const res = await getOrderRequest(orderNumber);\n      if (res && res.success) {\n        dispatch({\n          type: GET_ORDER_SUCCESS,\n          payload: res.orders[0],\n        });\n      } else {\n        throw new Error(\"Response status is not OK\");\n      }\n    } catch (error) {\n      dispatch({\n        type: GET_ORDER_FAILURE,\n      });\n      console.log(\"There is a problem with your Fetch request\", error.message);\n    }\n  };\n};\n\n// export function getUserOrder(orderNumber) {\n//   return async function (dispatch) {\n//     dispatch({\n//       type: GET_USER_ORDER_REQUEST,\n//     });\n\n//     try {\n//       const res = await getUserOrderRequest(orderNumber);\n//       if (res && res.success) {\n//         dispatch({\n//           type: GET_USER_ORDER_SUCCESS,\n//           payload: res.orders[0],\n//         });\n//       } else {\n//         throw new Error(\"Response status is not OK\");\n//       }\n//     } catch (error) {\n//       dispatch({\n//         type: GET_USER_ORDER_FAILURE,\n//       });\n//       console.log(\"There is a problem with your Fetch request\", error.message);\n//     }\n//   };\n// }\n","import React, { FC, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Modal from \"./modal\";\nimport ModalOverlay from \"./modal-overlay\";\nimport styles from \"./popup.module.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"../../hooks\";\nimport { DELETE_ORDER, DELETE_ORDER_DETAILS } from \"../../services/actions\";\nimport { PopupProps } from \"./types\";\n\nconst modalRoot = document.getElementById(\"modal\") as Element;\n\nconst Popup: FC<PopupProps> = ({ children, title }) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { isOrdered } = useSelector((store) => store.order);\n\n  const onClose = () => {\n    history.goBack();\n    if (isOrdered) {\n      dispatch({ type: DELETE_ORDER });\n      dispatch({ type: DELETE_ORDER_DETAILS, payload: false });\n    }\n  };\n\n  const exitOnEsc = (event: KeyboardEvent) => {\n    if (event.keyCode === 27) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", exitOnEsc);\n\n    return () => {\n      document.removeEventListener(\"keydown\", exitOnEsc);\n    };\n  }, []);\n\n  return ReactDOM.createPortal(\n    <div className={styles.popup} id=\"popup\">\n      <Modal onClose={onClose} title={title}>\n        {children}\n      </Modal>\n      <ModalOverlay onClose={onClose} />\n    </div>,\n    modalRoot\n  );\n};\n\nexport default Popup;\n","import React from \"react\";\nimport styles from \"./ingredient-details.module.css\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"../../hooks\";\nimport { IngredientType } from \"../../types\";\n\nconst IngredientDetails = () => {\n  const { id } = useParams<{ id: string }>();\n\n  const ingredients = useSelector(\n    (store) => store.burgerIngredients.ingredients\n  );\n\n  const product = ingredients.find(\n    (ingredient: IngredientType) => ingredient._id === id\n  );\n\n  return (\n    <>\n      {product && (\n        <div className={styles.details}>\n          <img src={product.image_large} alt={product.name} className=\"mb-4\" />\n          <p className=\"text text_type_main-medium\">{product.name}</p>\n          <p className=\"text text_type_main-default mt-8 mb-8\">\n            Супер {product.name} для фирменных космических бургеров, набирающих\n            популярность по всей вселенной.\n          </p>\n          <div className={`text_color_inactive ${styles.nutrition}`}>\n            <div className={`mr-5 ${styles.item}`}>\n              <span className=\"text text_type_main-default\">Калории,ккал</span>\n              <span className=\"text text_type_digits-default mt-4\">\n                {product.calories}\n              </span>\n            </div>\n            <div className={`mr-5 ${styles.item}`}>\n              <span className=\"text text_type_main-default\">Белки, г</span>\n              <span className=\"text text_type_digits-default mt-4\">\n                {product.proteins}\n              </span>\n            </div>\n            <div className={`mr-5 ${styles.item}`}>\n              <span className=\"text text_type_main-default\">Жиры, г</span>\n              <span className=\"text text_type_digits-default mt-4\">\n                {product.fat}\n              </span>\n            </div>\n            <div className={` ${styles.item}`}>\n              <span className=\"text text_type_main-default\">Углеводы, г</span>\n              <span className=\"text text_type_digits-default mt-4\">\n                {product.carbohydrates}\n              </span>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default IngredientDetails;\n","export default __webpack_public_path__ + \"static/media/done.dc2f52b0.png\";","import React from \"react\";\nimport styles from \"./loader.module.css\";\n\nconst Loader = () => {\n  return (\n    <div className={styles.loading}>\n      <div className={styles.dot}></div>\n      <div className={styles.dot}></div>\n      <div className={styles.dot}></div>\n      <div className={styles.dot}></div>\n      <div className={styles.dot}></div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport Done from \"../../images/done.png\";\nimport styles from \"./order-details.module.css\";\nimport { useSelector } from \"../../hooks\";\nimport Loader from \"../loader\";\n\nconst OrderDetails = () => {\n  const { orderNumber, isOrderInvalid } = useSelector((store) => store.order);\n  const { burgerStuffing } = useSelector((store) => store.burgerConstructor);\n\n  if (burgerStuffing.length === 0) {\n    return (\n      <div className={`text text_type_main-medium pb-6  ${styles.error_text}`}>\n        <p> Ой! </p>\n        <p> Вы забыли сделать заказ! </p>\n      </div>\n    );\n  }\n\n  if (isOrderInvalid) {\n    return (\n      <div className={`text text_type_main-medium pb-6  ${styles.error_text}`}>\n        <p> Ой! </p>\n        <p> В бургере не хватает булки! </p>\n      </div>\n    );\n  }\n\n  if (!orderNumber) {\n    return (\n      <div className=\"m-10\">\n        <Loader />\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.main}>\n      <span\n        className={`text text_type_digits-large mt-4 mb-8 ${styles.shadow}`}\n      >\n        {orderNumber}\n      </span>\n      <span className=\"text text_type_main-medium mb-5\">\n        идентификатор заказа\n      </span>\n      <img src={Done} className=\"mt-10 mb-10\" alt=\"done icon\" />\n      <span className=\"text text_type_main-default mt-5 mb-2\">\n        Ваш заказ начали готовить\n      </span>\n      <span className=\"text text_type_main-default text_color_inactive\">\n        Дождитесь готовности на орбитальной станции\n      </span>\n    </div>\n  );\n};\n\nexport default OrderDetails;\n","import {\n  Counter,\n  CurrencyIcon,\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport React, { FC } from \"react\";\nimport styles from \"./menu-item.module.css\";\nimport { useSelector } from \"../../../hooks\";\nimport { useDrag } from \"react-dnd\";\nimport { IngredientType, IngredientWithKeyType } from \"../../../types\";\n\nconst MenuItem: FC<IngredientType> = (menuItem) => {\n  const { burgerStuffing, bun } = useSelector(\n    (store) => store.burgerConstructor\n  );\n\n  const getItemCount = () => {\n    if (menuItem.type === \"bun\") {\n      return bun?._id === menuItem._id ? 1 : 0;\n    }\n    return burgerStuffing.reduce(\n      (count: number, item: IngredientWithKeyType) => {\n        return item.item._id === menuItem._id ? ++count : count;\n      },\n      0\n    );\n  };\n\n  const count = getItemCount();\n\n  const [{ isDrop }, dragRef] = useDrag({\n    type: \"ingredient\",\n    item: menuItem,\n    collect: (monitor) => ({\n      isDrop: monitor.didDrop(),\n    }),\n  });\n\n  return (\n    <div className={` mr-3 ml-3 mb-8 ${styles.item}`} ref={dragRef}>\n      {count > 0 && <Counter count={count} size=\"small\" />}\n      <img\n        src={menuItem.image}\n        alt={menuItem.name}\n        className=\"mr-4 mb-1 ml-4\"\n      />\n      <p className={`text text_type_digits-default ${styles.price}`}>\n        {menuItem.price}\n        <CurrencyIcon type=\"primary\" />\n      </p>\n      <p\n        className={`text text_type_main-default mt-1 pr-1 pb-6 pl-1 ${styles.title}`}\n      >\n        {menuItem.name}\n      </p>\n    </div>\n  );\n};\n\nexport default MenuItem;\n","import { Tab } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport React, { FC } from \"react\";\nimport { TabsProps } from \"./types\";\n\nconst Tabs: FC<TabsProps> = ({ titles, setCurrent, current }) => {\n  return (\n    <div style={{ display: \"flex\" }} className=\"text text_type_main-default\">\n      {titles.map((title) => (\n        <Tab\n          key={title.key}\n          value={title.type}\n          active={current === title.type}\n          onClick={setCurrent}\n        >\n          {title.name}\n        </Tab>\n      ))}\n    </div>\n  );\n};\n\nexport default Tabs;\n","import React, { useState } from \"react\";\nimport MenuItem from \"./menu-item\";\nimport Tabs from \"../tabs\";\nimport styles from \"./burger-ingredients.module.css\";\nimport { useSelector } from \"../../hooks\";\nimport { useInView } from \"react-intersection-observer\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport { IngredientType } from \"../../types\";\n\nconst BurgerIngredients = () => {\n  const location = useLocation();\n\n  const [current, setCurrent] = useState<string>(\"bun\");\n\n  const ingredients = useSelector(\n    (store) => store.burgerIngredients.ingredients\n  );\n\n  const titles = [\n    { name: \"Булки\", key: \"1\", type: \"bun\" },\n    { name: \"Соусы\", key: \"2\", type: \"sauce\" },\n    { name: \"Начинки\", key: \"3\", type: \"main\" },\n  ];\n\n  const [bun, bunInView] = useInView({\n    threshold: 0.8,\n  });\n\n  const [sauce, sauceInView] = useInView({\n    threshold: 0.7,\n  });\n\n  const [main, mainInView] = useInView({\n    threshold: 0.3,\n  });\n\n  const handleScroll = () => {\n    bunInView && setCurrent(\"bun\");\n    sauceInView && !bunInView && setCurrent(\"sauce\");\n    mainInView && !sauceInView && setCurrent(\"main\");\n  };\n\n  return (\n    <section className={`mr-5 ${styles.container}`}>\n      <h1 className=\"text text_type_main-large mt-10 mb-5\">Соберите бургер</h1>\n      <Tabs titles={titles} setCurrent={setCurrent} current={current} />\n      <div className={`mt-8 ${styles.scroll_menu}`} onScroll={handleScroll}>\n        {titles.map(({ name, key, type }) => {\n          const items = ingredients.filter(\n            (product: IngredientType) => product.type === type\n          );\n          return (\n            <div\n              key={key}\n              ref={type === \"bun\" ? bun : type === \"sauce\" ? sauce : main}\n            >\n              <h2 className=\"text text_type_main-medium mt-2 mb-6\">{name}</h2>\n              <ul className={`mr-1 ml-1 ${styles.menu}`}>\n                {items.map((menuItem: IngredientType) => (\n                  <li key={menuItem._id}>\n                    <Link\n                      to={{\n                        pathname: `/ingredients/${menuItem._id}`,\n                        state: { background: location },\n                      }}\n                      className={styles.link}\n                    >\n                      <MenuItem {...menuItem} />\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          );\n        })}\n      </div>\n    </section>\n  );\n};\n\nexport default BurgerIngredients;\n","import {\n  ConstructorElement,\n  DragIcon,\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport React, { FC } from \"react\";\nimport { useDrag, useDrop, DropTargetMonitor } from \"react-dnd\";\nimport { useDispatch } from \"react-redux\";\nimport { DELETE_CONSTRUCTOR_ITEM } from \"../../../services/actions\";\nimport styles from \"./constructor-item.module.css\";\nimport { DragIdType, PropsType } from \"./types\";\nimport { IngredientWithKeyType } from \"../../../types\";\n\nconst ConstructorItem: FC<PropsType> = ({ item, id, findItem, moveItem }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteItem = (item: IngredientWithKeyType) => () => {\n    dispatch({ type: DELETE_CONSTRUCTOR_ITEM, payload: item });\n  };\n\n  const originalIndex = findItem(id).index;\n\n  const [{ isDrag }, drag] = useDrag(\n    () => ({\n      type: \"item\",\n      item: { id, originalIndex },\n      collect: (monitor) => ({\n        isDrag: monitor.isDragging(),\n      }),\n      end: (item, monitor) => {\n        const { id, originalIndex } = item;\n        const didDrop = monitor.didDrop();\n        if (!didDrop) {\n          moveItem(id, originalIndex);\n        }\n      },\n    }),\n    [id, originalIndex, moveItem]\n  );\n\n  const [{ handlerId }, drop] = useDrop(\n    {\n      accept: \"item\",\n      collect(monitor) {\n        return {\n          handlerId: monitor.getHandlerId(),\n        };\n      },\n      hover(item: DragIdType, monitor: DropTargetMonitor) {\n        const draggedId = item.id;\n        if (draggedId !== id) {\n          const { index: overIndex } = findItem(id);\n          moveItem(draggedId, overIndex);\n        }\n      },\n    },\n    [findItem, moveItem]\n  );\n\n  const opacity = isDrag ? 0 : 1;\n\n  return (\n    <li\n      ref={(node) => drag(drop(node))}\n      style={{ opacity }}\n      className={styles.item}\n    >\n      <DragIcon type=\"primary\" />\n      <ConstructorElement\n        text={item.item.name}\n        thumbnail={item.item.image_mobile}\n        price={item.item.price}\n        isLocked={false}\n        handleClose={handleDeleteItem(item)}\n      />\n    </li>\n  );\n};\n\nexport default ConstructorItem;\n","import {\n  Button,\n  ConstructorElement,\n  CurrencyIcon,\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport React, { useCallback } from \"react\";\nimport styles from \"./burger-constructor.module.css\";\nimport { useDispatch, useSelector } from \"../../hooks\";\nimport {\n  ADD_CONSTRUCTOR_ITEM,\n  DELETE_ORDER_DETAILS,\n  getOrderDetails,\n  REORDER_CONSTRUCTOR_ITEMS,\n  SET_ORDER_INVALID,\n} from \"../../services/actions\";\nimport { useDrop } from \"react-dnd\";\nimport ConstructorItem from \"./constructor-item/constructor-item\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { push } from \"connected-react-router\";\nimport { calculateTotalPrice } from \"../../utils\";\nimport { IngredientType, IngredientWithKeyType } from \"../../types\";\nimport { FindCallback, MoveCallback } from \"./types\";\n\nconst BurgerConstructor = () => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useHistory();\n  const isToken = localStorage.getItem(\"refreshToken\");\n\n  const { bun, burgerStuffing } = useSelector(\n    (store) => store.burgerConstructor\n  );\n\n  const stuffingIngredients = burgerStuffing.map(\n    (ingredient: IngredientWithKeyType) => ingredient.item\n  );\n  const totalPrice = calculateTotalPrice(stuffingIngredients, bun);\n  if (bun) {\n    stuffingIngredients.unshift(bun);\n    stuffingIngredients.push(bun);\n  }\n\n  //======================== * functions for constructor elements * =======================\n\n  const handlerDropItem = (item: IngredientType) => {\n    dispatch({\n      type: ADD_CONSTRUCTOR_ITEM,\n      payload: item,\n    });\n  };\n\n  const openModal = () => {\n    if (isToken) {\n      const isOrderValid = !!bun;\n      const stuffingIds = stuffingIngredients.map(\n        (item: IngredientType) => item._id\n      );\n      if (isOrderValid && stuffingIds.length > 2) {\n        dispatch({ type: SET_ORDER_INVALID, payload: !isOrderValid });\n        dispatch(getOrderDetails(stuffingIds));\n        history.push({\n          pathname: \"/order\",\n          state: {\n            background: location,\n          },\n        });\n        ClearBurgerConstructor();\n      } else {\n        dispatch({ type: SET_ORDER_INVALID, payload: !isOrderValid });\n        history.push({\n          pathname: \"/order\",\n          state: {\n            background: location,\n          },\n        });\n      }\n    } else {\n      dispatch(push(\"/login\"));\n    }\n  };\n\n  const ClearBurgerConstructor = () => {\n    dispatch({ type: DELETE_ORDER_DETAILS, payload: true });\n  };\n\n  //======================= * DND hooks and functions * ===============================================\n\n  const findItem = useCallback<FindCallback>(\n    (key) => {\n      const ingredient = burgerStuffing.filter(\n        (item: IngredientWithKeyType) => item.key === key\n      )[0];\n      return {\n        ingredient,\n        index: burgerStuffing.indexOf(ingredient),\n      };\n    },\n    [burgerStuffing]\n  );\n\n  const moveItem = useCallback<MoveCallback>(\n    (key, fromIndex) => {\n      const { index } = findItem(key);\n      dispatch({\n        type: REORDER_CONSTRUCTOR_ITEMS,\n        payload: { toIndex: index, fromIndex },\n      });\n    },\n    [findItem, burgerStuffing, dispatch]\n  );\n\n  const [{ isHover }, dropTarget] = useDrop({\n    accept: \"ingredient\",\n    drop(item: IngredientType) {\n      handlerDropItem(item);\n    },\n    collect: (monitor) => ({\n      isHover: monitor.isOver(),\n    }),\n  });\n\n  const [, dropRef] = useDrop(() => ({ accept: \"item\" }));\n\n  //================ * elements for initial constructor * =============================\n  const background = isHover ? \"#61616b\" : \"#2f2f37\";\n  const topBun = (\n    <div\n      className={`${styles.constructor_item_pos_top} ${styles.constructor_item}`}\n      style={{ background }}\n    >\n      <span className={styles.constructor_item__row}>Добавьте булку</span>\n    </div>\n  );\n\n  const bottomBun = (\n    <div\n      className={`${styles.constructor_item_pos_bottom} ${styles.constructor_item}`}\n      style={{ background }}\n    >\n      <span className={styles.constructor_item__row}>Добавьте булку</span>\n    </div>\n  );\n\n  const stuffing = (\n    <div\n      className={`${styles.constructor_item} ${styles.constructor_item}`}\n      style={{ background }}\n    >\n      <span className={styles.constructor_item__row}>Добавьте начинку</span>\n    </div>\n  );\n\n  return (\n    <section\n      ref={dropTarget}\n      className={`ml-5  ${styles.section}`}\n      id=\"container\"\n    >\n      <div className={styles.main}>\n        {bun ? (\n          <ConstructorElement\n            text={`${bun.name} (верх)`}\n            type=\"top\"\n            thumbnail={bun.image_mobile}\n            price={bun.price}\n            isLocked={true}\n          />\n        ) : (\n          topBun\n        )}\n        {burgerStuffing.length ? (\n          <ul ref={dropRef} className={`mt-4 mb-2 ${styles.scroll}`}>\n            {burgerStuffing.map((item: IngredientWithKeyType) => (\n              <div key={item.key} className={styles.item}>\n                <ConstructorItem\n                  id={item.key}\n                  item={item}\n                  findItem={findItem}\n                  moveItem={moveItem}\n                />\n              </div>\n            ))}\n          </ul>\n        ) : (\n          stuffing\n        )}\n        {bun ? (\n          <ConstructorElement\n            text={`${bun?.name} (низ)`}\n            type=\"bottom\"\n            thumbnail={bun?.image_mobile}\n            price={bun?.price}\n            isLocked={true}\n          />\n        ) : (\n          bottomBun\n        )}\n      </div>\n      <div className={`m-5 pr-4 ${styles.total_order}`}>\n        <span className=\"text text_type_digits-medium pr-10\">\n          {totalPrice} <CurrencyIcon type=\"primary\" />\n        </span>\n        <Button type=\"primary\" size=\"large\" onClick={openModal}>\n          Оформить заказ\n        </Button>\n      </div>\n    </section>\n  );\n};\n\nexport default BurgerConstructor;\n","import React from \"react\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { DndProvider } from \"react-dnd\";\nimport BurgerIngredients from \"../../components/burger-ingredients/burger-ingredients\";\nimport BurgerConstructor from \"../../components/burger-constructor\";\nimport styles from \"./home-page.module.css\";\n\nconst HomePage = () => {\n  return (\n    <div className={styles.main}>\n      <DndProvider backend={HTML5Backend}>\n        <BurgerIngredients />\n        <BurgerConstructor />\n      </DndProvider>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import { deleteCookie, setCookie } from \"../utils\";\nimport { push } from \"connected-react-router\";\nimport {\n  register,\n  login,\n  forgotPassword,\n  resetPassword,\n  logout,\n  refreshToken,\n  getUser,\n  updateUser,\n} from \"../utils/burger-api\";\nimport { AppDispatch, AppThunk, UserType } from \"../types\";\n\nexport const REGISTER_REQUEST: \"REGISTER_REQUEST\" = \"REGISTER_REQUEST\";\nexport const REGISTER_SUCCESS: \"REGISTER_SUCCESS\" = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAILURE: \"REGISTER_FAILURE\" = \"REGISTER_FAILURE\";\n\nexport const LOGIN_REQUEST: \"LOGIN_REQUEST\" = \"LOGIN_REQUEST\";\nexport const LOGIN_SUCCESS: \"LOGIN_SUCCESS\" = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAILURE: \"LOGIN_FAILURE\" = \"LOGIN_FAILURE\";\n\nexport const LOGOUT_REQUEST: \"LOGOUT_REQUEST\" = \"LOGOUT_REQUEST\";\nexport const LOGOUT_SUCCESS: \"LOGOUT_SUCCESS\" = \"LOGOUT_SUCCESS\";\nexport const LOGOUT_FAILURE: \"LOGOUT_FAILURE\" = \"LOGOUT_FAILURE\";\n\nexport const FORGOT_PASSWORD_REQUEST: \"FORGOT_PASSWORD_REQUEST\" =\n  \"FORGOT_PASSWORD_REQUEST\";\nexport const FORGOT_PASSWORD_SUCCESS: \"FORGOT_PASSWORD_SUCCESS\" =\n  \"FORGOT_PASSWORD_SUCCESS\";\nexport const FORGOT_PASSWORD_FAILURE: \"FORGOT_PASSWORD_FAILURE\" =\n  \"FORGOT_PASSWORD_FAILURE\";\n\nexport const RESET_PASSWORD_REQUEST: \"RESET_PASSWORD_REQUEST\" =\n  \"RESET_PASSWORD_REQUEST\";\nexport const RESET_PASSWORD_SUCCESS: \"RESET_PASSWORD_SUCCESS\" =\n  \"RESET_PASSWORD_SUCCESS\";\nexport const RESET_PASSWORD_FAILURE: \"RESET_PASSWORD_FAILURE\" =\n  \"RESET_PASSWORD_FAILURE\";\n\nexport const REFRESH_TOKEN_REQUEST: \"REFRESH_TOKEN_REQUEST\" =\n  \"REFRESH_TOKEN_REQUEST\";\nexport const REFRESH_TOKEN_SUCCESS: \"REFRESH_TOKEN_SUCCESS\" =\n  \"REFRESH_TOKEN_SUCCESS\";\nexport const REFRESH_TOKEN_FAILURE: \"REFRESH_TOKEN_FAILURE\" =\n  \"REFRESH_TOKEN_FAILURE\";\n\nexport const GET_USER_REQUEST: \"GET_USER_REQUEST\" = \"GET_USER_REQUEST\";\nexport const GET_USER_SUCCESS: \"GET_USER_SUCCESS\" = \"GET_USER_SUCCESS\";\nexport const GET_USER_FAILURE: \"GET_USER_FAILURE\" = \"GET_USER_FAILURE\";\n\nexport const UPDATE_USER_REQUEST: \"UPDATE_USER_REQUEST\" = \"UPDATE_USER_REQUEST\";\nexport const UPDATE_USER_SUCCESS: \"UPDATE_USER_SUCCESS\" = \"UPDATE_USER_SUCCESS\";\nexport const UPDATE_USER_FAILURE: \"UPDATE_USER_FAILURE\" = \"UPDATE_USER_FAILURE\";\n\nexport interface IRegisterRequest {\n  readonly type: typeof REGISTER_REQUEST;\n}\nexport interface IRegisterSuccess {\n  readonly type: typeof REGISTER_SUCCESS;\n  readonly payload: { user: UserType };\n}\nexport interface IRegisterFailure {\n  readonly type: typeof REGISTER_FAILURE;\n}\n\nexport interface ILoginRequest {\n  readonly type: typeof LOGIN_REQUEST;\n}\nexport interface ILoginSuccess {\n  readonly type: typeof LOGIN_SUCCESS;\n  readonly payload: { user: UserType };\n}\nexport interface ILoginFailure {\n  readonly type: typeof LOGIN_FAILURE;\n}\n\nexport interface ILogoutRequest {\n  readonly type: typeof LOGOUT_REQUEST;\n}\nexport interface ILogoutSuccess {\n  readonly type: typeof LOGOUT_SUCCESS;\n}\nexport interface ILogoutFailure {\n  readonly type: typeof LOGOUT_FAILURE;\n}\n\nexport interface IForgotPasswordRequest {\n  readonly type: typeof FORGOT_PASSWORD_REQUEST;\n}\nexport interface IForgotPasswordSuccess {\n  readonly type: typeof FORGOT_PASSWORD_SUCCESS;\n}\nexport interface IForgotPasswordFailure {\n  readonly type: typeof FORGOT_PASSWORD_FAILURE;\n}\n\nexport interface IResetPasswordRequest {\n  readonly type: typeof RESET_PASSWORD_REQUEST;\n}\nexport interface IResetPasswordSuccess {\n  readonly type: typeof RESET_PASSWORD_SUCCESS;\n}\nexport interface IResetPasswordFailure {\n  readonly type: typeof RESET_PASSWORD_FAILURE;\n}\n\nexport interface IRefreshTokenRequest {\n  readonly type: typeof REFRESH_TOKEN_REQUEST;\n}\nexport interface IRefreshTokenSuccess {\n  readonly type: typeof REFRESH_TOKEN_SUCCESS;\n}\nexport interface IRefreshTokenFailure {\n  readonly type: typeof REFRESH_TOKEN_FAILURE;\n}\n\nexport interface IGetUserRequest {\n  readonly type: typeof GET_USER_REQUEST;\n}\nexport interface IGetUserSuccess {\n  readonly type: typeof GET_USER_SUCCESS;\n  readonly payload: { user: UserType };\n}\nexport interface IGetUserFailure {\n  readonly type: typeof GET_USER_FAILURE;\n}\n\nexport interface IUpdateUserRequest {\n  readonly type: typeof UPDATE_USER_REQUEST;\n}\nexport interface IUpdateUserSuccess {\n  readonly type: typeof UPDATE_USER_SUCCESS;\n  readonly payload: { user: UserType };\n}\nexport interface IUpdateUserFailure {\n  readonly type: typeof UPDATE_USER_FAILURE;\n}\n\nexport type UserActions =\n  | IRegisterRequest\n  | IRegisterSuccess\n  | IRegisterFailure\n  | ILoginRequest\n  | ILoginSuccess\n  | ILoginFailure\n  | ILogoutRequest\n  | ILogoutSuccess\n  | ILogoutFailure\n  | IForgotPasswordRequest\n  | IForgotPasswordSuccess\n  | IForgotPasswordFailure\n  | IResetPasswordRequest\n  | IResetPasswordSuccess\n  | IResetPasswordFailure\n  | IRefreshTokenRequest\n  | IRefreshTokenSuccess\n  | IRefreshTokenFailure\n  | IGetUserRequest\n  | IGetUserSuccess\n  | IGetUserFailure\n  | IUpdateUserSuccess\n  | IUpdateUserRequest\n  | IUpdateUserFailure;\n\nexport const userRegister: AppThunk = (email, password, name) => {\n  return async function (dispatch: AppDispatch) {\n    dispatch({\n      type: REGISTER_REQUEST,\n    });\n\n    try {\n      const res = await register(email, password, name);\n      if (res && res.success) {\n        const authToken = res.accessToken.split(\"Bearer \")[1];\n        const refreshToken = res.refreshToken;\n        setCookie(\"token\", authToken);\n        localStorage.setItem(\"refreshToken\", refreshToken);\n        dispatch({\n          type: REGISTER_SUCCESS,\n          payload: { user: res.user },\n        });\n        // dispatch(push(\"/\"));\n      } else {\n        throw new Error(\"User registration failed\");\n      }\n    } catch (error) {\n      dispatch({\n        type: REGISTER_FAILURE,\n      });\n      console.log(\"There is a problem with your request: \", error.message);\n    }\n  };\n};\n\nexport const userLogin: AppThunk = (email, password) => {\n  return async function (dispatch: AppDispatch) {\n    dispatch({\n      type: LOGIN_REQUEST,\n    });\n\n    try {\n      const res = await login(email, password);\n      if (res && res.success) {\n        const authToken = res.accessToken.split(\"Bearer \")[1];\n        const refreshToken = res.refreshToken;\n        setCookie(\"token\", authToken);\n        localStorage.setItem(\"refreshToken\", refreshToken);\n        dispatch({\n          type: LOGIN_SUCCESS,\n          payload: { user: res.user },\n        });\n      } else {\n        throw new Error(\"User signIn is failed\");\n      }\n    } catch (error) {\n      dispatch({\n        type: LOGIN_FAILURE,\n      });\n      console.log(\"There is a problem with your request: \", error.message);\n    }\n  };\n};\n\nexport const userLogout: AppThunk = () => {\n  return async function (dispatch: AppDispatch) {\n    dispatch({\n      type: LOGOUT_REQUEST,\n    });\n    try {\n      const res = await logout();\n      if (res && res.success) {\n        deleteCookie(\"token\");\n        localStorage.removeItem(\"refreshToken\");\n        dispatch({\n          type: LOGOUT_SUCCESS,\n        });\n        dispatch(push(\"/login\"));\n      } else {\n        throw new Error(\"Logout is failed\");\n      }\n    } catch (error) {\n      dispatch({\n        type: LOGOUT_FAILURE,\n      });\n      console.log(\"There is a problem with your request: \", error.message);\n    }\n  };\n};\n\nexport const userForgotPassword: AppThunk = (email) => {\n  return async function (dispatch: AppDispatch) {\n    dispatch({\n      type: FORGOT_PASSWORD_REQUEST,\n    });\n\n    try {\n      const res = await forgotPassword(email);\n      if (res && res.success) {\n        dispatch({\n          type: FORGOT_PASSWORD_SUCCESS,\n        });\n        dispatch(push(\"/reset-password\"));\n      } else {\n        throw new Error(\"Reset email can't be sent\");\n      }\n    } catch (error) {\n      dispatch({\n        type: FORGOT_PASSWORD_FAILURE,\n      });\n      console.log(\"There is a problem with your request: \", error.message);\n    }\n  };\n};\n\nexport const resetUserPassword: AppThunk = (password, token) => {\n  return async function (dispatch: AppDispatch) {\n    dispatch({\n      type: RESET_PASSWORD_REQUEST,\n    });\n\n    try {\n      const res = await resetPassword(password, token);\n      if (res && res.success) {\n        dispatch(push(\"/login\"));\n      } else {\n        throw new Error(\"Reset password is failed\");\n      }\n    } catch (error) {\n      dispatch({\n        type: RESET_PASSWORD_FAILURE,\n      });\n      console.log(\"There is a problem with your request: \", error.message);\n    }\n  };\n};\n\nexport const refreshUserToken: AppThunk = () => {\n  return async function (dispatch: AppDispatch) {\n    dispatch({\n      type: REFRESH_TOKEN_REQUEST,\n    });\n    try {\n      const res = await refreshToken();\n      if (res && res.success) {\n        localStorage.setItem(\"refreshToken\", res.refreshToken);\n        const authToken = res.accessToken.split(\"Bearer \")[1];\n        setCookie(\"token\", authToken);\n        dispatch({\n          type: REFRESH_TOKEN_SUCCESS,\n        });\n      } else {\n        throw new Error(\"Refresh token is failed\");\n      }\n    } catch (error) {\n      dispatch({\n        type: REFRESH_TOKEN_FAILURE,\n      });\n      console.log(\"There is a problem with your request: \", error.message);\n    }\n  };\n};\n\nexport const getUserData: AppThunk = () => {\n  return async function (dispatch: AppDispatch) {\n    dispatch({\n      type: GET_USER_REQUEST,\n    });\n    try {\n      const res = await getUser();\n      if (res && res.success) {\n        dispatch({\n          type: GET_USER_SUCCESS,\n          payload: { user: res.user },\n        });\n      } else {\n        throw new Error(\"Getting user is failed\");\n      }\n    } catch (error) {\n      dispatch({\n        type: GET_USER_FAILURE,\n      });\n      console.log(\"There is a problem with your request: \", error.message);\n    }\n  };\n};\n\nexport const updateUserData: AppThunk = (name, email, password) => {\n  return async function (dispatch: AppDispatch) {\n    dispatch({\n      type: UPDATE_USER_REQUEST,\n    });\n    try {\n      const res = await updateUser(name, email, password);\n      if (res && res.success) {\n        dispatch({\n          type: UPDATE_USER_SUCCESS,\n          payload: { user: res.user },\n        });\n      } else {\n        throw new Error(\"Updating user is failed\");\n      }\n    } catch (error) {\n      dispatch({\n        type: UPDATE_USER_FAILURE,\n      });\n      console.log(\"There is a problem with your request: \", error.message);\n    }\n  };\n};\n","import {\n  Button,\n  Input,\n  PasswordInput,\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport React, { FC, SyntheticEvent } from \"react\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"../../hooks\";\nimport {\n  resetUserPassword,\n  userForgotPassword,\n  userLogin,\n  userRegister,\n} from \"../../services/user-actions\";\nimport styles from \"./user-form.module.css\";\nimport { FormType } from \"./types\";\n\nconst UserForm: FC<FormType> = ({ title, links, type }) => {\n  const dispatch = useDispatch();\n\n  const [emailValue, setEmailValue] = useState<string>(\"\");\n  const [passwordValue, setPasswordValue] = useState<string>(\"\");\n  const [nameValue, setNameValue] = useState<string>(\"\");\n\n  const handleLogin = (event: SyntheticEvent) => {\n    event.preventDefault();\n    dispatch(userLogin(emailValue, passwordValue));\n  };\n\n  const handleRegister = (event: SyntheticEvent) => {\n    event.preventDefault();\n    dispatch(userRegister(emailValue, passwordValue, nameValue));\n  };\n\n  const handleCodeSend = (event: SyntheticEvent) => {\n    event.preventDefault();\n    dispatch(userForgotPassword(emailValue));\n  };\n\n  const handlePasswordRenew = (event: SyntheticEvent) => {\n    event.preventDefault();\n    dispatch(resetUserPassword(passwordValue, nameValue));\n  };\n\n  const createContent = () => {\n    switch (type) {\n      case \"login\":\n        return (\n          <form onSubmit={handleLogin} className={styles.form}>\n            <Input\n              type=\"email\"\n              placeholder=\"E-mail\"\n              value={emailValue}\n              onChange={(e) => setEmailValue(e.target.value)}\n            />\n            <PasswordInput\n              value={passwordValue}\n              name=\"password\"\n              onChange={(e) => setPasswordValue(e.target.value)}\n            />\n            <Button type=\"primary\" size=\"medium\">\n              Войти\n            </Button>\n          </form>\n        );\n      case \"register\":\n        return (\n          <form onSubmit={handleRegister} className={styles.form}>\n            <Input\n              type=\"text\"\n              placeholder=\"Имя\"\n              value={nameValue}\n              onChange={(e) => setNameValue(e.target.value)}\n            />\n            <Input\n              type=\"email\"\n              placeholder=\"E-mail\"\n              value={emailValue}\n              onChange={(e) => setEmailValue(e.target.value)}\n            />\n            <PasswordInput\n              value={passwordValue}\n              name=\"password\"\n              onChange={(e) => setPasswordValue(e.target.value)}\n            />\n            <Button type=\"primary\" size=\"medium\">\n              Зарегистрироваться\n            </Button>\n          </form>\n        );\n      case \"forgot-password\":\n        return (\n          <form onSubmit={handleCodeSend} className={styles.form}>\n            <Input\n              type=\"email\"\n              placeholder=\"Укажите e-mail\"\n              value={emailValue}\n              onChange={(e) => setEmailValue(e.target.value)}\n            />\n            <Button type=\"primary\" size=\"medium\">\n              Восстановить\n            </Button>\n          </form>\n        );\n      case \"reset-password\":\n        return (\n          <form onSubmit={handlePasswordRenew} className={styles.form}>\n            <Input\n              type=\"password\"\n              placeholder=\"Введите новый пароль\"\n              value={passwordValue}\n              onChange={(e) => setPasswordValue(e.target.value)}\n              icon={\"ShowIcon\"}\n            />\n            <Input\n              type=\"text\"\n              placeholder=\"Введите код из письма\"\n              value={nameValue}\n              onChange={(e) => setNameValue(e.target.value)}\n            />\n            <Button type=\"primary\" size=\"medium\">\n              Сохранить\n            </Button>\n          </form>\n        );\n    }\n  };\n\n  const content = createContent() || \"\";\n\n  return (\n    <div className={styles.main}>\n      <span className={`text text_type_main-medium mb-3`}>{title}</span>\n      <div>{content}</div>\n      <div className={styles.link}>{links}</div>\n    </div>\n  );\n};\n\nexport default UserForm;\n","import React from \"react\";\nimport { useSelector } from \"../../hooks\";\nimport { Link, Redirect, useLocation } from \"react-router-dom\";\nimport UserForm from \"../../components/user-form\";\n\nconst LoginPage = () => {\n  const location = useLocation<{ from: { pathname: string } }>();\n  const userEmail = useSelector((store) => store.user.email);\n  // const userToken = localStorage.getItem(\"refreshToken\");\n\n  const title = \"Вход\";\n  const links = (\n    <>\n      <span className={`text text_type_main-default`}>\n        Вы — новый пользователь?\n        <Link to={{ pathname: \"/register\" }}>Зарегистрироваться</Link>\n      </span>\n      <span className={`text text_type_main-default`}>\n        Забыли пароль?\n        <Link to={{ pathname: \"/forgot-password\" }}>Восстановить пароль</Link>\n      </span>\n    </>\n  );\n\n  if (userEmail) {\n    const { from } = location.state || { from: { pathname: \"/\" } };\n\n    return <Redirect to={from} />;\n  }\n\n  return <UserForm title={title} links={links} type=\"login\" />;\n};\n\nexport default LoginPage;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"../../hooks\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport UserForm from \"../../components/user-form\";\nimport { getUserData } from \"../../services/user-actions\";\nimport Loader from \"../../components/loader\";\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n  const userEmail = useSelector((store) => store.user.email);\n  const { getUserRequest } = useSelector((store) => store.user);\n\n  const title = \"Регистрация\";\n  const links = (\n    <>\n      <span className={`text text_type_main-default`}>\n        Уже зарегистрированы?\n        <Link to={{ pathname: \"/login\" }}>Войти</Link>\n      </span>\n    </>\n  );\n\n  useEffect(() => {\n    dispatch(getUserData());\n  }, []);\n\n  if (getUserRequest) {\n    return <Loader />;\n  }\n\n  if (userEmail && localStorage.getItem(\"refreshToken\")) {\n    return <Redirect to={{ pathname: \"/\" }} />;\n  }\n\n  return <UserForm title={title} links={links} type=\"register\" />;\n};\n\nexport default RegisterPage;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"../../hooks\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport UserForm from \"../../components/user-form\";\nimport { getUserData } from \"../../services/user-actions\";\nimport Loader from \"../../components/loader\";\n\nconst ForgotPasswordPage = () => {\n  const dispatch = useDispatch();\n  const userEmail = useSelector((store) => store.user.email);\n  const { getUserRequest } = useSelector((store) => store.user);\n\n  useEffect(() => {\n    dispatch(getUserData());\n  }, []);\n\n  if (getUserRequest) {\n    return <Loader />;\n  }\n\n  const title = \"Восстановление пароля\";\n  const links = (\n    <>\n      <span className={`text text_type_main-default`}>\n        Вспомнили пароль?\n        <Link to={{ pathname: \"/login\" }}>Войти</Link>\n      </span>\n    </>\n  );\n\n  if (userEmail && localStorage.getItem(\"refreshToken\")) {\n    return <Redirect to={{ pathname: \"/\" }} />;\n  }\n\n  return <UserForm title={title} links={links} type=\"forgot-password\" />;\n};\n\nexport default ForgotPasswordPage;\n","import React from \"react\";\nimport { useSelector } from \"../../hooks\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport UserForm from \"../../components/user-form\";\n\nconst ResetPasswordPage = () => {\n  const forgotSuccess = useSelector((store) => store.user.forgotSuccess);\n  const userToken = localStorage.getItem(\"refreshToken\");\n  const userEmail = useSelector((store) => store.user.email);\n\n  const title = \"Восстановление пароля\";\n  const links = (\n    <>\n      <span className={`text text_type_main-default`}>\n        Вспомнили пароль?\n        <Link to={{ pathname: \"/login\" }}>Войти</Link>\n      </span>\n    </>\n  );\n\n  if (userEmail && userToken) {\n    return <Redirect to={{ pathname: \"/\" }} />;\n  }\n\n  if (!forgotSuccess) {\n    return <Redirect to={{ pathname: \"/forgot-password\" }} />;\n  }\n\n  return <UserForm title={title} links={links} type=\"reset-password\" />;\n};\n\nexport default ResetPasswordPage;\n","import { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport React, { FC } from \"react\";\nimport styles from \"./feed-item.module.css\";\nimport {\n  calculateTotalPrice,\n  getOrderDate,\n  getOrderIngredients,\n} from \"../../../utils\";\nimport { useSelector } from \"../../../hooks\";\nimport { FeedPropsType } from \"./types\";\nimport { IngredientType } from \"../../../types\";\n\nconst textColor = {\n  done: \"#00CCCC\",\n  pending: \"#F2F2F3\",\n  cancel: \"#E52B1A\",\n};\n\nconst FeedItem: FC<FeedPropsType> = ({ item, isStatus }) => {\n  const { ingredients, status, name, createdAt, number } = item;\n\n  const allIngredients = useSelector(\n    (store) => store.burgerIngredients.ingredients\n  );\n\n  const itemIngredients = getOrderIngredients(allIngredients, ingredients);\n\n  const date = getOrderDate(createdAt);\n  const price = calculateTotalPrice(itemIngredients);\n\n  const maxAmount = 5;\n\n  return (\n    <div className={` mb-5 mr-2 ${styles.feed_item}`}>\n      <div className={` p-6 ${styles.numbers}`}>\n        <span className=\"text text_type_digits-default\">#{number}</span>\n        <span className=\"text text_type_main-default text_color_inactive\">\n          {date}\n        </span>\n      </div>\n      <div className={` pl-6 pb-6 pr-6 ${styles.name}`}>\n        <span className=\"text text_type_main-medium\">{name}</span>\n        {isStatus && (\n          <span\n            className=\"text text_type_main-default\"\n            style={{ color: textColor[status] }}\n          >\n            {status}\n          </span>\n        )}\n      </div>\n      <div className={`pl-6 pr-6 pb-6 ${styles.info}`}>\n        <ul className={`${styles.ingredients}`}>\n          {itemIngredients?.map((item: IngredientType, index: number) => {\n            const zIndex = maxAmount - index;\n            if (index < maxAmount) {\n              return (\n                <li\n                  key={index}\n                  className={`${styles.ingredient}`}\n                  style={{ zIndex: zIndex }}\n                >\n                  <img src={item.image_mobile} alt={item.name} />\n                </li>\n              );\n            }\n            if (index === maxAmount) {\n              return (\n                <li\n                  key={index}\n                  className={`${styles.ingredient}`}\n                  style={{ zIndex: zIndex }}\n                >\n                  <img\n                    src={item.image_mobile}\n                    alt={item.name}\n                    style={{\n                      opacity:\n                        itemIngredients.length > maxAmount + 1 ? \"0.4\" : \"1\",\n                    }}\n                  />\n                  {itemIngredients.length > maxAmount + 1 && (\n                    <span>+{itemIngredients.length - index - 1}</span>\n                  )}\n                </li>\n              );\n            }\n            if (index > maxAmount) return;\n          })}\n        </ul>\n        <div className={`text text_type_digits-default ${styles.price}`}>\n          <div className=\"mr-2\">{price}</div>\n          <CurrencyIcon type=\"primary\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FeedItem;\n","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport FeedItem from \"./feed-item\";\nimport styles from \"./feed.module.css\";\nimport { useSelector } from \"../../hooks\";\nimport { OrderType } from \"../../types\";\n\nconst Feed = () => {\n  const location = useLocation();\n\n  const messages = useSelector((store) => store.wsFeed.messages);\n\n  return (\n    <section className={`${styles.main}`}>\n      <ul className={`${styles.scroll}`}>\n        {messages?.orders &&\n          messages?.orders.map((item: OrderType, index: number) => (\n            <li key={index}>\n              <Link\n                to={{\n                  pathname: `/feed/${item.number}`,\n                  state: { background: location },\n                }}\n                className={styles.link}\n              >\n                <FeedItem item={item} isStatus={false} />\n              </Link>\n            </li>\n          ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default Feed;\n","import React from \"react\";\nimport { useSelector } from \"../../../hooks\";\nimport { divideIntoColumns, sortByStatus } from \"../../../utils\";\nimport styles from \"./feed-info.module.css\";\n\nconst FeedInfo = () => {\n  const messages = useSelector((store) => store.wsFeed.messages);\n\n  const statusColumns = sortByStatus(messages?.orders);\n\n  const doneColumns = divideIntoColumns(statusColumns?.done);\n  const pendingColumns = divideIntoColumns(statusColumns?.pending);\n\n  return (\n    <div className={` mt-5 mr-5 mb-5 ml-10 ${styles.main}`}>\n      <div className={`ml-4 ${styles.info}`}>\n        <div className={` ${styles.ready}`}>\n          <span className=\"text text_type_main-medium\">Готовы:</span>\n          <div\n            className={`text text_type_digits-default mt-2 ${styles.numbers} ${styles.color}`}\n          >\n            <ul>\n              {doneColumns &&\n                doneColumns.firstColumn.map((number, index) => (\n                  <li key={index}>{number}</li>\n                ))}\n            </ul>\n            <ul>\n              {doneColumns &&\n                doneColumns.secondColumn.map((number, index) => (\n                  <li key={index}>{number}</li>\n                ))}\n            </ul>\n          </div>\n        </div>\n        <div className={` ml-8 ${styles.preparing}`}>\n          <span className=\"text text_type_main-medium\">В работе:</span>\n          <div\n            className={`text text_type_digits-default mt-2 ${styles.numbers}`}\n          >\n            <ul>\n              {pendingColumns &&\n                pendingColumns.firstColumn.map((number, index) => (\n                  <li key={index}>{number}</li>\n                ))}\n            </ul>\n            <ul>\n              {pendingColumns &&\n                pendingColumns.secondColumn.map((number, index) => (\n                  <li key={index}>{number}</li>\n                ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n      <div className={`ml-4 mt-3 ${styles.total}`}>\n        <span className=\"text text_type_main-medium\">\n          Выполнено за все время:\n        </span>\n        <span className={`text text_type_digits-large ${styles.light}`}>\n          {messages?.total}\n        </span>\n      </div>\n      <div className={`ml-4 mt-10 ${styles.total}`}>\n        <span className=\"text text_type_main-medium\">\n          Выполнено за сегодня:\n        </span>\n        <span className={`text text_type_digits-large ${styles.light}`}>\n          {messages?.totalToday}\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default FeedInfo;\n","import { PayloadAction } from \"@reduxjs/toolkit\";\nimport { WSDataType } from \"../types\";\n\nconst INIT_CONNECTION: \"FEED/INIT_CONNECTION\" = `FEED/INIT_CONNECTION`;\nconst CLOSE_CONNECTION: \"FEED/CLOSE_CONNECTION\" = `FEED/CLOSE_CONNECTION`;\nconst CONNECTION_SUCCESS: \"FEED/CONNECTION_SUCCESS\" = `FEED/CONNECTION_SUCCESS`;\nconst CONNECTION_ERROR: \"FEED/CONNECTION_ERROR\" = `FEED/CONNECTION_ERROR`;\nconst CONNECTION_CLOSED: \"FEED/CONNECTION_CLOSED\" = `FEED/CONNECTION_CLOSED`;\nconst GET_MESSAGE: \"FEED/GET_MESSAGE\" = `FEED/GET_MESSAGE`;\n\nexport const wsFeedActions = {\n  wsInit: INIT_CONNECTION,\n  wsClose: CLOSE_CONNECTION,\n  wsSendMessage: \"\",\n  onOpen: CONNECTION_SUCCESS,\n  onClose: CONNECTION_CLOSED,\n  onError: CONNECTION_ERROR,\n  onMessage: GET_MESSAGE,\n};\n\nexport interface IWSInitConnection {\n  readonly type: typeof INIT_CONNECTION;\n}\nexport interface IWSCloseConnection {\n  readonly type: typeof CLOSE_CONNECTION;\n}\nexport interface IWSConnectionSuccess {\n  readonly type: typeof CONNECTION_SUCCESS;\n  payload: PayloadAction;\n}\nexport interface IWSConnectionError {\n  readonly type: typeof CONNECTION_ERROR;\n  payload: PayloadAction;\n}\nexport interface IWSConnectionClosed {\n  readonly type: typeof CONNECTION_CLOSED;\n  payload: PayloadAction;\n}\nexport interface IWSGetMessage {\n  readonly type: typeof GET_MESSAGE;\n  payload: WSDataType;\n}\n\nexport type WSFeedActionsType =\n  | IWSInitConnection\n  | IWSCloseConnection\n  | IWSConnectionSuccess\n  | IWSConnectionError\n  | IWSConnectionClosed\n  | IWSGetMessage;\n","import React, { useEffect } from \"react\";\nimport styles from \"./feed-page.module.css\";\nimport Feed from \"../../components/feed\";\nimport FeedInfo from \"../../components/feed/feed-info\";\nimport { useDispatch, useSelector } from \"../../hooks\";\nimport { wsFeedActions } from \"../../services/feed-actions\";\nimport Loader from \"../../components/loader\";\n\nconst FeedPage = () => {\n  const dispatch = useDispatch();\n  const messages = useSelector((store) => store.wsFeed.messages);\n\n  useEffect(() => {\n    dispatch({ type: wsFeedActions.wsInit });\n    return () => {\n      dispatch({ type: wsFeedActions.wsClose });\n    };\n  }, [dispatch]);\n\n  if (!messages) {\n    return (\n      <div className={styles.loader}>\n        <Loader />\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <div className={`text text_type_main-large ${styles.name}`}>\n        Лента заказов\n      </div>\n      <div className={styles.container}>\n        <Feed />\n        <FeedInfo />\n      </div>\n    </div>\n  );\n};\n\nexport default FeedPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./not-found-page.module.css\";\n\nconst NotFoundPage = () => {\n  return (\n    <div className={styles.notfound_id}>\n      <div className={styles.notfound}>\n        <div className={styles.notfound_404}>\n          <h1>404</h1>\n          <h2>Page not found</h2>\n        </div>\n        <Link to={{ pathname: \"/\" }}>Главная страница</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default NotFoundPage;\n","import {\n  Button,\n  Input,\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport React, { SyntheticEvent, useState } from \"react\";\nimport { useDispatch, useSelector } from \"../../hooks\";\nimport { updateUserData } from \"../../services/user-actions\";\nimport styles from \"./user-profile.module.css\";\n\nconst UserProfile = () => {\n  const dispatch = useDispatch();\n\n  const currentName = useSelector((store) => store.user.name);\n  const currentEmail = useSelector((store) => store.user.email);\n\n  const [emailValue, setEmailValue] = useState(currentEmail);\n  const [passwordValue, setPasswordValue] = useState(\"\");\n  const [nameValue, setNameValue] = useState(currentName);\n\n  const [isFocusEmail, setEmailFocus] = useState(false);\n  const [isFocusPassword, setPasswordFocus] = useState(false);\n  const [isFocusName, setNameFocus] = useState(false);\n\n  const handleCancel = (event: SyntheticEvent) => {\n    event.preventDefault();\n    setNameValue(currentName);\n    setEmailValue(currentEmail);\n    setPasswordValue(\"\");\n  };\n\n  const handleSave = (event: SyntheticEvent) => {\n    event.preventDefault();\n    dispatch(updateUserData(nameValue, emailValue, passwordValue));\n  };\n\n  const nameIcon = isFocusName ? \"CloseIcon\" : \"EditIcon\";\n  const emailIcon = isFocusEmail ? \"CloseIcon\" : \"EditIcon\";\n  const passwordIcon = isFocusPassword ? \"CloseIcon\" : \"EditIcon\";\n\n  const isDataChanged =\n    nameValue !== currentName ||\n    emailValue !== currentEmail ||\n    passwordValue.length > 0;\n\n  return (\n    <form className={`${styles.main}`} onSubmit={handleSave}>\n      <div className={`mb-6 `}>\n        <Input\n          type=\"text\"\n          placeholder=\"Имя\"\n          value={nameValue}\n          onChange={(e) => setNameValue(e.target.value)}\n          onFocus={() => setNameFocus(true)}\n          onBlur={() => setNameFocus(false)}\n          onIconClick={() => setNameValue(currentName)}\n          icon={nameIcon}\n        />\n      </div>\n      <div className={`mb-6 `}>\n        <Input\n          type=\"email\"\n          placeholder=\"Email\"\n          value={emailValue}\n          onChange={(e) => setEmailValue(e.target.value)}\n          onFocus={() => setEmailFocus(true)}\n          onBlur={() => setEmailFocus(false)}\n          onIconClick={() => setEmailValue(currentEmail)}\n          icon={emailIcon}\n        />\n      </div>\n      <div>\n        <Input\n          type=\"password\"\n          placeholder=\"Пароль\"\n          value={passwordValue}\n          onChange={(e) => setPasswordValue(e.target.value)}\n          onFocus={() => setPasswordFocus(true)}\n          onBlur={() => setPasswordFocus(false)}\n          onIconClick={() => setPasswordValue(\"\")}\n          icon={passwordIcon}\n        />\n      </div>\n      {isDataChanged ? (\n        <div className=\"mt-6\">\n          <span className={styles.button} onClick={handleCancel}>\n            Отмена\n          </span>\n          <Button type=\"primary\" size=\"medium\">\n            Сохранить\n          </Button>\n        </div>\n      ) : null}\n    </form>\n  );\n};\n\nexport default UserProfile;\n","import { PayloadAction } from \"@reduxjs/toolkit\";\nimport { WSDataType } from \"../types\";\n\nconst INIT_CONNECTION: \"ORDERS/INIT_CONNECTION\" = `ORDERS/INIT_CONNECTION`;\nconst CLOSE_CONNECTION: \"ORDERS/CLOSE_CONNECTION\" = `ORDERS/CLOSE_CONNECTION`;\nconst CONNECTION_SUCCESS: \"ORDERS/CONNECTION_SUCCESS\" = `ORDERS/CONNECTION_SUCCESS`;\nconst CONNECTION_ERROR: \"ORDERS/CONNECTION_ERROR\" = `ORDERS/CONNECTION_ERROR`;\nconst CONNECTION_CLOSED: \"ORDERS/CONNECTION_CLOSED\" = `ORDERS/CONNECTION_CLOSED`;\nconst GET_MESSAGE: \"ORDERS/GET_MESSAGE\" = `ORDERS/GET_MESSAGE`;\n\nexport const wsOrdersActions = {\n  wsInit: INIT_CONNECTION,\n  wsClose: CLOSE_CONNECTION,\n  wsSendMessage: \"\",\n  onOpen: CONNECTION_SUCCESS,\n  onClose: CONNECTION_CLOSED,\n  onError: CONNECTION_ERROR,\n  onMessage: GET_MESSAGE,\n};\n\nexport interface IWSInitConnection {\n  readonly type: typeof INIT_CONNECTION;\n}\nexport interface IWSCloseConnection {\n  readonly type: typeof CLOSE_CONNECTION;\n}\nexport interface IWSConnectionSuccess {\n  readonly type: typeof CONNECTION_SUCCESS;\n  payload: PayloadAction;\n}\nexport interface IWSConnectionError {\n  readonly type: typeof CONNECTION_ERROR;\n  payload: PayloadAction;\n}\nexport interface IWSConnectionClosed {\n  readonly type: typeof CONNECTION_CLOSED;\n  payload: PayloadAction;\n}\nexport interface IWSGetMessage {\n  readonly type: typeof GET_MESSAGE;\n  payload: WSDataType;\n}\n\nexport type WSOrderActionsType =\n  | IWSInitConnection\n  | IWSCloseConnection\n  | IWSConnectionSuccess\n  | IWSConnectionError\n  | IWSConnectionClosed\n  | IWSGetMessage;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"../../../hooks\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { wsOrdersActions } from \"../../../services/orders-actions\";\nimport { OrderType } from \"../../../types\";\nimport FeedItem from \"../feed-item\";\nimport styles from \"./user-feed.module.css\";\nimport Loader from \"../../loader\";\n\nconst UserFeed = () => {\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch({ type: wsOrdersActions.wsInit });\n    return () => {\n      dispatch({ type: wsOrdersActions.wsClose });\n    };\n  }, [dispatch]);\n\n  const messages = useSelector((store) => store.wsOrders.messages);\n\n  if (!messages) {\n    return (\n      <div className={styles.loader}>\n        <Loader />\n      </div>\n    );\n  }\n\n  return (\n    <section className={`${styles.main}`}>\n      <ul className={`${styles.scroll}`}>\n        {messages?.orders &&\n          messages?.orders.map((item: OrderType, index: number) => (\n            <li key={index}>\n              <Link\n                to={{\n                  pathname: `/profile/orders/${item.number}`,\n                  state: { background: location },\n                }}\n                className={styles.link}\n              >\n                <FeedItem item={item} isStatus={true} />\n              </Link>\n            </li>\n          ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default UserFeed;\n","import React from \"react\";\nimport styles from \"./profile-page.module.css\";\nimport { NavLink, Switch, Route } from \"react-router-dom\";\nimport UserProfile from \"../../components/user-profile\";\nimport { useDispatch } from \"../../hooks\";\nimport { userLogout } from \"../../services/user-actions\";\nimport UserFeed from \"../../components/feed/user-feed\";\n\nconst ProfilePage = () => {\n  const dispatch = useDispatch();\n\n  const handleLogout = () => {\n    dispatch(userLogout());\n  };\n\n  return (\n    <div className={`${styles.main}`}>\n      <div className={`pt-6 mr-10 ${styles.menu}`}>\n        <NavLink\n          exact\n          to=\"/profile\"\n          className={`text text_type_main-medium text_color_inactive ${styles.nav}`}\n          activeClassName={styles.active}\n        >\n          Профиль\n        </NavLink>\n        <NavLink\n          to=\"/profile/orders\"\n          className={`text text_type_main-medium text_color_inactive ${styles.nav}`}\n          activeClassName={styles.active}\n        >\n          История заказов\n        </NavLink>\n        <NavLink\n          exact\n          to=\"/login\"\n          className={`text text_type_main-medium text_color_inactive ${styles.nav}`}\n          activeClassName={styles.active}\n          onClick={handleLogout}\n        >\n          Выход\n        </NavLink>\n        <div\n          className={`text text_type_main-default text_color_inactive ${styles.text}`}\n        >\n          <span>В этом разделе вы можете</span>\n          <span>изменить свои персональные данные</span>\n        </div>\n      </div>\n      <div className={`ml-5 ${styles.content}`}>\n        <Switch>\n          <Route path=\"/profile\" exact={true} component={UserProfile} />\n          <Route path=\"/profile/orders\" exact={true}>\n            <UserFeed />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfilePage;\n","import React, { FC, useEffect } from \"react\";\nimport styles from \"./order.module.css\";\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { useDispatch, useSelector } from \"../../hooks\";\nimport { useRouteMatch } from \"react-router\";\nimport { getOrder } from \"../../services/actions\";\nimport {\n  calculateTotalPrice,\n  getOrderDate,\n  getOrderIngredients,\n} from \"../../utils\";\nimport Loader from \"../loader\";\nimport { OrderType } from \"../../types\";\n\nconst textColor = {\n  done: \"#00CCCC\",\n  pending: \"#F2F2F3\",\n  cancel: \"#E52B1A\",\n};\n\nconst Order: FC<{ orderNumber: string }> = ({ orderNumber }) => {\n  const isFeed = !!useRouteMatch(\"/feed\");\n  const dispatch = useDispatch();\n\n  let currentOrder;\n\n  const feedOrders = useSelector((store) => store.wsFeed.messages);\n\n  const userOrders = useSelector((store) => store.wsOrders.messages);\n\n  const order = useSelector((store) => store.order.currentOrder);\n\n  const allIngredients = useSelector(\n    (store) => store.burgerIngredients.ingredients\n  );\n\n  currentOrder = (isFeed ? feedOrders : userOrders)?.orders?.find(\n    (order: OrderType) => order.number === +orderNumber\n  );\n\n  useEffect(() => {\n    if (!feedOrders && !userOrders) {\n      dispatch(getOrder(orderNumber));\n    }\n  }, []);\n\n  if (order) {\n    currentOrder = order;\n  }\n\n  if (!currentOrder) {\n    return <Loader />;\n  }\n\n  const { name, number, createdAt, status, ingredients } = currentOrder;\n\n  const orderIngredients = getOrderIngredients(allIngredients, ingredients);\n\n  const date = getOrderDate(createdAt);\n  const price = calculateTotalPrice(orderIngredients);\n\n  const orderIngredientsSet = orderIngredients?.filter(\n    (ingredient, index) => orderIngredients.indexOf(ingredient) === index\n  );\n\n  if (!ingredients) {\n    return <Loader />;\n  }\n\n  return (\n    <div className={` mb-5 mr-2 ${styles.order}`}>\n      <div className={` pb-6 ${styles.number}`}>\n        <span className=\"text text_type_digits-default\">#{number}</span>\n      </div>\n      <div className={`mt-6 pb-6 ${styles.name}`}>\n        <span className=\"text text_type_main-medium\">{name}</span>\n        <span\n          className=\"text text_type_main-default mt-5\"\n          style={{ color: textColor[status] }}\n        >\n          {status}\n        </span>\n      </div>\n      <div className={`${styles.info}`}>\n        <span className=\"text text_type_main-medium \">Состав:</span>\n        <ul className={`mt-6 ${styles.ingredients}`}>\n          {orderIngredientsSet?.map((item, index) => (\n            <li key={index} className={`mb-4 ${styles.item}`}>\n              <div className={`${styles.row}`}>\n                <div className={`mr-4 ${styles.ingredient}`}>\n                  <img src={item.image_mobile} alt={item.name} />\n                </div>\n                <span className=\"text text_type_main-default\">{item.name}</span>\n              </div>\n              <div className={`mr-6 ${styles.price}`}>\n                <div className={`text text_type_digits-default mr-2`}>\n                  {item.count} x {item.price}\n                </div>\n                <CurrencyIcon type=\"primary\" />\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div className={`mt-10 ${styles.date}`}>\n        <span className=\"text text_type_main-default text_color_inactive\">\n          {date}\n        </span>\n        <div className={`text text_type_digits-default ${styles.price}`}>\n          <div className=\"mr-2\">{price}</div>\n          <CurrencyIcon type=\"primary\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Order;\n","import React from \"react\";\nimport { useParams } from \"react-router\";\nimport Order from \"../../components/order\";\n\nconst OrderPage = () => {\n  const { orderNumber } = useParams<{ orderNumber: string }>();\n  return <Order orderNumber={orderNumber} />;\n};\n\nexport default OrderPage;\n","import React, { FC } from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"../../hooks\";\nimport { getUserData } from \"../../services/user-actions\";\nimport Loader from \"../loader\";\n\nconst ProtectedRoute: FC<{\n  path: string;\n  exact?: boolean;\n}> = ({ children, ...rest }) => {\n  const dispatch = useDispatch();\n  const userEmail = useSelector((store) => store.user.email);\n  const isToken = !!localStorage.getItem(\"refreshToken\");\n\n  const getUserRequest = useSelector((store) => store.user.getUserRequest);\n\n  useEffect(() => {\n    if (isToken && !userEmail) {\n      dispatch(getUserData());\n    }\n  }, []);\n\n  if (getUserRequest && isToken && !userEmail) {\n    return (\n      <div\n        style={{\n          width: \"100%\",\n          height: \"80vh\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Loader />\n      </div>\n    );\n  }\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isToken ? (\n          children\n        ) : (\n          <Redirect to={{ pathname: \"/login\", state: { from: location } }} />\n        )\n      }\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","import React, { useEffect } from \"react\";\nimport { Switch, Route, useLocation, useHistory } from \"react-router-dom\";\nimport AppHeader from \"../app-header\";\nimport Popup from \"../popup\";\nimport IngredientDetails from \"../ingredient-details\";\nimport OrderDetails from \"../order-details\";\nimport HomePage from \"../../pages/home-page\";\nimport LoginPage from \"../../pages/login-page\";\nimport RegisterPage from \"../../pages/register-page\";\nimport ForgotPasswordPage from \"../../pages/forgot-password-page\";\nimport ResetPasswordPage from \"../../pages/reset-password-page\";\nimport FeedPage from \"../../pages/feed-page\";\nimport NotFoundPage from \"../../pages/not-found-page\";\nimport ProfilePage from \"../../pages/profile-page\";\nimport OrderPage from \"../../pages/order-page\";\nimport ProtectedRoute from \"../protected-route\";\nimport ingredientDetails from \"../ingredient-details\";\nimport { useDispatch, useSelector } from \"../../hooks\";\nimport { getBurgerIngredients } from \"../../services/actions\";\nimport { LocationType } from \"../../types\";\n\nfunction App() {\n  const location = useLocation<LocationType>();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const isIngredientsLoaded = useSelector(\n    (store) => store.burgerIngredients.isIngredientsLoaded\n  );\n\n  useEffect(() => {\n    if (!isIngredientsLoaded) {\n      dispatch(getBurgerIngredients());\n    }\n  }, [dispatch, isIngredientsLoaded]);\n\n  let background =\n    (history.action === \"PUSH\" || history.action === \"REPLACE\") &&\n    location.state &&\n    location.state.background;\n\n  return (\n    <div>\n      <AppHeader />\n      <Switch location={background || location}>\n        <Route path=\"/\" exact={true} component={HomePage} />\n        <Route path=\"/login\" exact={true} component={LoginPage} />\n        <Route path=\"/register\" exact={true} component={RegisterPage} />\n        <Route\n          path=\"/forgot-password\"\n          exact={true}\n          component={ForgotPasswordPage}\n        />\n        <Route\n          path=\"/reset-password\"\n          exact={true}\n          component={ResetPasswordPage}\n        />\n        <Route path=\"/feed\" exact={true} component={FeedPage} />\n        <Route path=\"/feed/:orderNumber\" exact={true} component={OrderPage} />\n        <Route\n          path=\"/ingredients/:id\"\n          exact={true}\n          component={ingredientDetails}\n        />\n        <ProtectedRoute path=\"/profile/orders/:orderNumber\" exact={true}>\n          <OrderPage />\n        </ProtectedRoute>\n        <ProtectedRoute path=\"/profile\">\n          <ProfilePage />\n        </ProtectedRoute>\n\n        <Route component={NotFoundPage} />\n      </Switch>\n      {background && (\n        <>\n          <Route\n            path=\"/ingredients/:id\"\n            children={\n              <Popup title=\"Детали ингредиента\">\n                <IngredientDetails />\n              </Popup>\n            }\n          />\n          <Route\n            path=\"/feed/:orderNumber\"\n            children={\n              <Popup>\n                <OrderPage />\n              </Popup>\n            }\n          />\n          <Route\n            path=\"/order\"\n            exact={true}\n            children={\n              <Popup>\n                <OrderDetails />\n              </Popup>\n            }\n          />\n          <ProtectedRoute\n            path=\"/profile/orders/:orderNumber\"\n            exact={true}\n            children={\n              <Popup>\n                <OrderPage />\n              </Popup>\n            }\n          />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { IngredientType } from \"../../types\";\nimport {\n  GetIngredientsActions,\n  GET_INGREDIENTS_FAILURE,\n  GET_INGREDIENTS_REQUEST,\n  GET_INGREDIENTS_SUCCESS,\n} from \"../actions\";\n\ntype IngredientsState = {\n  ingredients: IngredientType[];\n  ingredientsRequest: boolean;\n  isIngredientsLoaded: boolean;\n  ingredientsFailure: boolean;\n};\n\nconst initialState: IngredientsState = {\n  ingredients: [],\n  ingredientsRequest: false,\n  isIngredientsLoaded: false,\n  ingredientsFailure: false,\n};\n\nconst BurgerIngredients = (\n  state = initialState,\n  action: GetIngredientsActions\n): IngredientsState => {\n  switch (action.type) {\n    case GET_INGREDIENTS_REQUEST:\n      return {\n        ...state,\n        ingredientsRequest: true,\n      };\n    case GET_INGREDIENTS_SUCCESS:\n      return {\n        ...state,\n        ingredients: action.payload,\n        ingredientsRequest: false,\n        isIngredientsLoaded: true,\n        ingredientsFailure: false,\n      };\n    case GET_INGREDIENTS_FAILURE:\n      return {\n        ...state,\n        ingredientsRequest: false,\n        ingredientsFailure: true,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default BurgerIngredients;\n","import { OrderType } from \"../../types\";\nimport {\n  DELETE_ORDER_DETAILS,\n  GET_ORDER_DETAILS_FAILURE,\n  GET_ORDER_DETAILS_REQUEST,\n  GET_ORDER_DETAILS_SUCCESS,\n  GET_ORDER_FAILURE,\n  GET_ORDER_REQUEST,\n  GET_ORDER_SUCCESS,\n  OrderActions,\n  SET_ORDER_INVALID,\n} from \"../actions\";\n\ntype OrderState = {\n  orderNumber: number | null;\n  isOrderInvalid: boolean;\n  orderNumberRequest: boolean;\n  orderNumberFailure: boolean;\n\n  currentOrder: OrderType | null;\n  orderRequest: boolean;\n  orderFailure: boolean;\n\n  isOrdered: boolean;\n};\n\nconst initialState: OrderState = {\n  orderNumber: null,\n  isOrderInvalid: false,\n  orderNumberRequest: false,\n  orderNumberFailure: false,\n\n  currentOrder: null,\n  orderRequest: false,\n  orderFailure: false,\n\n  isOrdered: false,\n};\n\nconst Order = (state = initialState, action: OrderActions): OrderState => {\n  switch (action.type) {\n    case GET_ORDER_DETAILS_REQUEST:\n      return {\n        ...state,\n        orderNumberRequest: true,\n      };\n    case GET_ORDER_DETAILS_SUCCESS:\n      return {\n        ...state,\n        orderNumber: action.payload,\n        orderNumberRequest: false,\n        orderNumberFailure: false,\n      };\n    case GET_ORDER_DETAILS_FAILURE:\n      return {\n        ...state,\n        orderNumberRequest: false,\n        orderNumberFailure: true,\n      };\n    case DELETE_ORDER_DETAILS:\n      return {\n        ...state,\n        isOrdered: action.payload,\n        orderNumber: null,\n      };\n    case SET_ORDER_INVALID:\n      return {\n        ...state,\n        isOrderInvalid: action.payload,\n      };\n    case GET_ORDER_REQUEST:\n      return {\n        ...state,\n        orderRequest: true,\n      };\n    case GET_ORDER_SUCCESS:\n      return {\n        ...state,\n        currentOrder: action.payload,\n        orderRequest: false,\n        orderFailure: false,\n      };\n    case GET_ORDER_FAILURE:\n      return {\n        ...state,\n        orderRequest: false,\n        orderFailure: true,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default Order;\n","import {\n  ADD_CONSTRUCTOR_ITEM,\n  BurgerConstructorActions,\n  DELETE_CONSTRUCTOR_ITEM,\n  DELETE_ORDER,\n  REORDER_CONSTRUCTOR_ITEMS,\n} from \"../actions\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { IngredientType, IngredientWithKeyType } from \"../../types\";\n\ntype ConstructorState = {\n  burgerStuffing: IngredientWithKeyType[];\n  bun: IngredientType | null;\n};\n\nconst initialState: ConstructorState = {\n  burgerStuffing: [],\n  bun: null,\n};\n\nconst BurgerConstructor = (\n  state = initialState,\n  action: BurgerConstructorActions\n): ConstructorState => {\n  switch (action.type) {\n    case ADD_CONSTRUCTOR_ITEM: {\n      if (action.payload.type === \"bun\") {\n        return {\n          ...state,\n          bun: action.payload,\n        };\n      }\n      return {\n        ...state,\n        burgerStuffing: [\n          ...state.burgerStuffing,\n          { key: uuidv4(), item: action.payload },\n        ],\n      };\n    }\n    case DELETE_CONSTRUCTOR_ITEM:\n      return {\n        ...state,\n        burgerStuffing: [...state.burgerStuffing].filter((item) => {\n          return item.key !== action.payload.key;\n        }),\n      };\n    case REORDER_CONSTRUCTOR_ITEMS: {\n      const { toIndex, fromIndex } = action.payload;\n      const burgerStuffing = [...state.burgerStuffing];\n      burgerStuffing.splice(toIndex, 0, burgerStuffing.splice(fromIndex, 1)[0]);\n      return {\n        ...state,\n        burgerStuffing,\n      };\n    }\n    case DELETE_ORDER:\n      return {\n        ...state,\n        burgerStuffing: [],\n        bun: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default BurgerConstructor;\n","import {\n  FORGOT_PASSWORD_FAILURE,\n  FORGOT_PASSWORD_REQUEST,\n  FORGOT_PASSWORD_SUCCESS,\n  GET_USER_FAILURE,\n  GET_USER_REQUEST,\n  GET_USER_SUCCESS,\n  LOGIN_FAILURE,\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGOUT_FAILURE,\n  LOGOUT_REQUEST,\n  LOGOUT_SUCCESS,\n  REFRESH_TOKEN_FAILURE,\n  REFRESH_TOKEN_REQUEST,\n  REFRESH_TOKEN_SUCCESS,\n  REGISTER_FAILURE,\n  REGISTER_REQUEST,\n  REGISTER_SUCCESS,\n  RESET_PASSWORD_FAILURE,\n  RESET_PASSWORD_REQUEST,\n  RESET_PASSWORD_SUCCESS,\n  UPDATE_USER_FAILURE,\n  UPDATE_USER_REQUEST,\n  UPDATE_USER_SUCCESS,\n  UserActions,\n} from \"../user-actions\";\n\ntype UserState = {\n  email: string;\n  name: string;\n\n  registrationRequest: boolean;\n  registrationFailure: boolean;\n\n  loginRequest: boolean;\n  loginFailure: boolean;\n\n  logoutRequest: boolean;\n  logoutFailure: boolean;\n\n  getUserRequest: boolean;\n  getUserFailure: boolean;\n\n  updateRequest: boolean;\n  updateFailure: boolean;\n\n  forgotRequest: boolean;\n  forgotSuccess: boolean;\n  forgotFailure: boolean;\n\n  resetRequest: boolean;\n  resetFailure: boolean;\n\n  tokenRefreshRequest: boolean;\n  tokenRefreshSuccess: boolean;\n  tokenRefreshFailure: boolean;\n};\n\nconst initialState: UserState = {\n  email: \"\",\n  name: \"\",\n\n  registrationRequest: false,\n  registrationFailure: false,\n\n  loginRequest: false,\n  loginFailure: false,\n\n  logoutRequest: false,\n  logoutFailure: false,\n\n  getUserRequest: false,\n  getUserFailure: false,\n\n  updateRequest: false,\n  updateFailure: false,\n\n  forgotRequest: false,\n  forgotSuccess: false,\n  forgotFailure: false,\n\n  resetRequest: false,\n  resetFailure: false,\n\n  tokenRefreshRequest: false,\n  tokenRefreshSuccess: false,\n  tokenRefreshFailure: false,\n};\n\nconst User = (state = initialState, action: UserActions): UserState => {\n  switch (action.type) {\n    case REGISTER_REQUEST:\n      return {\n        ...state,\n        registrationRequest: true,\n        registrationFailure: false,\n      };\n    case REGISTER_SUCCESS:\n      return {\n        ...state,\n        name: action.payload.user.name,\n        email: action.payload.user.email,\n        registrationRequest: false,\n        registrationFailure: false,\n      };\n    case REGISTER_FAILURE:\n      return {\n        ...state,\n        registrationRequest: false,\n        registrationFailure: true,\n      };\n    case LOGIN_REQUEST:\n      return {\n        ...state,\n        loginRequest: true,\n        loginFailure: false,\n      };\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        name: action.payload.user.name,\n        email: action.payload.user.email,\n        loginRequest: false,\n        loginFailure: false,\n      };\n    case LOGIN_FAILURE:\n      return {\n        ...state,\n        loginRequest: false,\n        loginFailure: true,\n      };\n    case LOGOUT_REQUEST:\n      return {\n        ...state,\n        logoutRequest: true,\n        logoutFailure: false,\n      };\n    case LOGOUT_SUCCESS:\n      return {\n        ...state,\n        name: \"\",\n        email: \"\",\n        logoutRequest: false,\n        logoutFailure: false,\n      };\n    case LOGOUT_FAILURE:\n      return {\n        ...state,\n        logoutRequest: false,\n        logoutFailure: true,\n      };\n    case GET_USER_REQUEST:\n      return {\n        ...state,\n        getUserRequest: true,\n        getUserFailure: false,\n      };\n    case GET_USER_SUCCESS:\n      return {\n        ...state,\n        name: action.payload.user.name,\n        email: action.payload.user.email,\n        getUserRequest: false,\n        getUserFailure: false,\n      };\n    case GET_USER_FAILURE:\n      return {\n        ...state,\n        getUserRequest: false,\n        getUserFailure: true,\n      };\n    case UPDATE_USER_REQUEST:\n      return {\n        ...state,\n        updateRequest: true,\n        updateFailure: false,\n      };\n    case UPDATE_USER_SUCCESS:\n      return {\n        ...state,\n        name: action.payload.user.name,\n        email: action.payload.user.email,\n        updateRequest: false,\n        updateFailure: false,\n      };\n    case UPDATE_USER_FAILURE:\n      return {\n        ...state,\n        updateRequest: false,\n        updateFailure: true,\n      };\n    case FORGOT_PASSWORD_REQUEST:\n      return {\n        ...state,\n        forgotRequest: true,\n        forgotSuccess: false,\n        forgotFailure: false,\n      };\n    case FORGOT_PASSWORD_SUCCESS:\n      return {\n        ...state,\n        forgotRequest: false,\n        forgotSuccess: true,\n        forgotFailure: false,\n      };\n    case FORGOT_PASSWORD_FAILURE:\n      return {\n        ...state,\n        forgotRequest: false,\n        forgotSuccess: false,\n        forgotFailure: true,\n      };\n    case RESET_PASSWORD_REQUEST:\n      return {\n        ...state,\n        resetRequest: true,\n        resetFailure: false,\n      };\n    case RESET_PASSWORD_SUCCESS:\n      return {\n        ...state,\n        resetRequest: false,\n        resetFailure: false,\n      };\n    case RESET_PASSWORD_FAILURE:\n      return {\n        ...state,\n        resetRequest: false,\n        resetFailure: true,\n      };\n    case REFRESH_TOKEN_REQUEST:\n      return {\n        ...state,\n        tokenRefreshRequest: true,\n        tokenRefreshSuccess: false,\n        tokenRefreshFailure: false,\n      };\n    case REFRESH_TOKEN_SUCCESS:\n      return {\n        ...state,\n        tokenRefreshRequest: false,\n        tokenRefreshSuccess: true,\n        tokenRefreshFailure: false,\n      };\n    case REFRESH_TOKEN_FAILURE:\n      return {\n        ...state,\n        tokenRefreshRequest: false,\n        tokenRefreshSuccess: false,\n        tokenRefreshFailure: true,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default User;\n","import { PayloadAction } from \"@reduxjs/toolkit\";\nimport { WSDataType } from \"../../types\";\nimport { wsFeedActions, WSFeedActionsType } from \"../feed-actions\";\n\ntype FeedState = {\n  wsConnected: boolean;\n  error: PayloadAction | null;\n  messages: WSDataType | null;\n};\n\nconst initialState: FeedState = {\n  wsConnected: false,\n  error: null,\n  messages: null,\n};\n\nconst { onOpen, onClose, onError, onMessage } = wsFeedActions;\n\nconst wsFeed = (state = initialState, action: WSFeedActionsType): FeedState => {\n  switch (action.type) {\n    case onOpen:\n      return {\n        ...state,\n        wsConnected: true,\n      };\n    case onError:\n      return {\n        ...state,\n        error: action.payload,\n        wsConnected: false,\n      };\n    case onClose:\n      return {\n        ...state,\n        wsConnected: false,\n      };\n    case onMessage:\n      return {\n        ...state,\n        messages: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default wsFeed;\n","import { PayloadAction } from \"@reduxjs/toolkit\";\nimport { WSDataType } from \"../../types\";\nimport { WSOrderActionsType, wsOrdersActions } from \"../orders-actions\";\n\ntype OrdersState = {\n  wsConnected: boolean;\n  error: PayloadAction | null;\n  messages: WSDataType | null;\n};\n\nconst initialState: OrdersState = {\n  wsConnected: false,\n  error: null,\n  messages: null,\n};\n\nconst { onOpen, onClose, onError, onMessage } = wsOrdersActions;\n\nconst wsOrders = (\n  state = initialState,\n  action: WSOrderActionsType\n): OrdersState => {\n  switch (action.type) {\n    case onOpen:\n      return {\n        ...state,\n        wsConnected: true,\n      };\n    case onError:\n      return {\n        ...state,\n        error: action.payload,\n        wsConnected: false,\n      };\n    case onClose:\n      return {\n        ...state,\n        wsConnected: false,\n      };\n    case onMessage:\n      return {\n        ...state,\n        messages: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default wsOrders;\n","import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\nimport { createBrowserHistory } from \"history\";\nimport burgerIngredients from \"./burger-ingredients\";\nimport order from \"./order\";\nimport burgerConstructor from \"./burger-constructor\";\nimport user from \"./user\";\nimport wsFeed from \"./ws-feed\";\nimport wsOrders from \"./ws-orders\";\n\nexport const history = createBrowserHistory();\n\nexport const rootReducer = combineReducers({\n  router: connectRouter(history),\n  burgerIngredients,\n  order,\n  burgerConstructor,\n  user,\n  wsOrders,\n  wsFeed,\n});\n","import { AnyAction, MiddlewareAPI } from \"redux\";\nimport { WSActions } from \"../../types\";\n\nexport const socketMiddleware = (\n  wsUrl: string | (() => string),\n  wsActions: WSActions\n) => {\n  return (store: MiddlewareAPI) => {\n    let socket: WebSocket | null = null;\n\n    return (next: (i: AnyAction) => void) => (action: AnyAction) => {\n      const { dispatch } = store;\n      const { type, payload } = action;\n      const {\n        wsInit,\n        wsClose,\n        wsSendMessage,\n        onOpen,\n        onClose,\n        onError,\n        onMessage,\n      } = wsActions;\n\n      if (type === wsInit) {\n        socket = new WebSocket(typeof wsUrl === \"function\" ? wsUrl() : wsUrl);\n\n        socket.onopen = (event) => {\n          dispatch({ type: onOpen, payload: event });\n        };\n\n        socket.onerror = (event) => {\n          dispatch({ type: onError, payload: event });\n        };\n\n        socket.onmessage = (event) => {\n          const { data } = event;\n          const parsedData = JSON.parse(data);\n\n          dispatch({\n            type: onMessage,\n            payload: parsedData,\n          });\n        };\n\n        socket.onclose = (event) => {\n          dispatch({ type: onClose, payload: event });\n        };\n      }\n\n      if (wsClose && type === wsClose && socket) {\n        socket.close();\n      }\n\n      if (wsSendMessage && type === wsSendMessage && socket) {\n        socket.send(JSON.stringify(payload));\n      }\n\n      next(action);\n    };\n  };\n};\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { history, rootReducer } from \"./reducer\";\nimport * as api from \"../utils/burger-api\";\nimport { wsFeedActions } from \"./feed-actions\";\nimport { wsOrdersActions } from \"./orders-actions\";\nimport { socketMiddleware } from \"./middleware/socketMiddleware\";\n\nconst enhancer = applyMiddleware(\n  thunk,\n  routerMiddleware(history),\n  socketMiddleware(api.BURGER_API_WSS_FEED, wsFeedActions),\n  socketMiddleware(api.getWssOrderUrlWithToken, wsOrdersActions)\n);\n\nexport default createStore(rootReducer, composeWithDevTools(enhancer));\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport \"./index.css\";\nimport App from \"./components/app\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./services/store\";\nimport { history } from \"./services/reducer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n        <App />\n      </ConnectedRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"feed-info_main__2iU33\",\"info\":\"feed-info_info__1GQJ5\",\"numbers\":\"feed-info_numbers__l47dp\",\"ready\":\"feed-info_ready__2X6Rh\",\"color\":\"feed-info_color__350wi\",\"preparing\":\"feed-info_preparing__Gf5Sb\",\"total\":\"feed-info_total__31hUk\",\"light\":\"feed-info_light__34KOx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order\":\"order_order__stKqY\",\"row\":\"order_row__2Ujkz\",\"info\":\"order_info__dv1OD\",\"ingredients\":\"order_ingredients__29iXq\",\"ingredient\":\"order_ingredient__1iyCa\",\"item\":\"order_item__1w_48\",\"number\":\"order_number__39UAz\",\"price\":\"order_price__39LU_\",\"name\":\"order_name__gbsM4\",\"date\":\"order_date__2f1k2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"profile-page_main__ZZ0RV\",\"menu\":\"profile-page_menu__1T6Lh\",\"content\":\"profile-page_content__1C-l0\",\"nav\":\"profile-page_nav__JgMu0\",\"active\":\"profile-page_active__39tj6\",\"text\":\"profile-page_text__18xE_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feed_item\":\"feed-item_feed_item__iOV5m\",\"ingredients\":\"feed-item_ingredients__25Oep\",\"ingredient\":\"feed-item_ingredient__3XMhJ\",\"info\":\"feed-item_info__2qf40\",\"numbers\":\"feed-item_numbers__1jy95\",\"price\":\"feed-item_price__3tcOk\",\"name\":\"feed-item_name__mQSQw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"app-header_menu__3lCml\",\"active\":\"app-header_active__1vqA2\",\"logo\":\"app-header_logo__1n5J1\",\"nav_div\":\"app-header_nav_div__1hKta\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"details\":\"ingredient-details_details__2-ZMQ\",\"nutrition\":\"ingredient-details_nutrition__z2FU4\",\"item\":\"ingredient-details_item__fYd_w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"loader_loading__1ykC0\",\"dot\":\"loader_dot__Jdq1u\",\"wave\":\"loader_wave__DlnuS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"user-form_main__m3HCj\",\"form\":\"user-form_form__2ISHO\",\"link\":\"user-form_link__3nsrZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"order-details_main__2a1_D\",\"error_text\":\"order-details_error_text__1zWgO\",\"shadow\":\"order-details_shadow__jhh8a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"burger-ingredients_menu__1WG8B\",\"container\":\"burger-ingredients_container__AgGcc\",\"link\":\"burger-ingredients_link__2eRul\",\"scroll_menu\":\"burger-ingredients_scroll_menu__4_n5N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"user-feed_main__1BRCv\",\"link\":\"user-feed_link__1PUY7\",\"scroll\":\"user-feed_scroll__3yU3t\",\"loader\":\"user-feed_loader__2ngrI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"modal_container__24KkV\",\"inside\":\"modal_inside__3cPQc\",\"header\":\"modal_header__2fFNh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"menu-item_item__xmvPc\",\"price\":\"menu-item_price__3fyjv\",\"title\":\"menu-item_title__27pAv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"feed-page_container__1D70E\",\"name\":\"feed-page_name__Hhp2L\",\"loader\":\"feed-page_loader__3VKsj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"feed_main__3rniw\",\"link\":\"feed_link__1zqUC\",\"scroll\":\"feed_scroll__2omXm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notfound_id\":\"not-found-page_notfound_id__1Yy2H\",\"notfound\":\"not-found-page_notfound__2kzwh\",\"notfound_404\":\"not-found-page_notfound_404__1l984\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"user-profile_main__2HATH\",\"button\":\"user-profile_button__6MGna\"};"],"sourceRoot":""}